module Main

exports
  sorts
        Program Function Expr Binary Apply IfThenElse Atom Ops 
  context-free syntax
        f::Function+ -> Program

        n::ID a::ID+ "=" e::Expr NEWLINE+ -> Function

        b::Binary -> Expr
        a::Apply -> Expr
        i::IfThenElse -> Expr

        l::Atom (o::Ops r::Atom)* -> Binary

        i::ID a::Atom+ -> Apply

        "if" c::Expr "then" e1::Expr "else" e2::Expr -> IfThenElse

        ID -> Atom
        INT -> Atom
        "(" e::Expr ")" -> Atom

        "==" -> Ops
        "+" -> Ops
        "-" -> Ops
