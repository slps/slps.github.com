module Main

exports
  sorts
        Apply Argument Binary Expr Function IfThenElse Literal Ops Program Visitor 
  context-free syntax
        name::STR args::(Expr*) -> Apply

        name::STR -> Argument

        ops::Ops left::Expr right::Expr -> Binary

        Apply -> Expr
        Argument -> Expr
        Binary -> Expr
        IfThenElse -> Expr
        Literal -> Expr

        name::STR args::(STR*) rhs::Expr -> Function

        ifExpr::Expr thenExpr::Expr elseExpr::Expr -> IfThenElse

        info::INT -> Literal

        Equal:: -> Ops
        Plus:: -> Ops
        Minus:: -> Ops

        functions::(Function*) -> Program

        EMPTY -> Visitor
