LocatedElement = ;
Unit = libraries::ANY+ name::ANY ;
Library = helpers::ANY+ ;
Query = body::ANY helpers::ANY+ ;
Module = isRefining::ANY inModels::ANY+ outModels::ANY+ elements::ANY+ ;
ModuleElement = ;
Helper = query::ANY library::ANY definition::ANY ;
Rule = ;
MatchedRule = inPattern::ANY children::ANY+ superRule::ANY isAbstract::ANY isRefining::ANY isNoDefault::ANY ;
LazyMatchedRule = isUnique::ANY ;
CalledRule = parameters::ANY+ isEntrypoint::ANY isEndpoint::ANY ;
InPattern = elements::ANY+ rule::ANY filter::ANY ;
OutPattern = rule::ANY elements::ANY+ ;
PatternElement = ;
InPatternElement = ;
SimpleInPatternElement = mapsTo::ANY inPattern::ANY models::ANY+ ;
OutPatternElement = ;
SimpleOutPatternElement = reverseBindings::ANY+ ;
ForEachOutPatternElement = collection::ANY iterator::ANY ;
Binding = value::ANY outPatternElement::ANY propertyName::ANY isAssignment::ANY ;
RuleVariableDeclaration = rule::ANY ;
LibraryRef = unit::ANY name::ANY ;
ActionBlock = rule::ANY statements::ANY+ ;
Statement = ;
ExpressionStat = expression::ANY ;
BindingStat = source::ANY propertyName::ANY isAssignment::ANY value::ANY ;
IfStat = condition::ANY thenStatements::ANY+ elseStatements::ANY+ ;
ForStat = iterator::ANY collection::ANY statements::ANY+ ;
OclExpression = ;
VariableExp = referredVariable::ANY ;
SuperExp = type::ANY ifExp3::ANY appliedProperty::ANY collection::ANY letExp::ANY loopExp::ANY parentOperation::ANY initializedVariable::ANY ifExp2::ANY owningOperation::ANY ifExp1::ANY owningAttribute::ANY ;
PrimitiveExp = ;
StringExp = stringSymbol::ANY ;
BooleanExp = booleanSymbol::ANY ;
NumericExp = ;
RealExp = realSymbol::ANY ;
IntegerExp = integerSymbol::ANY ;
CollectionExp = ;
BagExp = elements::ANY+ ;
OrderedSetExp = elements::ANY+ ;
SequenceExp = elements::ANY+ ;
SetExp = elements::ANY+ ;
TupleExp = tuplePart::ANY+ ;
TuplePart = tuple::ANY ;
MapExp = elements::ANY+ ;
MapElement = map::ANY key::ANY value::ANY ;
EnumLiteralExp = name::ANY ;
OclUndefinedExp = type::ANY ifExp3::ANY appliedProperty::ANY collection::ANY letExp::ANY loopExp::ANY parentOperation::ANY initializedVariable::ANY ifExp2::ANY owningOperation::ANY ifExp1::ANY owningAttribute::ANY ;
PropertyCallExp = ;
NavigationOrAttributeCallExp = name::ANY ;
OperationCallExp = arguments::ANY+ operationName::ANY ;
OperatorCallExp = ;
CollectionOperationCallExp = ;
LoopExp = ;
IterateExp = result::ANY ;
IteratorExp = name::ANY ;
LetExp = variable::ANY in_::ANY ;
IfExp = thenExpression::ANY condition::ANY elseExpression::ANY ;
VariableDeclaration = id::ANY varName::ANY type::ANY initExpression::ANY letExp::ANY baseExp::ANY variableExp::ANY+ ;
Iterator = loopExpr::ANY ;
Parameter = operation::ANY ;
CollectionType = elementType::ANY ;
OclType = name::ANY definitions::ANY oclExpression::ANY operation::ANY mapType2::ANY attribute::ANY mapType::ANY collectionTypes::ANY tupleTypeAttribute::ANY variableDeclaration::ANY ;
Primitive = ;
StringType =  ;
BooleanType =  ;
NumericType = ;
IntegerType =  ;
RealType =  ;
BagType = ;
OrderedSetType = ;
SequenceType = ;
SetType = ;
OclAnyType = ;
TupleType = attributes::ANY+ ;
TupleTypeAttribute = type::ANY tupleType::ANY name::ANY ;
OclModelElement = model::ANY ;
MapType = valueType::ANY keyType::ANY ;
OclFeatureDefinition = feature::ANY context_::ANY ;
OclContextDefinition = definition::ANY context_::ANY ;
OclFeature = ;
Attribute = name::ANY initExpression::ANY type::ANY ;
Operation = name::ANY parameters::ANY+ returnType::ANY body::ANY ;
OclModel = name::ANY metamodel::ANY elements::ANY+ model::ANY+ ;
