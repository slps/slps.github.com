Project = name::ANY basedir::ANY description::ANY default::ANY path::ANY properties::ANY+ taskdef::ANY+ targets::ANY+ ;
Property = ;
PropertyName = ;
PropertyValue = value::ANY ;
PropertyLocation = location::ANY ;
PropertyFile = file::ANY ;
PropertyEnv = environment::ANY ;
Target = name::ANY description::ANY unless::ANY ifCondition::ANY depends::ANY+ tasks::ANY+ ;
Pattern = ;
Basic = ;
Mapper = type::ANY classname::ANY classpath::ANY classpathref::ANY from::ANY to::ANY ;
InExcludes = ;
Includes = name::ANY ifCondition::ANY unless::ANY ;
Excludes = name::ANY ifCondition::ANY unless::ANY ;
IncludesFile = name::ANY ifCondition::ANY unless::ANY ;
ExcludesFile = name::ANY ifCondition::ANY unless::ANY ;
FileList = dir::ANY files::ANY ;
Filter = token::ANY value::ANY ;
FiltersFile = file::ANY ;
PathElement = path::ANY location::ANY ;
Set = ;
PatternSet = inexcludes::ANY+ ;
FileSet = dir::ANY patternset::ANY+ include::ANY+ exclude::ANY+ ;
FilterSet = starttoken::ANY endtoken::ANY filter::ANY+ filtersfile::ANY+ ;
Path = id::ANY refid::ANY path::ANY pathElement::ANY+ fileset::ANY+ ;
ClassPath = refid::ANY pathElement::ANY+ fileset::ANY+ ;
Task = ;
TaskDef = name::ANY classname::ANY ;
NewTask = taskName::ANY attributes::ANY+ ;
Attribut = name::ANY value::ANY ;
PreDefinedTask = ;
ExecutionTask = ;
Exec = executable::ANY dir::ANY ;
Java = classname::ANY jar::ANY fork::ANY classPath::ANY ;
MiscellaneousTask = ;
Echo = message::ANY file::ANY append::ANY ;
Tstamp = format::ANY+ ;
FormatTstamp = property::ANY pattern::ANY offset::ANY unit::ANY locale::ANY ;
CompileTask = ;
Javac = srcdir::ANY destdir::ANY debug::ANY fork::ANY optimize::ANY deprecation::ANY inExcludes::ANY+ classPath::ANY ;
DocumentationTask = ;
Javadoc = sourcepath::ANY destdir::ANY packagenames::ANY defaultexcludes::ANY author::ANY version::ANY use::ANY windowtitle::ANY ;
ArchiveTask = ;
Jar = jarfile::ANY basedir::ANY compress::ANY encoding::ANY manifest::ANY ;
FileTask = ;
Mkdir = dir::ANY ;
Copy = file::ANY presservelastmodified::ANY tofile::ANY todir::ANY overwrite::ANY filtering::ANY flatten::ANY includeEmptyDirs::ANY fileset::ANY filterset::ANY mapper::ANY ;
Delete = file::ANY dir::ANY verbose::ANY quiet::ANY failonerror::ANY includeEmptyDirs::ANY includes::ANY includesfile::ANY excludes::ANY excludesfile::ANY defaultexcludes::ANY ;
