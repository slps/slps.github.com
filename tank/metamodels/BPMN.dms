Activity = orderedMessages::MessagingEdge+ incomingMessages::MessagingEdge+ outgoingMessages::MessagingEdge+ groups::Group+ activityType::ActivityType eventHandlerFor::SubProcess lane::Lane looping::Boolean ;
ActivityType = SubProcess:: ;
ActivityType = EventEndMultiple:: ;
ActivityType = EventEndMessage:: ;
ActivityType = EventIntermediateMessage:: ;
ActivityType = EventStartMultiple:: ;
ActivityType = EventIntermediateMultiple:: ;
ActivityType = GatewayParallel:: ;
ActivityType = EventStartTimer:: ;
ActivityType = EventStartEmpty:: ;
ActivityType = EventIntermediateCancel:: ;
ActivityType = EventEndError:: ;
ActivityType = EventStartRule:: ;
ActivityType = EventEndTerminate:: ;
ActivityType = EventStartLink:: ;
ActivityType = EventIntermediateLink:: ;
ActivityType = EventEndCancel:: ;
ActivityType = EventEndLink:: ;
ActivityType = EventIntermediateEmpty:: ;
ActivityType = EventIntermediateCompensation:: ;
ActivityType = Task:: ;
ActivityType = GatewayDataBasedExclusive:: ;
ActivityType = GatewayComplex:: ;
ActivityType = EventEndEmpty:: ;
ActivityType = EventIntermediateError:: ;
ActivityType = EventIntermediateTimer:: ;
ActivityType = EventEndCompensation:: ;
ActivityType = EventStartMessage:: ;
ActivityType = GatewayDataBasedInclusive:: ;
ActivityType = GatewayEventBasedExclusive:: ;
ActivityType = EventIntermediateRule:: ;
Artifact = DataObject ;
Artifact = Group ;
Artifact = TextAnnotation ;
Artifact = associations::Association+ artifactsContainer::ArtifactsContainer ;
ArtifactsContainer = artifacts::Artifact+ ;
Association = direction::DirectionType source::Artifact target::IdentifiableNode ;
BpmnDiagram = pools::Pool+ messages::MessagingEdge+ author::String title::String ;
DataObject = ;
DirectionType = Both:: ;
DirectionType = From:: ;
DirectionType = To:: ;
DirectionType = None:: ;
Graph = vertices::Vertex+ sequenceEdges::SequenceEdge+ ;
Group = activities::Activity+ ;
Identifiable = IdentifiableNode ;
Identifiable = iD::ID ;
IdentifiableNode = Vertex ;
IdentifiableNode = associations::Association+ ;
Lane = activities::Activity+ pool::Pool ;
MessagingEdge = bpmnDiagram::BpmnDiagram source::Activity target::Activity ;
NamedBpmnObject = ArtifactsContainer ;
NamedBpmnObject = documentation::String name::String ncname::String ;
Pool = lanes::Lane+ bpmnDiagram::BpmnDiagram ;
SequenceEdge = graph::Graph isDefault::Boolean source::Vertex target::Vertex ;
SubProcess = eventHandlers::Activity+ isTransaction::Boolean ;
TextAnnotation = ;
Vertex = outgoingEdges::SequenceEdge+ incomingEdges::SequenceEdge+ graph::Graph ;
