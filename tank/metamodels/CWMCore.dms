VisibilityKind = vk_public_vis:: ;
VisibilityKind = vk_private_vis:: ;
VisibilityKind = vk_protected_vis:: ;
BooleanExpression = expresssion::String ;
ModelElement = Dependency ;
ModelElement = Constraint ;
ModelElement = Feature ;
ModelElement = NameSpace ;
ModelElement = name::String visibility::VisibilityKind contraints::Constraint+ clientDependencies::Dependency+ supplierDependencies::Dependency+ namespace::NameSpace importers::Package+ ;
Dependency = kind::String clients::ModelElement+ suppliers::ModelElement+ ;
Constraint = body::BooleanExpression constrainedElements::ModelElement+ ;
Feature = StructuralFeature ;
Feature = owner::Classifier ;
StructuralFeature = Attribute ;
StructuralFeature = type::Classifier ;
Attribute = ;
NameSpace = Classifier ;
NameSpace = Package ;
NameSpace = ownedElements::ModelElement+ ;
Classifier = Class ;
Classifier = Datatype ;
Classifier = features::Feature+ ;
Package = Model ;
Package = importedElements::ModelElement+ ;
Class = ;
Datatype = ;
Subsystem = ;
Model = ;
