ControllerAttribute = controller::Controller ;
Controller = controllerAttribute::ControllerAttribute+ behavior::StateMachine ;
StateMachine = states::State+ ;
State = SubControllerState ;
State = ViewState ;
State = substates::State+ theContainer::State outGoing::StateTransition+ incoming::StateTransition+ ;
SubControllerState = controller::Controller ;
ViewState = ;
StateTransition = source::State target::State trigger::Event effect::StateMachineAction ;
StateMachineAction = ;
Event = ;
