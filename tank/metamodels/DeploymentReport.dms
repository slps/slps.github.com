DeploymentReport = import::ANY+ applications::ANY binding::ANY logicalServers::ANY errors::ANY ;
DeploymentImport = alias::ANY identity::ANY ;
ImportNamespaceIdentity = import::ANY ;
NamespaceIdentity = name::ANY version::ANY publicKey::ANY publicKeyToken::ANY culture::ANY platform::ANY ;
Applications = system::ANY+ application::ANY+ ;
LogicalServers = zone::ANY+ logicalServer::ANY+ ;
OuterSystem = system::ANY+ application::ANY+ name::ANY ;
Binding = zone::ANY+ boundLogicalServer::ANY+ ;
Zone = zone::ANY+ boundLogicalServer::ANY+ logicalServer::ANY+ name::ANY ;
ReportObject = sequence::ANY+ name::ANY definition::ANY extends::ANY instanceId::ANY hostedOn::ANY ;
SequenceReport = report::ANY setting::ANY system::ANY+ resource::ANY+ endpoint::ANY+ ;
BoundLogicalServer = setting::ANY+ application::ANY+ name::ANY definition::ANY extends::ANY ;
LogicalServer = ;
Application = ;
ReportSystem = ;
ReportResource = ;
ReportEndpoint = ;
Setting = value::ANY+ facet::ANY+ settingAttributes::ANY ;
SettingFacet = value::ANY settingAttributes::ANY ;
SettingInstanceValue = contents::ANY+ null::ANY ;
SettingAttributes = name::ANY definition::ANY state::ANY fixed::ANY list::ANY null::ANY secure::ANY failedToSerialize::ANY ;
SettingValue = contents::ANY+ Null::ANY Secure::ANY ;
ErrorCollection = documentError::ANY+ documentResolutionError::ANY+ documentConstraintError::ANY+ ;
DocumentError = description::ANY+ Code::ANY Level::ANY File::ANY ;
DocumentResolutionError = Statement::ANY ;
DocumentConstraintError = failedInput::ANY+ constraintMember::ANY constraintDefinition::ANY targetInstancePath::ANY ownerInstancePath::ANY constraintErrorCode::ANY constraintErrorMessage::ANY ;
FailedInput = contents::ANY+ ;
Description = contents::ANY+ ;
Guid = ;
SimpleName = ;
Path = ;
FourPartVersionType = ;
PublicKeyType = ;
PublicKeyTokenType = ;
Culture = ;
CultureNeutral = ;
ProcessorArchitectures = x86:: ;
ProcessorArchitectures = ia64:: ;
ProcessorArchitectures = amd64:: ;
ProcessorArchitectures = wow64:: ;
ProcessorArchitectures = msil:: ;
ProcessorArchitectures = shx:: ;
ProcessorArchitectures = arm:: ;
ProcessorArchitectures = data:: ;
Platform = x86:: ;
Platform = ia64:: ;
Platform = amd64:: ;
Platform = wow64:: ;
Platform = msil:: ;
Platform = shx:: ;
Platform = arm:: ;
Platform = data:: ;
Platform = *:: ;
Platform = neutral:: ;
SettingState = Set:: ;
SettingState = NotSet:: ;
SettingState = Error:: ;
Element = value::ANY ;
