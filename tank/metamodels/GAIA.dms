OrganizationalStructure = organization::Organization+ ;
Organization = collaborates::Organization interacts::Organization member::AgentType+ observes::OrganizationalRule+ ;
OrganizationalRule = SafetyRule ;
OrganizationalRule = LivenessRule ;
OrganizationalRule = SafetyRule ;
OrganizationalRule = LivenessRule ;
SafetyRule = ;
LivenessRule = ;
AgentType = provides::Service+ collaborates::AgentType agentType::AgentType plays::Role+ ;
Service = inputs::String outputs::String pre-conditions::String post-conditions::String ;
Role = activity::Activity+ communication::Communication+ responsibility::Responsibility+ actsOn::AssociationConnector ;
Activity = ;
Responsibility = LivenessProperty ;
Responsibility = SafetyProperty ;
Responsibility = LivenessProperty ;
Responsibility = SafetyProperty ;
LivenessProperty = ;
SafetyProperty = ;
AssociationConnector = actsOn::Resource+ role::Role permission::Permission+ ;
Permission = association::AssociationConnector ;
Resource = name::String description::String permitted_action::Action+ environnement::Environnement ;
Environnement = resource::Resource+ ;
Action = type::String ;
Communication = observes::OrganizationalRule+ protocol::Protocol ;
Protocol = name::String initiator::String partner::String inputs::String outputs::String description::String ;
