module Main

exports
  sorts
        LocatedElement Root Element Key Graph Edge HyperEdge Node Port EndPoint Data ElemType AttrType EdgeType 
  context-free syntax
        Root -> LocatedElement

        Element -> LocatedElement

        Port -> LocatedElement

        EndPoint -> LocatedElement

        Data -> LocatedElement

        keys::Key+ graphs::Graph+ -> Root

        Key -> Element

        Graph -> Element

        Edge -> Element

        HyperEdge -> Element

        Node -> Element

        id::String datas::Data+ -> Element

        for::ElemType attrName::String type::AttrType defValue::String -> Key

        contents::Element+ edgeDefault::EdgeType -> Graph

        source::Node target::Node sourceport::Port targetport::Port -> Edge

        endpoints::EndPoint+ -> HyperEdge

        subgraph::Graph ports::Port+ -> Node

        name::String -> Port

        node::Node port::Port -> EndPoint

        key::String value::String -> Data

        edge:: -> ElemType
        node:: -> ElemType
        graph:: -> ElemType

        double:: -> AttrType
        string:: -> AttrType
        integer:: -> AttrType
        boolean:: -> AttrType

        directed:: -> EdgeType
        undirected:: -> EdgeType
