module Main

exports
  sorts
        AST ASTNode AnonymousClassDeclaration BodyDeclaration CatchClause Comment CompilationUnit Expression ImportDeclaration MemberRef MemberValuePair MethodRef MethodRefParameter ExtendedModifier Modifier PackageDeclaration Statement TagElement TextElement Type TypeParameter VariableDeclaration AbstractTypeDeclaration AnnotationTypeMemberDeclaration EnumConstantDeclaration FieldDeclaration Initializer MethodDeclaration AnnotationTypeDeclaration EnumDeclaration TypeDeclaration BlockComment Javadoc LineComment Annotation ArrayAccess ArrayCreation ArrayInitializer Assignment AssignementOperatorKind BooleanLiteral CastExpression CharacterLiteral ClassInstanceCreation ConditionalExpression FieldAccess InfixExpression InfixExpressionOperatorKind InstanceofExpression MethodInvocation Name NullLiteral NumberLiteral ParenthesizedExpression PostfixExpression PostfixExpresssionOperatorKind PrefixExpression PrefixExpresssionOperatorKind StringLiteral SuperFieldAccess SuperMethodInvocation ThisExpression TypeLiteral VariableDeclarationExpression AssertStatement Block BreakStatement ConstructorInvocation ContinueStatement DoStatement EmptyStatement EnhancedForStatement ExpressionStatement ForStatement IfStatement LabeledStatement ReturnStatement SuperConstructorInvocation SwitchCase SwitchStatement SynchronizedStatement ThrowStatement TryStatement TypeDeclarationStatement VariableDeclarationStatement WhileStatement ArrayType ParameterizedType PrimitiveType QualifiedType SimpleType WildcardType SingleVariableDeclaration VariableDeclarationFragment QualifiedName SimpleName MarkerAnnotation NormalAnnotation SingleMemberAnnotation 
  context-free syntax
        root::ANY -> AST

         -> ASTNode

        bodyDeclarations::ANY+ -> AnonymousClassDeclaration

         -> BodyDeclaration

        body::ANY exception::ANY -> CatchClause

         -> Comment

        comments::ANY+ package::ANY imports::ANY+ types::ANY+ -> CompilationUnit

         -> Expression

        onDemand::ANY static::ANY name::ANY -> ImportDeclaration

        name::ANY qualifier::ANY -> MemberRef

        name::ANY value::ANY -> MemberValuePair

        name::ANY qualifier::ANY parameters::ANY+ -> MethodRef

        name::ANY type::ANY varargs::ANY -> MethodRefParameter

         -> ExtendedModifier

        abstract::ANY final::ANY native::ANY none::ANY private::ANY protected::ANY public::ANY static::ANY strictfp::ANY synchronized::ANY transient::ANY volatile::ANY -> Modifier

        annotations::ANY+ javadoc::ANY name::ANY -> PackageDeclaration

         -> Statement

        fragments::ANY+ tagName::ANY nested::ANY -> TagElement

        text::ANY -> TextElement

         -> Type

        name::ANY typeBounds::ANY+ -> TypeParameter

         -> VariableDeclaration

         -> AbstractTypeDeclaration

        default::ANY name::ANY type::ANY -> AnnotationTypeMemberDeclaration

        arguments::ANY+ anonymousClassDeclaration::ANY name::ANY -> EnumConstantDeclaration

        fragments::ANY+ type::ANY -> FieldDeclaration

        body::ANY -> Initializer

        body::ANY extraDimensions::ANY name::ANY returnType::ANY constructor::ANY varargs::ANY parameters::ANY+ thrownExceptions::ANY+ typeParameters::ANY+ -> MethodDeclaration

         -> AnnotationTypeDeclaration

        superInterfaceTypes::ANY+ enumConstants::ANY+ -> EnumDeclaration

        superclassType::ANY interface::ANY superInterfaceTypes::ANY+ typeParameters::ANY+ -> TypeDeclaration

         -> BlockComment

        tags::ANY+ -> Javadoc

         -> LineComment

         -> Annotation

        array::ANY index::ANY -> ArrayAccess

        dimensions::ANY+ initializer::ANY type::ANY -> ArrayCreation

        expressions::ANY+ -> ArrayInitializer

        leftHandSide::ANY operator::ANY rightHandSide::ANY -> Assignment

        RIGHT_SHIFT_SIGNED_ASSIGN:: -> AssignementOperatorKind
        BIT_XOR_ASSIGN:: -> AssignementOperatorKind
        TIMES_ASSIGN:: -> AssignementOperatorKind
        LEFT_SHIFT_ASSIGN:: -> AssignementOperatorKind
        MINUS_ASSIGN:: -> AssignementOperatorKind
        BIT_OR_ASSIGN:: -> AssignementOperatorKind
        PLUS_ASSIGN:: -> AssignementOperatorKind
        ASSIGN:: -> AssignementOperatorKind
        RIGHT_SHIFT_UNSIGNED_ASSIGN:: -> AssignementOperatorKind
        REMAINDER_ASSIGN:: -> AssignementOperatorKind
        DIVIDE_ASSIGN:: -> AssignementOperatorKind
        BIT_AND_ASSIGN:: -> AssignementOperatorKind

        booleanValue::ANY -> BooleanLiteral

        expression::ANY type::ANY -> CastExpression

        charValue::ANY escapedValue::ANY -> CharacterLiteral

        arguments::ANY+ anonymousClassDeclaration::ANY expression::ANY type::ANY typeArguments::ANY+ -> ClassInstanceCreation

        elseExpression::ANY expression::ANY thenExpression::ANY -> ConditionalExpression

        expression::ANY name::ANY -> FieldAccess

        extendedOperands::ANY+ leftOperand::ANY operator::ANY rightOperand::ANY -> InfixExpression

        GREATER_EQUALS:: -> InfixExpressionOperatorKind
        OR:: -> InfixExpressionOperatorKind
        RIGHT_SHIFT_SIGNED:: -> InfixExpressionOperatorKind
        MINUS:: -> InfixExpressionOperatorKind
        XOR:: -> InfixExpressionOperatorKind
        LESS_EQUALS:: -> InfixExpressionOperatorKind
        EQUALS:: -> InfixExpressionOperatorKind
        NOT_EQUALS:: -> InfixExpressionOperatorKind
        AND:: -> InfixExpressionOperatorKind
        PLUS:: -> InfixExpressionOperatorKind
        GREATER:: -> InfixExpressionOperatorKind
        CONDITIONAL_OR:: -> InfixExpressionOperatorKind
        REMAINDER:: -> InfixExpressionOperatorKind
        LESS:: -> InfixExpressionOperatorKind
        LEFT_SHIFT:: -> InfixExpressionOperatorKind
        RIGHT_SHIFT_UNSIGNED:: -> InfixExpressionOperatorKind
        CONDITIONAL_AND:: -> InfixExpressionOperatorKind
        TIMES:: -> InfixExpressionOperatorKind
        DIVIDE:: -> InfixExpressionOperatorKind

        leftOperand::ANY rightOperand::ANY -> InstanceofExpression

        arguments::ANY+ expression::ANY name::ANY typeArguments::ANY+ -> MethodInvocation

         -> Name

         -> NullLiteral

        token::ANY -> NumberLiteral

        expression::ANY -> ParenthesizedExpression

        operand::ANY operator::ANY -> PostfixExpression

        INCREMENT:: -> PostfixExpresssionOperatorKind
        DECREMENT:: -> PostfixExpresssionOperatorKind

        operand::ANY operator::ANY -> PrefixExpression

        MINUS:: -> PrefixExpresssionOperatorKind
        NOT:: -> PrefixExpresssionOperatorKind
        DECREMENT:: -> PrefixExpresssionOperatorKind
        COMPLEMENT:: -> PrefixExpresssionOperatorKind
        INCREMENT:: -> PrefixExpresssionOperatorKind
        PLUS:: -> PrefixExpresssionOperatorKind

        escapedValue::ANY literalValue::ANY -> StringLiteral

        name::ANY qualifier::ANY -> SuperFieldAccess

        arguments::ANY+ name::ANY qualifier::ANY typeArguments::ANY+ -> SuperMethodInvocation

        qualifier::ANY -> ThisExpression

        type::ANY -> TypeLiteral

        fragments::ANY+ modifiers::ANY+ type::ANY -> VariableDeclarationExpression

        expression::ANY message::ANY -> AssertStatement

        statements::ANY+ -> Block

        label::ANY -> BreakStatement

        arguments::ANY+ typeArguments::ANY+ -> ConstructorInvocation

        label::ANY -> ContinueStatement

        body::ANY expression::ANY -> DoStatement

         -> EmptyStatement

        body::ANY expression::ANY parameter::ANY -> EnhancedForStatement

        expression::ANY -> ExpressionStatement

        body::ANY expression::ANY initializers::ANY+ updaters::ANY+ -> ForStatement

        elseStatement::ANY expression::ANY thenStatement::ANY -> IfStatement

        body::ANY label::ANY -> LabeledStatement

        expression::ANY -> ReturnStatement

        arguments::ANY+ expression::ANY typeArguments::ANY+ -> SuperConstructorInvocation

        expression::ANY default::ANY -> SwitchCase

        expression::ANY statements::ANY+ -> SwitchStatement

        body::ANY expression::ANY -> SynchronizedStatement

        expression::ANY -> ThrowStatement

        catchClauses::ANY+ body::ANY finally::ANY -> TryStatement

        declaration::ANY -> TypeDeclarationStatement

        fragments::ANY+ modifiers::ANY+ type::ANY -> VariableDeclarationStatement

        body::ANY expression::ANY -> WhileStatement

        componentType::ANY dimensions::ANY elementType::ANY -> ArrayType

        type::ANY typeArguments::ANY+ -> ParameterizedType

        code::ANY -> PrimitiveType

        name::ANY qualifier::ANY -> QualifiedType

        name::ANY -> SimpleType

        bound::ANY upperBound::ANY -> WildcardType

        type::ANY varargs::ANY modifiers::ANY+ -> SingleVariableDeclaration

         -> VariableDeclarationFragment

        name::ANY qualifier::ANY -> QualifiedName

        identifier::ANY declaration::ANY -> SimpleName

         -> MarkerAnnotation

        values::ANY+ -> NormalAnnotation

        value::ANY -> SingleMemberAnnotation
