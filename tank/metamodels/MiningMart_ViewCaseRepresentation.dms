Case = name::String caseMode::Boolean caseInput::Parameter documentation::String listOfStep::Step+ ;
Step = LoopStep ;
Step = MultiStep ;
Step = name::String description::String belongsToCase::Case embedsOperator::Operator predecessors::Step+ successors::Step+ ;
LoopStep = ;
MultiStep = iterationCondition::String ;
Operator = FeatureConstruction ;
Operator = DataMinStep ;
Operator = TimeOperator ;
Operator = FeatureSelection ;
Operator = MultiRelFeatureConstr ;
Operator = RowSelection ;
Parameter = name::String place::String parameterType::ParameterType belongsToOperator::Operator ;
ParameterType = Value:: ;
ParameterType = Concept:: ;
ParameterType = RelationShip:: ;
ParameterType = FeatureAttribute:: ;
FeatureConstruction = Scaling ;
FeatureConstruction = Discretization ;
FeatureConstruction = scalingFactor::Integer ;
DataMinStep = loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String input::Parameter+ output::Parameter+ realizes::ExecutionElement ;
TimeOperator = loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String input::Parameter+ output::Parameter+ realizes::ExecutionElement ;
FeatureSelection = loopable::Boolean numberOfInputParameters::Integer numberOfOutputParameters::Integer manual::Boolean tool::String input::Parameter+ output::Parameter+ realizes::ExecutionElement ;
MultiRelFeatureConstr = Agregation ;
MultiRelFeatureConstr = Agregation ;
RowSelection = Segmentation ;
RowSelection = Sampling ;
RowSelection = Segmentation ;
RowSelection = Sampling ;
Agregation = ;
Scaling = ;
Discretization = ;
Segmentation = ;
Sampling = ;
ExecutionElement = MSL-Tool ;
ExecutionElement = TransformationGroup ;
ExecutionElement = Transformation ;
ExecutionElement = source::DataObject target::DataObject ;
DataObject = source::ExecutionElement target::ExecutionElement ;
MSL-Tool = ;
TransformationGroup = transformation::Transformation+ ;
Transformation = Function ;
Transformation = StoredProcedure ;
Transformation = SQLQuery ;
Transformation = transformationGroup::TransformationGroup ;
Function = nameOf::String signature::String ;
StoredProcedure = nameOf::String signature::String ;
SQLQuery = ;
ModelElement = Case ;
ModelElement = Step ;
ModelElement = Operator ;
ModelElement = Classifier ;
ModelElement = StructuralFeature ;
ModelElement = Case ;
ModelElement = Step ;
ModelElement = Operator ;
ModelElement = Classifier ;
ModelElement = StructuralFeature ;
Classifier = Class ;
Classifier = DataType ;
Classifier = Class ;
Classifier = DataType ;
StructuralFeature = Attribute ;
StructuralFeature = Attribute ;
Class = name::String attributes::Attribute+ ;
DataType = attribute::Attribute ;
Attribute = class::Class has::DataType ;
