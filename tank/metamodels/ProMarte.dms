TimeBase = ;
Instant = ;
TimeValue = ;
TimeInterval = ;
Interval = ;
SingleTimeBase = currentValue::ANY maximumValue::ANY currentInstant::ANY ;
SingleInstant = coPoint::ANY ;
SingleInterval = first::ANY last::ANY members::ANY+ ;
SingleTimeValue = denotedInstant::ANY+ ref::ANY ;
SingleTimeInterval = start::ANY end::ANY ;
DiscreteTimeBase = refEvent::ANY ;
DiscreteInstant = next::ANY previous::ANY refOcc::ANY ;
Event = ;
EventOccurence = ;
PhysicalTime = ;
PhysicalInstant = ;
Duration = ;
MultipleTimeBase = bases::ANY+ ;
CoincidencePoint = coincidenceInstants::ANY+ ;
MultipleInterval = first::ANY+ last::ANY+ ;
MultipleTimeValue = values::ANY+ ;
MetricTimeValue = ;
DiscreteTimeValue = denotedInstant::ANY+ ref::ANY ;
MetricTimeInterval = ;
DiscreteTimeInterval = endValues::ANY denotedInterval::ANY+ ;
SimultaneousEventOccurrence = at::ANY occurence::ANY ;
TimedEvent = timestamp::ANY+ ;
TimedEventOccurence = at::ANY timestamp::ANY ;
TimedAction = duration::ANY+ start::ANY+ end::ANY+ ;
Delay = ;
TimingMechanism = stability::ANY drift::ANY skew::ANY origin::ANY resolution::ANY refClock::ANY state::ANY ;
Clock = accuracy::ANY offset::ANY generatedInterrupt::ANY+ ;
Timer = isPeriodic::ANY duration::ANY genratedTimeOuts::ANY+ ;
TimeOut = ;
ClockInterrupt = ;
System = dimension::ANY+ ;
Model = ownes::ANY+ ;
AnnotatedModel = conformsTo::ANY+ import::ANY+ ;
ModelElement = owner::ANY ;
AnnotatedModelElement = annotation::ANY+ ;
NFP = measurementQuantity::ANY storedBy::ANY+ groupedBy::ANY ;
NFPLibrary = refersTo::ANY+ usedNFP::ANY+ ;
NFPCategory = setOf::ANY+ ownes::ANY+ owner::ANY ;
ModelingConcern = relevantQuantity::ANY+ annotedModel::ANY ;
AnalysisConcern = ;
DesignConcern = ;
Quantity = ;
BasicQuantity = ;
DerivedQuantity = ;
QualitativeNFP = parameter::ANY+ ;
QuantitativeNFP = sampleSet::ANY+ measure::ANY+ ;
Realization = function::ANY+ owner::ANY ;
Measure = appliesTo::ANY+ owner::ANY ;
ComplexNFP = parent::ANY+ child::ANY+ ownes::ANY+ ;
BasicNFP = statisticalQualifier::ANY directon::ANY typedBy::ANY valuedBy::ANY+ dimensionOf::ANY+ ;
NFPType = valueSpecificationLanguage::ANY source::ANY constrainedSpec::ANY+ ;
NFPInstantType = value::ANY unit::ANY ;
NFPurationType = value::ANY unit::ANY ;
NFPRateType = value::ANY unit::ANY ;
NFPProbabilityType = value::ANY unit::ANY ;
NFPSizeType = value::ANY unit::ANY ;
NFPValueSpecification = constrainedBy::ANY+ expression::ANY ;
NFPConstant = ownerList::ANY ;
NFPListConstant = listElements::ANY+ ;
NFPStringConstant = body::ANY ;
NFPIntegerConstant = body::ANY ;
NFPRealConstant = bodyBeforeComa::ANY bodyAfterComa::ANY ;
NFPBooleanConstant = body::ANY ;
NFPVariable = varName::ANY ;
NFPExpression = body::ANY+ operand::ANY+ ;
SourceKinds = est:: ;
SourceKinds = meas:: ;
SourceKinds = req:: ;
SourceKinds = implicit:: ;
SourceKinds = calc:: ;
DirectionKinds = increasing:: ;
DirectionKinds = decreasing:: ;
DirectionKinds = undefined:: ;
StatisticalQualifierKinds = max:: ;
StatisticalQualifierKinds = min:: ;
StatisticalQualifierKinds = range:: ;
StatisticalQualifierKinds = mean:: ;
StatisticalQualifierKinds = variance:: ;
StatisticalQualifierKinds = standardDeviation:: ;
StatisticalQualifierKinds = percentil:: ;
StatisticalQualifierKinds = frequency:: ;
StatisticalQualifierKinds = moment:: ;
StatisticalQualifierKinds = distribution:: ;
StatisticalQualifierKinds = instantaneous:: ;
InstantUnitKinds = TAI:: ;
InstantUnitKinds = UT0:: ;
InstantUnitKinds = UT1:: ;
InstantUnitKinds = UTC:: ;
InstantUnitKinds = TT:: ;
InstantUnitKinds = TDB:: ;
InstantUnitKinds = TCG:: ;
InstantUnitKinds = TCB:: ;
InstantUnitKinds = Sideral:: ;
InstantUnitKinds = Local:: ;
DurationUnitKinds = ns:: ;
DurationUnitKinds = us:: ;
DurationUnitKinds = ms:: ;
DurationUnitKinds = s:: ;
DurationUnitKinds = min:: ;
DurationUnitKinds = hrs:: ;
DurationUnitKinds = dys:: ;
DurationUnitKinds = wks:: ;
DurationUnitKinds = mos:: ;
DurationUnitKinds = yrs:: ;
RateUnitKinds = kbs:: ;
RateUnitKinds = MIPS:: ;
ProbabilityUnitKinds = us:: ;
ProbabilityUnitKinds = s:: ;
SizeUnitKinds = bits:: ;
SizeUnitKinds = bytes:: ;
SizeUnitKinds = Mb:: ;
SizeUnitKinds = MB:: ;
Classifier = ;
ResourceClassifier = ;
ResourceServiceClassifier = ;
InstanceSpecification = ;
ResourceInstanceSpecification = ;
ResourceServiceInstanceSpecification = ;
Hardware = owner::ANY containH::ANY+ containHL::ANY+ containHE::ANY+ deploymentConfiguration::ANY+ ;
HardwareLibrary = owner::ANY ;
HardwareEntity = owner::ANY ;
HardwareDeployment = owner::ANY contain::ANY+ ;
HardwareEntityInstance = owner::ANY ;
ECUInstance = composedOf::ANY+ ;
ChannelInstance = gateInstances::ANY ;
ECUGateInstance = channel::ANY ;
ECU = contain::ANY+ ;
ECUGate = owner::ANY kindOf::ANY ;
Channel = specify::ANY ;
AnalysisContext = global::ANY+ workload::ANY behavior::ANY usedResources::ANY+ ;
Workload = transaction::ANY+ ;
Transaction = workload::ANY+ trigger::ANY+ response::ANY ;
Trigger = arrivalPattern::ANY effect::ANY+ ;
Response = efficiency::ANY endToEndLatency::ANY cause::ANY+ behavior::ANY+ ;
Behavior = scenario::ANY+ ;
Scenario = behavior::ANY+ scenarionLatency::ANY+ steps::ANY+ root::ANY endToEndResponse::ANY ;
Step = predecessor::ANY+ successor::ANY+ stepLatency::ANY+ usedResourceService::ANY+ ;
Resource = ;
BasicResource = ;
StructuredResource = basicResource::ANY ;
ProcessingResource = links::ANY+ components::ANY+ ;
Link = ;
ProcessResource = components::ANY+ ;
Component = process::ANY+ interfaces::ANY+ ;
StructuredComponent = ;
BasicComponent = ;
LogicalResource = ;
ServerResource = services::ANY+ ;
Service = resource::ANY interface::ANY ;
Interface = service::ANY ;
