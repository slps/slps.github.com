QoSComponent = profile::QoSProfile+ operations::Operation ;
QoSProfile = CompoundProfile ;
QoSProfile = SimpleProfile ;
QoSContraints = ;
Operation = ;
CompoundProfile = profileTransition::ProfileTransition+ simpleProfile::SimpleProfile+ ;
SimpleProfile = compoundProfile::CompoundProfile use::QoSStatement provides::QoSStatement ;
ProfileTransition = operations::Operation+ from::SimpleProfile to::SimpleProfile compoundProfile::CompoundProfile ;
QoSStatement = SingleQoSStatement ;
QoSStatement = CoumpoundQoSStatement ;
QoSStatement = contraints::QoSContraints+ relation::CoumpoundQoSStatement parameter::Parameter+ ;
SingleQoSStatement = contraint::QoSContraint ;
CoumpoundQoSStatement = statement::QoSStatement ;
QoSContraint = qualification::QualificationKind ;
QualificationKind = value::String ;
QoSCharacteristic = QoSContraints ;
QoSCharacteristic = QualificationKind ;
QoSCharacteristic = invariant::BooleanExpression parallel_and_composition::MappingExpression parallel_or_composition::MappingExpression sequential_composition::MappingExpression values::MappingExpression statisticalAttribute::StatisticalAttributekindKind+ parameter::Parameter domain::Domain ;
BooleanExpression = value::String ;
MappingExpression = value::String ;
StatisticalAttributekindKind = ;
Parameter = ;
DataType = Domain ;
DataType = Domain ;
Domain = Numeric ;
Domain = Set ;
Domain = Enumeration ;
Domain = direction::DirectionKind ;
DirectionKind = value::String ;
Numeric = ;
Set = stringSet::StringSet+ ;
Enumeration = ;
StringSet = string::String+ ;
