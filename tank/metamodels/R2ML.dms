CollectionTypes = individual:: ;
CollectionTypes = set:: ;
CollectionTypes = orderedSet:: ;
CollectionTypes = bag:: ;
CollectionTypes = sequence:: ;
PredicateCategory = closed:: ;
PredicateCategory = open:: ;
PredicateCategory = partial:: ;
ExternalVocabularyLanguage = RDFS:: ;
ExternalVocabularyLanguage = UML:: ;
ExternalVocabularyLanguage = OWL:: ;
PredicateType = ObjectClassificationPredicate:: ;
PredicateType = AttributionPredicate:: ;
PredicateType = AssociationPredicate:: ;
PredicateType = ReferencePropertyPredicate:: ;
PredicateType = EqualityPredicate:: ;
PredicateType = InequalityPredicate:: ;
PredicateType = DatatypePredicate:: ;
PredicateType = DataClassificationPredicate:: ;
ReactionRuleSet = rules::Rules/ReactionRule+ ;
ProductionRuleSet = rules::Rules/ProductionRule+ ;
EventType = eventTypeID::String ;
RuleSet = ReactionRuleSet ;
RuleSet = ProductionRuleSet ;
RuleSet = IntegrityRuleSet ;
RuleSet = DerivationRuleSet ;
RuleBase = vocabularies::Vocabulary/VocBasic/Vocabulary externalVocabulaires::Vocabulary/VocBuiltin/ExternalVocabulary+ rules::RuleSet+ ruleBaseID::String ;
IntegrityRuleSet = rules::Rules/IntegrityRule+ ;
DerivationRuleSet = rules::Rules/DerivationRule+ ;
Integer = INT ;
Boolean = 'true' ;
Boolean = 'false' ;
String = STR ;
