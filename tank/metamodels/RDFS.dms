Resource = graph::ANY uriRef::ANY+ subjectStatement::ANY+ objectStatement::ANY+ label::ANY+ type::ANY+ seeAlso::ANY+ referringResource::ANY+ member::ANY+ container::ANY+ list::ANY+ ;
Graph = graphName::ANY resources::ANY+ ;
List = first::ANY rest::ANY originalList::ANY+ ;
Container = ;
Alt = ;
Bag = ;
Seq = ;
Property = predicateStatement::ANY+ subPropertyOf::ANY+ superProperty::ANY+ domain::ANY+ range::ANY+ ;
ContainerMembershipProperty = ;
Statement = predicate::ANY object::ANY subject::ANY isReifiedOnly::ANY isReified::ANY nameForReification::ANY+ ;
URIReferenceNode = ;
BlankNode = nodeId::ANY ;
Class = subClassOf::ANY+ superClass::ANY+ typedResource::ANY+ propertyForDomain::ANY+ propertyForRange::ANY+ ;
Datatype = ;
Literal = lexicalForm::ANY ;
PlainLiteral = language::ANY labeledResource::ANY ;
TypedLiteral = datatypeURI::ANY ;
RDFXMLLiteral = ;
URIReference = uri::ANY resource::ANY literal::ANY namedGraph::ANY reifiedStatement::ANY+ ;
UniformResourceIdentifier = name::ANY uriRef::ANY+ ;
