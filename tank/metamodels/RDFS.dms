Resource = Graph ;
Resource = List ;
Resource = Container ;
Resource = Property ;
Resource = Statement ;
Resource = URIReferenceNode ;
Resource = BlankNode ;
Resource = Class ;
Resource = Literal ;
Resource = graph::Graph uriRef::URIReference+ subjectStatement::Statement+ objectStatement::Statement+ label::PlainLiteral+ type::Class+ seeAlso::Resource+ referringResource::Resource+ member::Resource+ container::Resource+ list::List+ ;
Graph = graphName::URIReference resources::Resource+ ;
List = first::Resource rest::List originalList::List+ ;
Container = Alt ;
Container = Bag ;
Container = Seq ;
Container = Alt ;
Container = Bag ;
Container = Seq ;
Alt =  ;
Bag =  ;
Seq =  ;
Property = predicateStatement::Statement+ subPropertyOf::Property+ superProperty::Property+ domain::Class+ range::Class+ ;
ContainerMembershipProperty = ;
Statement = predicate::Property object::Resource subject::Resource isReifiedOnly::Boolean isReified::Boolean nameForReification::URIReference+ ;
URIReferenceNode = graph::Graph uriRef::URIReference+ subjectStatement::Statement+ objectStatement::Statement+ label::PlainLiteral+ type::Class+ seeAlso::Resource+ referringResource::Resource+ member::Resource+ container::Resource+ list::List+ ;
BlankNode = nodeId::String ;
Class = Datatype ;
Class = subClassOf::Class+ superClass::Class+ typedResource::Resource+ propertyForDomain::Property+ propertyForRange::Property+ ;
Datatype = subClassOf::Class+ superClass::Class+ typedResource::Resource+ propertyForDomain::Property+ propertyForRange::Property+ ;
Literal = PlainLiteral ;
Literal = TypedLiteral ;
Literal = lexicalForm::String ;
PlainLiteral = language::String labeledResource::Resource ;
TypedLiteral = RDFXMLLiteral ;
TypedLiteral = datatypeURI::URIReference ;
RDFXMLLiteral = datatypeURI::URIReference ;
URIReference = UniformResourceIdentifier ;
URIReference = uri::UniformResourceIdentifier resource::Resource literal::TypedLiteral namedGraph::Graph reifiedStatement::Statement+ ;
UniformResourceIdentifier = name::String uriRef::URIReference+ ;
Boolean = 'true' ;
Boolean = 'false' ;
Integer = INT ;
String = STR ;
