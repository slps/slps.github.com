LocatedElement = ;
Root = entries::ANY+ ;
VocabularyEntry = primaryRep::ANY caption::ANY+ ;
Caption = ;
DefCaption = definition::ANY ;
DescCaption = description::ANY ;
SrcCaption = source::ANY ;
DBCaption = dictionaryBasis::ANY ;
GenCCaption = generalConcept::ANY ;
CTypCaption = conceptType::ANY+ ;
Necessity = exp::ANY ;
Possibility = exp::ANY ;
RefSCaption = referenceScheme::ANY ;
NoteCaption = note::ANY ;
ExCaption = example::ANY+ ;
SynCaption = synonym::ANY+ ;
SynFCaption = synonymousForm::ANY+ ;
SeeCaption = see::ANY ;
SFCaption = subjectField::ANY ;
NSURICaption = namespaceURI::ANY ;
PrimaryRepresentation = ;
NotFactTypeRepresentation = ;
TermRepresentation = term::ANY+ ;
NameRepresentation = hasThe::ANY name::ANY+ ;
FactTypeFormRepresentation = primaryRep1::ANY verbExp::ANY+ primaryRep2::ANY ;
ConceptDefinition = exp::ANY conjexp::ANY+ ;
ConceptSource = source::ANY+ ;
Note = sentences::ANY+ ;
Sentence = words::ANY+ ;
NameSpaceURI = URI::ANY+ ;
Word = ;
StringWord = val::ANY ;
QuotedStringWord = val::ANY ;
NameWord = val::ANY ;
Verb = is:: ;
Verb = relevant:: ;
Verb = comprises:: ;
Verb = to:: ;
Verb = work:: ;
Verb = in:: ;
Verb = trades:: ;
Verb = as:: ;
Verb = are:: ;
Verb = accepted:: ;
Verb = generally:: ;
Verb = important:: ;
Verb = across:: ;
Verb = share:: ;
Verb = sets:: ;
Verb = assigned:: ;
Verb = by:: ;
Verb = contains:: ;
Verb = for:: ;
Verb = has:: ;
Verb = specifies:: ;
Verb = specified:: ;
ConjonctionnalKeyWord = and:: ;
ConjonctionnalKeyWord = or:: ;
ConjonctionnalKeyWord = if:: ;
ConjonctionnalKeyWord = whether:: ;
ModalVerb = must:: ;
ModalVerb = may:: ;
ModalVerb = never:: ;
ModalVerb = always:: ;
Join = that:: ;
Join = who:: ;
Link = of:: ;
Link = quoteS:: ;
Qualif = the:: ;
Qualif = The:: ;
Qualif = a:: ;
Qualif = A:: ;
Qualif = an:: ;
Qualif = An:: ;
Qualif = Each:: ;
Qualif = each:: ;
Qualif = Some:: ;
Qualif = some:: ;
Qualif = At:: ;
Qualif = at:: ;
Qualif = Exactly:: ;
Qualif = exactly:: ;
EndOperator = given:: ;
EndOperator = thanone:: ;
EndOperator = one:: ;
EndOperator = isobligatorythat:: ;
EndOperator = ispermittedthat:: ;
EndOperator = isprohibitedthat:: ;
EndOperator = isnecessarythat:: ;
EndOperator = ispossiblethat:: ;
EndOperator = isimpossiblethat:: ;
EndOperator = isnotthecasethat:: ;
EndOperator = least:: ;
EndOperator = leastone:: ;
EndOperator = most:: ;
EndOperator = mostone:: ;
EndOperator = leastnandatmostm:: ;
EndOperator = andonlyif:: ;
EndOperator = ornot:: ;
EndOperator = not:: ;
EndOperator = of:: ;
SBVRExpression = hasPoint::ANY firstProposition::ANY nextProposition::ANY+ ;
SBVRPropWithKW = conjonction::ANY endConj::ANY proposition::ANY ;
ModalForm = modal::ANY isNeg::ANY ;
SimpleSBVRProp = modal::ANY concept1::ANY modalVerb::ANY verbs::ANY+ concept2::ANY ;
SubSBVRProp = join::ANY modalVerb::ANY verbs::ANY+ concept2::ANY ;
LinkSBVRConcept = link::ANY concept::ANY ;
ConjConcept = conjonction::ANY concept::ANY ;
Concept = ;
NameConcept = the::ANY name::ANY+ ;
ObjectConcept = operatoredConcept::ANY qualify::ANY ;
StringConcept = stringWord::ANY+ ;
NounConcept = qualif::ANY noun::ANY+ ;
Qualification = generalConcept::ANY+ ;
GeneralConcept = ;
NameGConcept = name::ANY ;
NounGConcept = noun::ANY+ ;
Qualifier = op::ANY endOperator::ANY min::ANY max::ANY ;
ModalBegin = endOperator::ANY ;
ModalBeginC = ;
