ListString = value::ANY ;
ListInteger = value::ANY ;
Model = library::ANY pathname::ANY descriptor::ANY project::ANY fileRef::ANY storageUnitM::ANY+ enumsBlock::ANY importedOperator::ANY+ client::ANY+ libraries::ANY+ allLibry::ANY+ typeM::ANY+ model::ANY coverageFileM::ANY criterionFileM::ANY root::ANY all::ANY+ application::ANY reference::ANY+ tmpNode::ANY+ constBlockK::ANY node::ANY varBlockK::ANY typeBlock::ANY refinement::ANY implementation::ANY constant::ANY allConstant::ANY allvariable::ANY variable::ANY allConstVar::ANY constVar::ANY constBlock::ANY varBlock::ANY allNamedType::ANY namedType::ANY ;
Implementation = key::ANY namedTypeI::ANY+ ;
ConstBlock = modelC::ANY keyC::ANY key::ANY constant::ANY ;
VarBlock = variable::ANY keyVB::ANY key::ANY ;
GlobalVariable = key::ANY ;
TypeBlock = type::ANY key::ANY ;
Session = descriptor::ANY model::ANY loadsModel::ANY+ DefinedIn::ANY loader::ANY ;
Descriptor = modelFileName::ANY sernFileName::ANY sernPersistAs::ANY rnetFileName::ANY rnetPersistAs::ANY occBase::ANY size::ANY nameVerify::ANY checked::ANY libraryModels::ANY+ annTypeFiles::ANY+ modelD::ANY ;
StorageUnit = saoFileName::ANY annFileName::ANY persistAs::ANY loaded::ANY saoModified::ANY annModified::ANY fileRef::ANY modelS::ANY element::ANY+ ;
StorageElement = ;
Object = ;
Block = ;
NodeBlock = node::ANY ;
ModelBlock = ;
Expression = ;
Label = expression::ANY ;
ExprNull = label::ANY exprContactE::ANY exprCallE::ANY dependance::ANY subExprId::ANY+ paramArray::ANY constant::ANY equationE::ANY assertionE::ANY ;
ConstValue = value::ANY kind::ANY ;
ExprContact = boolAct::ANY initValue::ANY+ calledOpr::ANY ;
ExprCall = numOcc::ANY predefOpr::ANY parameter::ANY+ exprContactEC::ANY operator::ANY ;
Operator = category::ANY conversion::ANY state::ANY index::ANY variable::ANY input::ANY+ output::ANY+ hidden::ANY+ client::ANY+ modelO::ANY modelOp::ANY criterionO::ANY intanceO::ANY+ operator::ANY ;
ExprId = exprContactEI::ANY reference::ANY ;
LocalVariable = optional::ANY const::ANY probe::ANY pure::ANY initValue::ANY operatorI::ANY operatorO::ANY operatorH::ANY nodeL::ANY nodeI::ANY ;
Node = nodeKind::ANY eqBlock::ANY paramBlock::ANY local::ANY+ internal::ANY+ key::ANY stateMachine::ANY modelN::ANY ;
ParamBlock = key::ANY columnsSize::ANY+ array::ANY+ ;
ParamArray = notes::ANY+ paramBlock::ANY operator::ANY value::ANY+ ;
ConstVar = kind::ANY type::ANY client::ANY+ ;
Constant = imported::ANY value::ANY enumeration::ANY key::ANY ;
Variable = clock::ANY definition::ANY+ ;
Type = ;
Table = size::ANY typeT::ANY ;
NamedType = kind::ANY refinement::ANY+ refined::ANY+ to::ANY from::ANY implementation::ANY definition::ANY keyM::ANY key::ANY ;
Enumeration = value::ANY+ ;
Composite = ;
CompositeElement = typeC::ANY key::ANY ;
Structure = element::ANY ;
Tuple = element::ANY ;
EqBlock = equation::ANY+ assertion::ANY key::ANY calledOperator::ANY+ referencedId::ANY+ ;
Equation = rotation::ANY symetrical::ANY terminator::ANY eqBlock::ANY left::ANY+ right::ANY outEdge::ANY+ position::ANY size::ANY ;
Assertion = key::ANY expression::ANY edge::ANY position::ANY ;
Annotable = ;
Prop = name::ANY values::ANY+ entity::ANY configurationP::ANY ;
Configuration = name::ANY propC::ANY+ projectC::ANY ;
Project = pathname::ANY configuration::ANY+ fileRef::ANY+ owner::ANY+ ;
Element = ;
FileRef = pathname::ANY persistAs::ANY DefinedIn::ANY ;
Folder = extensions::ANY element::ANY+ ;
Reference = ;
TypeReference =  ;
OperatorReference =  ;
VariableReference =  ;
Error = ;
Edge = leftVarIndex::ANY labelOrientation::ANY leftVar::ANY rightExpression::ANY srcEquation::ANY assertion::ANY position::ANY+ dstEquation::ANY ;
RPoint = ;
RSize = ;
Entity = ;
StateObj = ;
GraphicalObject = ;
StInputOutput = ;
StInitInput = name::ANY type::ANY clock::ANY const::ANY optional::ANY ;
StInput = name::ANY type::ANY clock::ANY const::ANY optional::ANY ;
StOutput = name::ANY type::ANY clock::ANY const::ANY optional::ANY ;
Transition = conditions::ANY transKind::ANY state1::ANY state2::ANY ;
State = name::ANY cx::ANY cy::ANY transition1::ANY+ transition2::ANY+ stOutput::ANY ;
InitialStPtr = cx::ANY cy::ANY state::ANY ;
StateMachine = initialStPtr::ANY state::ANY+ transition::ANY+ ;
Base = ;
StateBase = DefineIn::ANY ;
AnnNote = name::ANY modified::ANY annNoteType::ANY annotable::ANY annAttValue::ANY+ ;
AnnAttValue = ;
AnnNoteType = name::ANY annAttDefinition::ANY annAttGroup::ANY key::ANY ;
AnnAttDefinition = name::ANY type::ANY annAttGroup::ANY key::ANY annProperty::ANY ;
AnnAttIntValue = value::ANY ;
AnnAttBoolValue = value::ANY ;
AnnAttCharValue = value::ANY ;
AnnAttRealValue = value::ANY ;
AnnAttStringValue = value::ANY ;
AnnAttFileValue = ;
AnnAttDateValue = ;
AnnAttOidValue = ;
AnnAttEnumValue = ;
AnnProperty = name::ANY type::ANY key::ANY ;
AnnPropertyInt = value::ANY ;
AnnPropertyBool = value::ANY ;
AnnPropertyChar = value::ANY ;
AnnPropertyReal = value::ANY ;
AnnPropertyString = value::ANY ;
AnnPropertyEnum = value::ANY ;
AnnotSchema = pathname::ANY annNoteType::ANY annCategory::ANY ;
AnnCategory = name::ANY key::ANY anootability::ANY+ ;
Annotability = minCardinality::ANY maxCardinality::ANY defaultNote::ANY annNoteType::ANY ;
AnnAttGroup = name::ANY key::ANY ;
File = ;
MtcApplication = coverageFileCov::ANY+ criterionFileCri::ANY+ modelM::ANY ;
CoverageFile = record::ANY modelCov::ANY application::ANY recordCov::ANY ;
CriterionFile = application::ANY modelCri::ANY criterionC::ANY+ ;
MtcEntity = ;
HistoryEntry = file::ANY ;
Criterion = ident::ANY name::ANY description::ANY criterionFileC::ANY operatorC::ANY element::ANY+ ;
Instance = index::ANY occ::ANY modelI::ANY operatorI::ANY associationClassI::ANY caller::ANY called::ANY+ origin::ANY related::ANY+ ;
AssociationClass = resultA::ANY recordA::ANY+ instanceA::ANY+ ;
Result = elementCount::ANY associationClassRs::ANY record::ANY ;
Record = creator::ANY name::ANY date::ANY author::ANY description::ANY key::ANY associationClassRc::ANY coverageFileR::ANY result::ANY+ ;
Loader = descriptor::ANY session::ANY ;
