LocatedElement = ;
Program = service::ANY ;
Service = name::ANY declarations::ANY+ sessions::ANY+ ;
Session = ;
Registration = declarations::ANY+ sessions::ANY+ ;
Dialog = declarations::ANY+ methods::ANY+ ;
Event = eventId::ANY declarations::ANY+ methods::ANY+ ;
Method = type::ANY direction::ANY methodName::ANY arguments::ANY+ statements::ANY+ branches::ANY+ ;
Argument = ;
MethodName = ;
SIPMethodName = name::ANY ;
ControlMethodName = name::ANY ;
Branch = statements::ANY+ ;
DefaultBranch = ;
NamedBranch = name::ANY+ ;
TypeExpression = ;
SimpleType = type::ANY ;
SequenceType = modifier::ANY type::ANY size::ANY ;
DefinedType = typeName::ANY ;
Declaration = ;
VariableDeclaration = type::ANY initExp::ANY ;
FunctionDeclaration = ;
RemoteFunctionDeclaration = functionLocation::ANY ;
LocalFunctionDeclaration = statements::ANY+ ;
StructureDeclaration = properties::ANY+ ;
StructureProperty = name::ANY type::ANY ;
FunctionCall = function::ANY parameters::ANY+ ;
Statement = ;
CompoundStat = statements::ANY+ ;
SetStat = target::ANY setValue::ANY ;
DeclarationStat = declaration::ANY ;
ReturnStat = returnedValue::ANY branch::ANY ;
IfStat = condition::ANY thenStatements::ANY+ elseStatements::ANY+ ;
WhenStat = idExp::ANY whenHeaders::ANY+ statements::ANY+ elseStatements::ANY+ ;
ForeachStat = iteratorName::ANY sequenceExp::ANY statements::ANY+ ;
SelectStat = matchedExp::ANY selectCases::ANY+ selectDefault::ANY ;
FunctionCallStat = functionCall::ANY ;
ContinueStat =  ;
BreakStat =  ;
PushStat = target::ANY pushedValue::ANY ;
WhenHeader = headerId::ANY value::ANY ;
SelectMember = ;
SelectDefault = statements::ANY+ ;
SelectCase = values::ANY+ ;
Expression = ;
ConstantExp = value::ANY ;
OperatorExp = opName::ANY leftExp::ANY rightExp::ANY ;
ForwardExp = isParallel::ANY exp::ANY ;
WithExp = exp::ANY msgFields::ANY+ ;
BlockExp = exp::ANY ;
ReasonExp =  ;
BODYExp =  ;
RequestURIExp =  ;
PopExp = source::ANY ;
FunctionCallExp = functionCall::ANY ;
Place = ;
SIPHeaderPlace = header::ANY ;
VariablePlace = ;
PropertyCallPlace = propName::ANY source::ANY ;
Variable = source::ANY ;
MessageField = ;
ReasonMessageField = exp::ANY ;
HeadedMessageField = headerId::ANY ;
Constant = ;
BooleanConstant = value::ANY ;
IntegerConstant = value::ANY ;
StringConstant = value::ANY ;
URIConstant = uri::ANY ;
SequenceConstant = values::ANY+ ;
ResponseConstant = response::ANY ;
Response = ;
SuccessResponse = successKind::ANY ;
ErrorResponse =  ;
ClientErrorResponse = errorKind::ANY ;
GlobalErrorResponse = errorKind::ANY ;
RedirectionErrorResponse = errorKind::ANY ;
ServerErrorResponse = errorKind::ANY ;
Direction = inout:: ;
Direction = in:: ;
Direction = out:: ;
SIPMethod = ACK:: ;
SIPMethod = BYE:: ;
SIPMethod = CANCEL:: ;
SIPMethod = INVITE:: ;
SIPMethod = NOTIFY:: ;
SIPMethod = OPTIONS:: ;
SIPMethod = REACK:: ;
SIPMethod = REGISTER:: ;
SIPMethod = REINVITE:: ;
SIPMethod = REREGISTER:: ;
SIPMethod = RESUBSCRIBE:: ;
SIPMethod = SUBSCRIBE:: ;
ControlMethod = deploy:: ;
ControlMethod = undeploy:: ;
ControlMethod = uninvite:: ;
ControlMethod = unregister:: ;
ControlMethod = unsubscribe:: ;
PrimitiveType = void:: ;
PrimitiveType = bool:: ;
PrimitiveType = int:: ;
PrimitiveType = request:: ;
PrimitiveType = response:: ;
PrimitiveType = string:: ;
PrimitiveType = time:: ;
PrimitiveType = uri:: ;
Modifier = LIFO:: ;
Modifier = FIFO:: ;
FunctionLocation = remote:: ;
FunctionLocation = local:: ;
SIPHeader = CALL_ID:: ;
SIPHeader = CONTACT:: ;
SIPHeader = CSEQ:: ;
SIPHeader = EVENT:: ;
SIPHeader = FROM:: ;
SIPHeader = MAX_FORWARDS:: ;
SIPHeader = SUBSCRIPTION_STATE:: ;
SIPHeader = TO:: ;
SIPHeader = VIA:: ;
SuccessKind = OK:: ;
SuccessKind = ACCEPTED:: ;
ClientErrorKind = ADDRESS_INCOMPLETE:: ;
ClientErrorKind = AMBIGUOUS:: ;
ClientErrorKind = BAD_EXTENSION:: ;
ClientErrorKind = BAD_REQUEST:: ;
ClientErrorKind = BUSY_HERE:: ;
ClientErrorKind = CALL_OR_TRANSACTION_DOES_NOT_EXIST:: ;
ClientErrorKind = EXTENSION_REQUIRED:: ;
ClientErrorKind = FORBIDDEN:: ;
ClientErrorKind = GONE:: ;
ClientErrorKind = INTERVAL_TOO_BRIEF:: ;
ClientErrorKind = LOOP_DETECTED:: ;
ClientErrorKind = METHOD_NOT_ALLOWED:: ;
ClientErrorKind = NOT_ACCEPTABLE_HERE:: ;
ClientErrorKind = NOT_ACCEPTABLE:: ;
ClientErrorKind = NOT_FOUND:: ;
ClientErrorKind = PAYMENT_REQUIRED:: ;
ClientErrorKind = PROXY_AUTHENTICATION_REQUIRED:: ;
ClientErrorKind = REQUESTURI_TOO_LONG:: ;
ClientErrorKind = REQUEST_ENTITY_TOO_LARGE:: ;
ClientErrorKind = REQUEST_PENDING:: ;
ClientErrorKind = REQUEST_TERMINATED:: ;
ClientErrorKind = REQUEST_TIMEOUT:: ;
ClientErrorKind = TEMPORARILY_UNAVAILABLE:: ;
ClientErrorKind = TOO_MANY_HOPS:: ;
ClientErrorKind = UNAUTHORIZED:: ;
ClientErrorKind = UNDECIPHERABLE:: ;
ClientErrorKind = UNSUPPORTED_MEDIA_TYPE:: ;
ClientErrorKind = UNSUPPORTED_URI_SCHEME:: ;
GlobalErrorKind = BUSY_EVERYWHERE:: ;
GlobalErrorKind = DECLINE:: ;
GlobalErrorKind = DOES_NOT_EXIST_ANYWHERE:: ;
GlobalErrorKind = NOT_ACCEPTABLE:: ;
RedirectionErrorKind = ALTERNATIVE_SERVICE:: ;
RedirectionErrorKind = MOVED_PERMANENTLY:: ;
RedirectionErrorKind = MOVED_TEMPORARILY:: ;
RedirectionErrorKind = MULTIPLE_CHOICES:: ;
RedirectionErrorKind = USE_PROXY:: ;
ServerErrorKind = BAD_GATEWAY:: ;
ServerErrorKind = MESSAGE_TOO_LARGE:: ;
ServerErrorKind = NOT_IMPLEMENTED:: ;
ServerErrorKind = SERVER_INTERNAL_ERROR:: ;
ServerErrorKind = SERVER_TIMEOUT:: ;
ServerErrorKind = SERVICE_UNAVAILABLE:: ;
ServerErrorKind = VERSION_NOT_SUPPORTED:: ;
