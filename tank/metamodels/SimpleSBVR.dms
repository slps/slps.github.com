Root = elements::Element+ ;
Element = Representation ;
Element = Text ;
Element = Meaning ;
Element = Role ;
Element = BindableTarget ;
Element = RoleBinding ;
Element = objectName::String ;
Representation = Designation ;
Representation = meaning::Meaning ;
Designation = text::Text ;
Text = value::String ;
Meaning = Concept ;
Meaning = LogicalFormulation ;
Meaning = representations::Representation+ ;
Concept = NounConcept ;
Concept = FactType ;
Concept = NounConcept ;
Concept = FactType ;
NounConcept = ObjectType ;
NounConcept = IndividualConcept ;
NounConcept = DataType ;
NounConcept = ObjectType ;
NounConcept = IndividualConcept ;
NounConcept = DataType ;
ObjectType = specializes::ObjectType generalizes::ObjectType+ ;
IndividualConcept = instanceOf::ObjectType ;
DataType = NonEmptyString ;
DataType = NonNegativeInteger ;
DataType = NonEmptyString ;
DataType = NonNegativeInteger ;
NonEmptyString = value::String ;
NonNegativeInteger = value::Integer ;
FactType = BinaryFactType ;
FactType = BinaryFactType ;
BinaryFactType = IsPropertyOfFactType ;
BinaryFactType = AssociativeFactType ;
BinaryFactType = CategorizationFactType ;
BinaryFactType = ObjectificationFactType ;
BinaryFactType = role1::FactTypeRole role2::FactTypeRole ;
IsPropertyOfFactType = ;
AssociativeFactType = ;
CategorizationFactType = ;
ObjectificationFactType = ;
Role = FactTypeRole ;
Role = nounConcept::NounConcept ;
FactTypeRole = ;
LogicalFormulation = AtomicFormulation ;
LogicalFormulation = NecessityFormulation ;
LogicalFormulation = Quantification ;
LogicalFormulation = AtomicFormulation ;
LogicalFormulation = NecessityFormulation ;
LogicalFormulation = Quantification ;
AtomicFormulation = BinaryAtomicFormulation ;
AtomicFormulation = isBasedOn::FactType ;
BinaryAtomicFormulation = roleBinding1::RoleBinding roleBinding2::RoleBinding ;
NecessityFormulation = ;
Quantification = UniversalQuantification ;
Quantification = AtLeastNQuantification ;
Quantification = ExactlyNQuantification ;
Quantification = AtMostNQuantification ;
Quantification = introducedVariable::Variable scopesOver::LogicalFormulation ;
UniversalQuantification = ;
AtLeastNQuantification = minCardinality::NonNegativeInteger ;
ExactlyNQuantification = cardinality::NonNegativeInteger ;
AtMostNQuantification = maxCardinality::NonNegativeInteger ;
BindableTarget = Variable ;
BindableTarget = Variable ;
Variable = rangesOver::ObjectType ;
RoleBinding = occursIn::AtomicFormulation isOf::FactType bindsTo::BindableTarget ;
