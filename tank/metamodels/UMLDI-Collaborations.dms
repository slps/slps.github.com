Element = ;
ModelElement = ;
GeneralizableElement = ;
Namespace = ;
Classifier = ;
Feature = ;
StructuralFeature = ;
AssociationEnd = association::ANY specification::ANY+ participant::ANY qualifier::ANY+ isNavigable::ANY ordering::ANY aggregation::ANY targetScope::ANY multiplicity::ANY changeability::ANY ;
Relationship = ;
Association = connection::ANY ;
Attribute = associationEnd::ANY initialValue::ANY ;
BehavioralFeature = ;
Operation = concurrency::ANY isRoot::ANY isLeaf::ANY isAbstract::ANY specification::ANY ;
Parameter = type::ANY behavioralFeature::ANY defaultValue::ANY kind::ANY ;
Generalization = parent::ANY powertype::ANY child::ANY discriminator::ANY ;
AggregationKind = ak_none:: ;
AggregationKind = ak_aggregate:: ;
AggregationKind = ak_composite:: ;
ChangeableKind = ck_changeable:: ;
ChangeableKind = ck_frozen:: ;
ChangeableKind = ck_addOnly:: ;
OrderingKind = ok_unordered:: ;
OrderingKind = ok_ordered:: ;
CallConcurrencyKind = cck_sequential:: ;
CallConcurrencyKind = cck_guarded:: ;
CallConcurrencyKind = cck_concurrent:: ;
ParameterDirectionKind = pdk_in:: ;
ParameterDirectionKind = pdk_inout:: ;
ParameterDirectionKind = pdk_out:: ;
ParameterDirectionKind = pdk_return:: ;
ScopeKind = sk_instance:: ;
ScopeKind = sk_classifier:: ;
VisibilityKind = vk_public:: ;
VisibilityKind = vk_protected:: ;
VisibilityKind = vk_private:: ;
VisibilityKind = vk_package:: ;
Multiplicity = range::ANY+ ;
MultiplicityRange = multiplicity::ANY lower::ANY upper::ANY ;
Expression = language::ANY body::ANY ;
BooleanExpression = ;
ObjectSetExpression = ;
ActionExpression = ;
IterationExpression = ;
Instance = ;
Signal = powertypeRange::ANY+ feature::ANY+ ;
Action = ;
CreateAction = instantiation::ANY ;
DestroyAction = actualArgument::ANY+ actionSequence::ANY recurrence::ANY target::ANY isAsynchronous::ANY script::ANY ;
UninterpretedAction = actualArgument::ANY+ actionSequence::ANY recurrence::ANY target::ANY isAsynchronous::ANY script::ANY ;
AttributeLink = instance::ANY value::ANY linkEnd::ANY attribute::ANY ;
Object = ownedInstance::ANY+ linkEnd::ANY+ classifier::ANY+ componentInstance::ANY slot::ANY+ ownedLink::ANY+ ;
Link = association::ANY connection::ANY ;
LinkObject = ;
DataValue = ownedInstance::ANY+ linkEnd::ANY+ classifier::ANY+ componentInstance::ANY slot::ANY+ ownedLink::ANY+ ;
CallAction = operation::ANY ;
SendAction = signal::ANY ;
ActionSequence = action::ANY+ ;
Argument = action::ANY value::ANY ;
Reception = signal::ANY specification::ANY isRoot::ANY isLeaf::ANY isAbstract::ANY ;
LinkEnd = link::ANY qualifiedValue::ANY+ instance::ANY associationEnd::ANY ;
ReturnAction = actualArgument::ANY+ actionSequence::ANY recurrence::ANY target::ANY isAsynchronous::ANY script::ANY ;
TerminateAction = actualArgument::ANY+ actionSequence::ANY recurrence::ANY target::ANY isAsynchronous::ANY script::ANY ;
Stimulus = argument::ANY+ communicationLink::ANY receiver::ANY dispatchAction::ANY sender::ANY ;
Exception = ;
ComponentInstance = resident::ANY+ nodeInstance::ANY ;
NodeInstance = resident::ANY+ ;
SubsystemInstance = ownedInstance::ANY+ linkEnd::ANY+ classifier::ANY+ componentInstance::ANY slot::ANY+ ownedLink::ANY+ ;
Collaboration = usedCollaboration::ANY+ representedOperation::ANY representedClassifier::ANY interaction::ANY+ constrainingElement::ANY+ ;
ClassifierRole = availableContents::ANY+ base::ANY+ conformingInstance::ANY+ availableFeature::ANY+ multiplicity::ANY ;
AssociationRole = base::ANY conformingLink::ANY+ message::ANY+ multiplicity::ANY ;
AssociationEndRole = base::ANY availableQualifier::ANY+ collaborationMultiplicity::ANY ;
Message = interaction::ANY conformingStimulus::ANY+ action::ANY communicationConnection::ANY activator::ANY receiver::ANY sender::ANY predecessor::ANY+ ;
Interaction = message::ANY+ context::ANY ;
InteractionInstanceSet = interaction::ANY context::ANY participatingStimulus::ANY+ ;
CollaborationInstanceSet = collaboration::ANY constrainingElement::ANY+ participatingInstance::ANY+ interactionInstanceSet::ANY+ participatingLink::ANY+ ;
