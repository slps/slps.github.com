Requirement = NonFunctionnelRequirement ;
Requirement = FunctionnelRequirement ;
Requirement = NonFunctionnelRequirement ;
Requirement = FunctionnelRequirement ;
NonFunctionnelRequirement = scopes::UseCase+ ;
FunctionnelRequirement = specifies::UseCase+ ;
UseCase = Manage ;
UseCase = scenario::ScenarioDescription+ condition::Condition+ interacter::Role+ specified_by::FunctionnelRequirement+ scoped_by::NonFunctionnelRequirement+ meet_by::Goal+ ;
Goal = to_meet::UseCase+ ;
Role = HumanRole ;
Role = SystemRole ;
Role = EventRole ;
Role = interacted_with::UseCase+ ;
HumanRole = ;
SystemRole = ;
EventRole = ;
Manage = managed_Resource::Resource+ ;
Resource = ;
ScenarioDescription = useCase::UseCase ;
Condition = Pre ;
Condition = Post ;
Condition = constrained_with::UseCase+ ;
Pre = ;
Post = ;
