AttributeUseType = null:: ;
AttributeUseType = optional:: ;
AttributeUseType = prohibited:: ;
AttributeUseType = required:: ;
AnnotedElement = NamedElement ;
AnnotedElement = XSchema ;
Annotation = documentations::Documentation+ applicationInfos::ApplicationInfo+ annotedElement::AnnotedElement ;
Documentation = text::String ;
ApplicationInfo = text::String ;
NamedElement = XSchemaContentElement ;
XSchema = namespace::String contents::XSchemaContentElement+ ;
XSchemaContentElement = Parameters ;
XSchemaContentElement = AbstractType ;
Element = references::ElementRef+ ;
Occurable = AbstractContent ;
Occurable = AbstractAttributeGroupContent ;
AbstractContent = Container ;
AbstractContent = AtomicContent ;
Container = All ;
Container = Choice ;
Container = Sequence ;
AtomicContent = ElementRef ;
AtomicContent = GroupRef ;
ElementRef = referencedElement::Element ;
GroupRef = referencedGroup::Group ;
All = contents::AbstractContent+ ;
Group = references::GroupRef+ ;
Choice = contents::AbstractContent+ ;
Sequence = contents::AbstractContent+ ;
AbstractAttributeGroupContent = AtomicAttributeGroupContent ;
AttributeGroup = contents::AbstractAttributeGroupContent+ references::AttributeGroupRef+ ;
AttributeGroupRef = referencedAttributeGroup::AttributeGroup ;
AtomicAttributeGroupContent = AttributeGroupRef ;
AtomicAttributeGroupContent = AttributeRef ;
Attribute = use::AttributeUseType references::AttributeRef+ ;
AttributeRef = referencedAttribute::Attribute ;
AbstractType = SimpleType ;
AbstractType = ComplexType ;
SimpleType = extensions::ComplexTypeSimpleContent+ ;
ComplexType = ComplexTypeSimpleContent ;
ComplexType = ComplexTypeComplexContent ;
ComplexType = extensions::ComplexTypeComplexContent+ content::AbstractContent attributes::AbstractAttributeGroupContent+ ;
ComplexTypeSimpleContent = base::SimpleType ;
ComplexTypeComplexContent = base::ComplexType ;
