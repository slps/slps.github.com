module Main

exports
  sorts
        OpenAttrs Annotated SchemaTop Redefinable FormChoice ReducedDerivationControl DerivationSet AllNNI Occurs TypeDefParticle NestedParticle FixedOrDefault AttributeType LocalAttribute TopLevelAttribute AttrDecls AnyAttribute ComplexTypeModel ComplexType TopLevelComplexType LocalComplexType ComplexRestriction ExtensionType ComplexExtension ComplexContent SimpleRestriction SimpleExtension SimpleContent BlockSet Element TopLevelElement LocalElement NamedGroup GroupRef ExplicitGroup SimpleExplicitGroup AllModel All Choice Sequence Wildcard Any NamedAttributeGroup AttributeGroupRef Include Redefine Import ImportRequiredNamespace ImportOptionalNamespace Selector Field Keybase IdentityConstraint Unique Key Keyref Notation AppinfoContent AnyContent Appinfo DocumentationContent Documentation Annotation SimpleDerivation SimpleDerivationSet SimpleType TopLevelSimpleType LocalSimpleType RangeFacets DigitFacets LengthFacets CommonFacets SimpleRestrictionModel List Union Facet NoFixedFacet RangeFacet MinExclusive MinInclusive MaxExclusive MaxInclusive NumFacet TotalDigits FractionDigits Length MinLength MaxLength Enumeration WhiteSpace WhiteSpaceReplaceOrCollapse WhiteSpaceCollapse Pattern 
  context-free syntax
        STR* -> OpenAttrs

        OpenAttrs id::STR? Annotation? -> Annotated

        Redefinable -> SchemaTop
        TopLevelElement -> SchemaTop
        TopLevelAttribute -> SchemaTop
        Notation -> SchemaTop

        TopLevelSimpleType -> Redefinable
        TopLevelComplexType -> Redefinable
        NamedGroup -> Redefinable
        NamedAttributeGroup -> Redefinable

        "qualified" -> FormChoice
        "unqualified" -> FormChoice

        ("extension" | "restriction")* -> ReducedDerivationControl

        "#all" -> DerivationSet
        ReducedDerivationControl -> DerivationSet

        INT -> AllNNI
        "unbounded" -> AllNNI

        (minOccurs::INT | maxOccurs::AllNNI)* -> Occurs

        GroupRef -> TypeDefParticle
        All -> TypeDefParticle
        Choice -> TypeDefParticle
        Sequence -> TypeDefParticle

        LocalElement -> NestedParticle
        GroupRef -> NestedParticle
        Choice -> NestedParticle
        Sequence -> NestedParticle
        Any -> NestedParticle

         -> FixedOrDefault
        fixed::STR -> FixedOrDefault
        default::STR -> FixedOrDefault

         -> AttributeType
        type::STR -> AttributeType
        LocalSimpleType -> AttributeType

        attribute::(Annotated use::("optional" | "prohibited" | "required")? FixedOrDefault (ref::STR | (name::STR form::FormChoice? AttributeType))) -> LocalAttribute

        attribute::(Annotated name::STR FixedOrDefault AttributeType) -> TopLevelAttribute

        (LocalAttribute | AttributeGroupRef)* AnyAttribute? -> AttrDecls

        anyAttribute::Wildcard -> AnyAttribute

        SimpleContent -> ComplexTypeModel
        mixed::("true" | "false")? (ComplexContent | (TypeDefParticle? AttrDecls)) -> ComplexTypeModel

        Annotated ComplexTypeModel -> ComplexType

        complexType::(ComplexType name::STR (abstract::("true" | "false") | block::DerivationSet | final::DerivationSet)*) -> TopLevelComplexType

        complexType::ComplexType -> LocalComplexType

        restriction::(Annotated base::STR TypeDefParticle? AttrDecls) -> ComplexRestriction

        Annotated base::STR -> ExtensionType

        extension::(ExtensionType TypeDefParticle? AttrDecls) -> ComplexExtension

        complexContent::(Annotated mixed::("true" | "false")? (ComplexRestriction | ComplexExtension)) -> ComplexContent

        restriction::(Annotated SimpleRestrictionModel AttrDecls) -> SimpleRestriction

        extension::(ExtensionType AttrDecls) -> SimpleExtension

        simpleContent::(Annotated (SimpleRestriction | SimpleExtension)) -> SimpleContent

        "#all" -> BlockSet
        ("extension" | "restriction" | "substitution")* -> BlockSet

        Annotated FixedOrDefault (nillable::("true" | "false") | block::BlockSet)* ( | type::STR | LocalSimpleType | LocalComplexType) IdentityConstraint* -> Element

        element::(Element name::STR (substitutionGroup::STR | abstract::("true" | "false") | final::DerivationSet)*) -> TopLevelElement

        element::(Occurs (ref::STR | (Element name::STR form::FormChoice?))) -> LocalElement

        group::(Annotated name::STR (all::AllModel | choice::SimpleExplicitGroup | sequence::SimpleExplicitGroup)) -> NamedGroup

        group::(Annotated Occurs ref::STR) -> GroupRef

        Annotated Occurs NestedParticle* -> ExplicitGroup

        Annotated NestedParticle* -> SimpleExplicitGroup

        Annotated element::((minOccurs::("0" | "1") | maxOccurs::("0" | "1"))* (ref::STR | (Element name::STR form::FormChoice?)))* -> AllModel

        all::(AllModel (minOccurs::("0" | "1") | maxOccurs::"1")*) -> All

        choice::ExplicitGroup -> Choice

        sequence::ExplicitGroup -> Sequence

        Annotated (namespace::("##any" | "##other" | (STR | "##targetNamespace" | "##local")*) | processContents::("lax" | "skip" | "strict"))* -> Wildcard

        any::(Wildcard Occurs) -> Any

        attributeGroup::(Annotated name::STR AttrDecls) -> NamedAttributeGroup

        attributeGroup::(Annotated ref::STR) -> AttributeGroupRef

        include::(Annotated schemaLocation::STR) -> Include

        redefine::(OpenAttrs id::STR? schemaLocation::STR (Annotation | Redefinable)*) -> Redefine

        Annotated schemaLocation::STR? -> Import

        import::(Import namespace::STR) -> ImportRequiredNamespace

        import::(Import namespace::STR?) -> ImportOptionalNamespace

        selector::(Annotated xpath::STR) -> Selector

        field::(Annotated xpath::STR) -> Field

        Annotated name::STR Selector Field+ -> Keybase

        Unique -> IdentityConstraint
        Key -> IdentityConstraint
        Keyref -> IdentityConstraint

        unique::Keybase -> Unique

        key::Keybase -> Key

        keyref::(Keybase refer::STR) -> Keyref

        notation::(Annotated name::STR public::STR system::STR?) -> Notation

        AnyContent -> AppinfoContent

        (STR | (ANY* AnyContent))* -> AnyContent

        appinfo::(source::STR? AppinfoContent) -> Appinfo

        AnyContent -> DocumentationContent

        documentation::((source::STR | xml:lang::STR)* DocumentationContent) -> Documentation

        annotation::(OpenAttrs id::STR? (Documentation | Appinfo)*) -> Annotation

        SimpleRestriction -> SimpleDerivation
        List -> SimpleDerivation
        Union -> SimpleDerivation

        "#all" -> SimpleDerivationSet
        ("list" | "union" | "restriction")* -> SimpleDerivationSet

        Annotated SimpleDerivation -> SimpleType

        simpleType::(SimpleType name::STR final::SimpleDerivationSet?) -> TopLevelSimpleType

        simpleType::SimpleType -> LocalSimpleType

        (MinExclusive | MinInclusive)? (MaxExclusive | MaxInclusive)? -> RangeFacets

        TotalDigits? FractionDigits? -> DigitFacets

        Length -> LengthFacets
        MinLength? MaxLength? -> LengthFacets

        Enumeration* WhiteSpaceCollapse? Pattern* -> CommonFacets

        base::"xs:anySimpleType" RangeFacets DigitFacets LengthFacets WhiteSpace? Enumeration* Pattern* -> SimpleRestrictionModel
        base::"xs:string" LengthFacets WhiteSpace? Enumeration* Pattern* -> SimpleRestrictionModel
        base::"xs:normalizedString" LengthFacets WhiteSpaceReplaceOrCollapse? Enumeration* Pattern* -> SimpleRestrictionModel
        base::("xs:token" | "xs:language" | "xs:Name" | "xs:NCName" | "xs:ID" | "xs:IDREF" | "xs:IDREFS" | "xs:NMTOKEN" | "xs:NMTOKENS" | "xs:ENTITY" | "xs:ENTITIES" | "xs:hexBinary" | "xs:base64Binary" | "xs:anyURI" | "xs:QName" | "xs:NOTATION") LengthFacets CommonFacets -> SimpleRestrictionModel
        base::"xs:boolean" WhiteSpaceCollapse? Pattern* -> SimpleRestrictionModel
        base::("xs:decimal" | "xs:integer" | "xs:nonPositiveInteger" | "xs:nonNegativeInteger" | "xs:positiveInteger" | "xs:negativeInteger" | "xs:unsignedLong" | "xs:unsignedInt" | "xs:unsignedShort" | "xs:unsignedByte" | "xs:long" | "xs:int" | "xs:short" | "xs:byte") DigitFacets RangeFacets CommonFacets -> SimpleRestrictionModel
        base::("xs:float" | "xs:double" | "xs:duration" | "xs:dateTime" | "xs:time" | "xs:date" | "xs:gYearMonth" | "xs:gYear" | "xs:gMonthDay" | "xs:gMonth" | "xs:gDay") RangeFacets CommonFacets -> SimpleRestrictionModel
        (base::STR | LocalSimpleType) RangeFacets DigitFacets LengthFacets WhiteSpace? Enumeration* Pattern* -> SimpleRestrictionModel

        list::(Annotated (LocalSimpleType | itemType::STR)) -> List

        union::(Annotated ((memberTypes::(STR+) LocalSimpleType*) | (memberTypes::? LocalSimpleType+))) -> Union

        Annotated fixed::("true" | "false")? -> Facet

        Annotated value::STR -> NoFixedFacet

        Facet value::(INT | STR | "UNKNOWN data") -> RangeFacet

        minExclusive::RangeFacet -> MinExclusive

        minInclusive::RangeFacet -> MinInclusive

        maxExclusive::RangeFacet -> MaxExclusive

        maxInclusive::RangeFacet -> MaxInclusive

        Facet value::INT -> NumFacet

        totalDigits::(Facet value::INT) -> TotalDigits

        fractionDigits::NumFacet -> FractionDigits

        length::NumFacet -> Length

        minLength::NumFacet -> MinLength

        maxLength::NumFacet -> MaxLength

        enumeration::NoFixedFacet -> Enumeration

        whiteSpace::(Facet value::("preserve" | "replace" | "collapse")) -> WhiteSpace

        whiteSpace::(Facet value::("replace" | "collapse")) -> WhiteSpaceReplaceOrCollapse

        whiteSpace::(Facet value::"collapse") -> WhiteSpaceCollapse

        pattern::NoFixedFacet -> Pattern
