Type = BasicType ;
Type = InstanceType ;
Type = EnumType ;
Type = OclAnyType ;
Type = OclTypeType ;
Type = CollectionType ;
BasicType = IntegerType ;
BasicType = RealType ;
BasicType = StringType ;
BasicType = BooleanType ;
InstanceType = classifier::Classifier ;
EnumType = enumLiteral::EnumLiteral+ ;
OclAnyType = supertype::Type+ subtype::Type+ collectionType::CollectionType+ ;
OclTypeType = supertype::Type+ subtype::Type+ collectionType::CollectionType+ ;
CollectionType = SetType ;
CollectionType = SequenceType ;
CollectionType = BagType ;
IntegerType =  ;
RealType =  ;
StringType =  ;
BooleanType =  ;
Classifier = instanceType::InstanceType ;
EnumLiteral = enumType::EnumType ;
SetType = elementType::Type ;
SequenceType = elementType::Type ;
BagType = elementType::Type ;
