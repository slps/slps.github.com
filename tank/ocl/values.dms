Value = BasicValue ;
Value = ObjectValue ;
Value = EnumValue ;
Value = UndefinedValue ;
Value = CollectionValue ;
BasicValue = IntegerValue ;
BasicValue = RealValue ;
BasicValue = StringValue ;
BasicValue = BooleanValue ;
IntegerValue = val::Integer ;
RealValue = val::Double ;
StringValue = val::String ;
BooleanValue = val::Boolean ;
ObjectValue = object::Object ;
Object = objectValue::ObjectValue ;
EnumValue = enumLiteral::EnumLiteral ;
EnumLiteral = enumValue::EnumValue ;
UndefinedValue = type::Type bagValue::BagValue+ sequenceValue::SequenceValue+ setValue::SetValue+ ;
BagValue = elements::Value+ ;
SequenceValue = elements::Value+ ;
SetValue = elements::Value+ ;
Count = num::Integer ;
