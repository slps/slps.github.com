nettype.uri:
        type::"http://www.pnml.org/version-2009/grammar/symmetricnet"
SortDeclaration:
        Partition
OperatorDeclaration:
        PartitionElement
BuiltInOperator:
        PartitionOperator
Partition:
        partition::(SortDeclaration.content Sort PartitionElement+)
PartitionElement:
        partitionelement::(OperatorDeclaration.content Term+)
PartitionOperator.content:
        BuiltInOperator.content
PartitionOperator:
        PartitionLessThan
        PartitionGreaterThan
        PartitionElementOf
PartitionLessThan:
        ltp::PartitionOperator.content
PartitionGreaterThan:
        gtp::PartitionOperator.content
PartitionElementOf:
        partitionelementof::(refpartition::STR PartitionOperator.content)
BuiltInSort:
        CyclicEnumeration
BuiltInOperator:
        CyclicEnumOperator
CyclicEnumeration:
        cyclicenumeration::FiniteEnumeration.content
CyclicEnumOperator.content:
        BuiltInOperator.content
CyclicEnumOperator:
        Successor
        Predecessor
Successor:
        successor::CyclicEnumOperator.content
Predecessor:
        predecessor::CyclicEnumOperator.content
OperatorDeclaration:
        FEConstant
BuiltInSort:
        FiniteEnumeration
FiniteEnumeration.content:
        FEConstant*
FiniteEnumeration:
        finiteenumeration::FiniteEnumeration.content
FEConstant:
        feconstant::OperatorDeclaration.content
BuiltInSort:
        FiniteIntRange
BuiltInOperator:
        FiniteIntRangeOperator
BuiltInConstant:
        FiniteIntRangeConstant
FiniteIntRange:
        finiteintrange::(start::INT end::INT)
FiniteIntRangeOperator.content:
        BuiltInOperator.content
FiniteIntRangeOperator:
        FIRLessThan
        FIRLessThanOrEqual
        FIRGreaterThan
        FIRGreaterThanOrEqual
FIRLessThan:
        lessthan::FiniteIntRangeOperator.content
FIRLessThanOrEqual:
        lessthanorequal::FiniteIntRangeOperator.content
FIRGreaterThan:
        greaterthan::FiniteIntRangeOperator.content
FIRGreaterThanOrEqual:
        greaterthanorequal::FiniteIntRangeOperator.content
FiniteIntRangeConstant:
        finiteintrangeconstant::(value::INT FiniteIntRange BuiltInConstant.content)
Operator:
        Equality
        Inequality
BuiltInSort:
        Bool
BuiltInOperator:
        BooleanOperator
BuiltInConstant:
        BooleanConstant
Bool:
        bool::EPSILON
BooleanOperator.content:
        BuiltInOperator.content
BooleanOperator:
        And
        Or
        Imply
        Not
And:
        and::BooleanOperator.content
Or:
        or::BooleanOperator.content
Not:
        not::BooleanOperator.content
Imply:
        imply::BooleanOperator.content
Equality:
        equality::Operator.content
Inequality:
        inequality::Operator.content
BooleanConstant:
        booleanconstant::(value::("true" | "false") BuiltInConstant.content)
BuiltInOperator:
        Cardinality
        CardinalityOf
        Contains
MultisetOperator:
        Add
        All
        NumberOf
        Subtract
        ScalarProduct
        Empty
Add:
        add::MultisetOperator.content
Subtract:
        subtract::MultisetOperator.content
All:
        all::(MultisetOperator.content Sort)
Empty:
        empty::(MultisetOperator.content Sort)
ScalarProduct:
        scalarproduct::MultisetOperator.content
NumberOf:
        numberof::MultisetOperator.content
Cardinality:
        cardinality::BuiltInOperator.content
CardinalityOf:
        cardinalityof::BuiltInOperator.content
Contains:
        contains::BuiltInOperator.content
BuiltInSort:
        Dot
BuiltInConstant:
        DotConstant
Dot:
        dot::EPSILON
DotConstant:
        dotconstant::EPSILON
BuiltInSort:
        Number
BuiltInOperator:
        IntegerOperator
BuiltInConstant:
        NumberConstant
Number:
        Natural
        Positive
        Integer
Integer:
        integer::EPSILON
Natural:
        natural::EPSILON
Positive:
        positive::EPSILON
IntegerOperator.content:
        BuiltInOperator.content
IntegerOperator:
        Addition
        Subtraction
        Multiplication
        Division
        Modulo
        GreaterThan
        GreaterThanOrEqual
        LessThan
        LessThanOrEqual
NumberConstant:
        numberconstant::(value::INT (BuiltInConstant.content Number))
LessThan:
        lt::IntegerOperator
LessThanOrEqual:
        leq::IntegerOperator
GreaterThan:
        gt::IntegerOperator
GreaterThanOrEqual:
        geq::IntegerOperator
Addition:
        addition::IntegerOperator
Subtraction:
        subtraction::IntegerOperator
Multiplication:
        mult::IntegerOperator
Division:
        div::IntegerOperator
Modulo:
        mod::IntegerOperator
net.labels:
        HLDeclaration*
page.labels:
        HLDeclaration*
place.labels:
        Type? HLMarking?
transition.labels:
        Condition?
arc.labels:
        HLAnnotation?
HLDeclaration:
        declaration::(simpletextlabel.content (structure::Declarations)?)
Type:
        type::(simpletextlabel.content (structure::Sort)?)
HLMarking:
        hlinitialMarking::(simpletextlabel.content (structure::Term)?)
Condition:
        condition::(simpletextlabel.content (structure::Term)?)
HLAnnotation:
        hlinscription::(simpletextlabel.content (structure::Term)?)
Declarations:
        declarations::(Declaration*)
Declaration.content:
        id::STR name::STR
Declaration:
        SortDeclaration
        VariableDeclaration
        OperatorDeclaration
VariableDeclaration:
        variabledecl::(Declaration.content Sort)
SortDeclaration.content:
        Declaration.content
SortDeclaration:
        NamedSort
OperatorDeclaration.content:
        Declaration.content
OperatorDeclaration:
        NamedOperator
Variable:
        variable::refvariable::STR
NamedSort:
        namedsort::(SortDeclaration.content Sort)
NamedOperator:
        namedoperator::(OperatorDeclaration.content parameter::(VariableDeclaration*) def::Term)
Term.content:
        EPSILON
Term:
        Variable
        Operator
Sort.content:
        EPSILON
Sort:
        BuiltInSort
        MultisetSort
        ProductSort
        UserSort
BuiltInSort:
        EPSILON
MultisetSort:
        multisetsort::Sort
ProductSort:
        productsort::(Sort*)
UserSort:
        usersort::declaration::STR
Operator.content:
        subterm::Term*
Operator:
        BuiltInOperator
        BuiltInConstant
        MultisetOperator
        Tuple
        UserOperator
BuiltInOperator.content:
        Operator.content
BuiltInOperator:
        EPSILON
BuiltInConstant.content:
        Operator.content
BuiltInConstant:
        EPSILON
MultisetOperator.content:
        Operator.content
MultisetOperator:
        EPSILON
Tuple:
        tuple::Operator.content
UserOperator:
        useroperator::(declaration::STR Operator.content)
pnml.element:
        pnml::(pnml.content+)
pnml.content:
        net.element
net.element:
        net::(identifier.content nettype.uri (Name? net.labels page.content+ toolspecific.element*))
identifier.content:
        id::STR
nettype.uri:
        type::"http://www.pnml.org/version-2009/grammar/pnmlcoremodel"
net.labels:
        EPSILON
basicobject.content:
        Name? toolspecific.element*
page.content:
        page::(identifier.content (basicobject.content page.labels netobject.content* (graphics::pagegraphics.content)?))
netobject.content:
        page.content
        place.content
        transition.content
        refplace.content
        reftrans.content
        arc.content
page.labels:
        EPSILON
place.content:
        place::(identifier.content (basicobject.content place.labels node.content))
place.labels:
        EPSILON
transition.content:
        transition::(identifier.content (basicobject.content transition.labels node.content))
transition.labels:
        EPSILON
node.content:
        (graphics::nodegraphics.content)?
reference:
        ref::STR
refplace.content:
        referencePlace::refnode.content
reftrans.content:
        referenceTransition::refnode.content
refnode.content:
        identifier.content reference basicobject.content node.content
arc.content:
        arc::(identifier.content source::STR target::STR (Name? arc.labels (graphics::edgegraphics.content)? toolspecific.element*))
arc.labels:
        EPSILON
pagegraphics.content:
        nodegraphics.content
nodegraphics.content:
        position.element dimension.element? fill.element? line.element?
edgegraphics.content:
        position.element* line.element?
simpletext.content:
        (text::STR)?
annotationstandard.content:
        (graphics::annotationgraphics.content)? toolspecific.element*
simpletextlabel.content:
        simpletext.content annotationstandard.content
Name:
        name::simpletextlabel.content
annotationgraphics.content:
        offset.element (fill.element? line.element? font.element?)
position.element:
        position::coordinate.attributes
offset.element:
        offset::coordinate.attributes
coordinate.attributes:
        x::INT y::INT
dimension.element:
        dimension::(x::positiveDecimal.content y::positiveDecimal.content)
positiveDecimal.content:
        INT
fill.element:
        fill::((color::color.type)? (gradient-color::color.type)? (gradient-rotation::("vertical" | "horizontal" | "diagonal"))? (image::STR)?)
line.element:
        line::((shape::("line" | "curve"))? (color::color.type)? (width::positiveDecimal.content)? (style::("solid" | "dash" | "dot"))?)
color.type:
        STR
font.element:
        font::((family::STR)? (style::STR)? (weight::STR)? (size::STR)? (decoration::("underline" | "overline" | "line-through"))? (align::("left" | "center" | "right"))? (rotation::INT)?)
toolspecific.element:
        toolspecific::(tool::STR version::STR anyElement*)
anyElement:
        (ANY | STR | anyElement)*
