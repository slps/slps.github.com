office-process-content:
        (office:process-content::boolean)?
office-document:
        office:document::(office-document-attrs office-document-common-attrs office-meta office-settings office-scripts office-font-face-decls office-styles office-automatic-styles office-master-styles office-body)
office-document-content:
        office:document-content::(office-document-common-attrs office-scripts office-font-face-decls office-automatic-styles office-body)
office-document-styles:
        office:document-styles::(office-document-common-attrs office-font-face-decls office-styles office-automatic-styles office-master-styles)
office-document-meta:
        office:document-meta::(office-document-common-attrs office-meta)
office-document-settings:
        office:document-settings::(office-document-common-attrs office-settings)
office-document-common-attrs:
        (office:version::string)?
office-document-attrs:
        office:mimetype::string
office-meta:
        (office:meta::office-meta-content)?
office-meta-content:
        anyElements
office-meta-content-strict:
        office-meta-data*
office-body:
        office:body::office-body-content
office-body-content:
        office:text::(office-text-attlist office-text-content-prelude office-text-content-main* office-text-content-epilogue)
office-body-content:
        office:drawing::(office-drawing-attlist office-drawing-content-prelude office-drawing-content-main office-drawing-content-epilogue)
office-body-content:
        office:presentation::(office-presentation-attlist office-presentation-content-prelude office-presentation-content-main office-presentation-content-epilogue)
office-body-content:
        office:spreadsheet::(office-spreadsheet-attlist office-spreadsheet-content-prelude office-spreadsheet-content-main office-spreadsheet-content-epilogue)
office-body-content:
        office:chart::(office-chart-attlist office-chart-content-prelude office-chart-content-main office-chart-content-epilogue)
office-body-content:
        office:image::(office-image-attlist office-image-content-prelude office-image-content-main office-image-content-epilogue)
office-text-content-prelude:
        office-forms text-tracked-changes text-decls table-decls
office-text-content-main:
        text-content*
        text-page-sequence (draw-a | shape)*
text-content:
        text-h
        text-p
        text-list
        text-numbered-paragraph
        table-table
        draw-a
        text-section
        text-table-of-content
        text-illustration-index
        text-table-index
        text-object-index
        text-user-index
        text-alphabetical-index
        text-bibliography
        shape
        change-marks
office-text-content-epilogue:
        table-functions
office-text-attlist:
        (text:global::boolean)?
office-drawing-attlist:
        EPSILON
office-drawing-content-prelude:
        text-decls table-decls
office-drawing-content-main:
        draw-page*
office-drawing-content-epilogue:
        table-functions
office-presentation-attlist:
        EPSILON
office-presentation-content-prelude:
        text-decls table-decls presentation-decls
office-presentation-content-main:
        draw-page*
office-presentation-content-epilogue:
        presentation-settings table-functions
office-spreadsheet-content-prelude:
        table-tracked-changes? text-decls table-decls
table-decls:
        table-calculation-settings? table-content-validations? table-label-ranges?
office-spreadsheet-content-main:
        table-table*
office-spreadsheet-content-epilogue:
        table-functions
table-functions:
        table-named-expressions? table-database-ranges? table-data-pilot-tables? table-consolidation? table-dde-links?
office-chart-attlist:
        EPSILON
office-chart-content-prelude:
        text-decls table-decls
office-chart-content-main:
        chart-chart
office-chart-content-epilogue:
        table-functions
office-image-attlist:
        EPSILON
office-image-content-prelude:
        EPSILON
office-image-content-main:
        draw-frame
office-image-content-epilogue:
        EPSILON
office-settings:
        (office:settings::(config-config-item-set+))?
config-config-item-set:
        config:config-item-set::(config-config-item-set-attlist config-items)
config-items:
        (config-config-item | config-config-item-set | config-config-item-map-named | config-config-item-map-indexed)+
config-config-item-set-attlist:
        config:name::string
config-config-item:
        config:config-item::(config-config-item-attlist STR)
config-config-item-attlist:
        config:name::string
config-config-item-attlist:
        config:type::("boolean" | "short" | "int" | "long" | "double" | "string" | "datetime" | "base64Binary")
config-config-item-map-indexed:
        config:config-item-map-indexed::(config-config-item-map-indexed-attlist config-config-item-map-entry+)
config-config-item-map-indexed-attlist:
        config:name::string
config-config-item-map-entry:
        config:config-item-map-entry::(config-config-item-map-entry-attlist config-items)
config-config-item-map-entry-attlist:
        (config:name::string)?
config-config-item-map-named:
        config:config-item-map-named::(config-config-item-map-named-attlist config-config-item-map-entry+)
config-config-item-map-named-attlist:
        config:name::string
office-scripts:
        (office:scripts::(office-script* office-event-listeners?))?
office-script:
        office:script::(office-script-attlist STR? anyElements STR?)
office-script-attlist:
        script:language::string
office-font-face-decls:
        (office:font-face-decls::(style-font-face*))?
office-styles:
        (office:styles::(styles style-default-style* text-outline-style? text-notes-configuration* text-bibliography-configuration? text-linenumbering-configuration? draw-gradient* svg-linearGradient* svg-radialGradient* draw-hatch* draw-fill-image* draw-marker* draw-stroke-dash* draw-opacity* style-presentation-page-layout*))?
office-automatic-styles:
        (office:automatic-styles::(styles style-page-layout*))?
office-master-styles:
        (office:master-styles::(style-master-page* style-handout-master? draw-layer-set?))?
styles:
        style-style* text-list-style* number-number-style* number-currency-style* number-percentage-style* number-date-style* number-time-style* number-boolean-style* number-text-style*
office-meta-data:
        meta:generator::string
office-meta-data:
        dc:title::string
office-meta-data:
        dc:description::string
office-meta-data:
        dc:subject::string
office-meta-data:
        meta:keyword::string
office-meta-data:
        meta:initial-creator::string
office-meta-data:
        dc-creator
office-meta-data:
        meta:printed-by::string
office-meta-data:
        meta:creation-date::dateTime
office-meta-data:
        dc-date
office-meta-data:
        meta:print-date::dateTime
office-meta-data:
        meta:template::(xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:title::string)? (meta:date::dateTime)?)
office-meta-data:
        meta:auto-reload::((xlink:type::"simple")? (xlink:show::"replace")? (xlink:actuate::"onLoad")? (xlink:href::anyURI)? (meta:delay::duration)?)
office-meta-data:
        meta:hyperlink-behaviour::((office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?)
office-meta-data:
        dc:language::language
office-meta-data:
        meta:editing-cycles::nonNegativeInteger
office-meta-data:
        meta:editing-duration::duration
office-meta-data:
        meta:document-statistic::((meta:page-count::nonNegativeInteger)? (meta:table-count::nonNegativeInteger)? (meta:draw-count::nonNegativeInteger)? (meta:image-count::nonNegativeInteger)? (meta:ole-object-count::nonNegativeInteger)? (meta:paragraph-count::nonNegativeInteger)? (meta:word-count::nonNegativeInteger)? (meta:character-count::nonNegativeInteger)? (frame-count::nonNegativeInteger)? (sentence-count::nonNegativeInteger)? (syllable-count::nonNegativeInteger)? (non-whitespace-character-count::nonNegativeInteger)? (meta:row-count::nonNegativeInteger)? (meta:cell-count::nonNegativeInteger)? (meta:object-count::nonNegativeInteger)?)
office-meta-data:
        meta:user-defined::(meta:name::string ((meta:value-type::"float" double) | (meta:value-type::"date" dateOrDateTime) | (meta:value-type::"time" duration) | (meta:value-type::"boolean" boolean) | (meta:value-type::"string" string) | STR))
dc-creator:
        dc:creator::string
dc-date:
        dc:date::dateTime
text-h:
        text:h::(heading-attrs paragraph-attrs text-number? paragraph-content*)
heading-attrs:
        text:outline-level::positiveInteger
heading-attrs:
        (text:restart-numbering::boolean)?
heading-attrs:
        (text:start-value::nonNegativeInteger)?
heading-attrs:
        (text:is-list-header::boolean)?
text-number:
        text:number::string
text-p:
        text:p::(paragraph-attrs paragraph-content*)
paragraph-attrs:
        (text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? (text:cond-style-name::styleNameRef)?
paragraph-attrs:
        text-id?
text-page-sequence:
        text:page-sequence::(text-page+)
text-page:
        text:page::text-page-attlist
text-page-attlist:
        text:master-page-name::styleNameRef
text-list:
        text:list::(text-list-attr text-list-header? text-list-item*)
text-list-attr:
        (text:style-name::styleNameRef)?
text-list-attr:
        (text:continue-numbering::boolean)?
text-list-item:
        text:list-item::(text-list-item-attr text-list-item-content)
text-list-item-content:
        text-number? (text-p | text-h | text-list)*
text-list-item-attr:
        (text:start-value::nonNegativeInteger)?
text-list-header:
        text:list-header::text-list-item-content
text-numbered-paragraph:
        text:numbered-paragraph::(text-numbered-paragraph-attr text-number? (text-p | text-h))
text-numbered-paragraph-attr:
        (text:level::positiveInteger)?
text-numbered-paragraph-attr:
        text-list-attr
text-numbered-paragraph-attr:
        text-list-item-attr
text-section:
        text:section::(text-section-attr (text-section-source | text-section-source-dde | EPSILON) text-content*)
text-section-attr:
        sectionAttr
text-section-attr:
        text:display::("true" | "none")
        text:display::"condition" text:condition::string
        EPSILON
sectionAttr:
        (text:style-name::styleNameRef)?
sectionAttr:
        text:name::string
sectionAttr:
        (text:protected::boolean)?
sectionAttr:
        (text:protection-key::string)?
text-section-source:
        text:section-source::text-section-source-attr
text-section-source-attr:
        (xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")?)?
text-section-source-attr:
        (text:section-name::string)?
text-section-source-attr:
        (text:filter-name::string)?
text-section-source-dde:
        office-dde-source
text-tracked-changes:
        (text:tracked-changes::(text-tracked-changes-attr text-changed-region*))?
text-tracked-changes-attr:
        (text:track-changes::boolean)?
text-changed-region:
        text:changed-region::(text-changed-region-attr text-changed-region-content)
text-changed-region-attr:
        text:id::ID
text-changed-region-content:
        text:insertion::office-change-info
text-changed-region-content:
        text:deletion::(office-change-info text-content*)
text-changed-region-content:
        text:format-change::office-change-info
change-marks:
        text:change::change-mark-attr
        text:change-start::change-mark-attr
        text:change-end::change-mark-attr
change-mark-attr:
        text:change-id::IDREF
text-decls:
        (text:variable-decls::(text-variable-decl*))? (text:sequence-decls::(text-sequence-decl*))? (text:user-field-decls::(text-user-field-decl*))? (text:dde-connection-decls::(text-dde-connection-decl*))? text-alphabetical-index-auto-mark-file?
paragraph-content:
        STR
paragraph-content:
        text:s::((text:c::nonNegativeInteger)?)
paragraph-content:
        text:tab::text-tab-attr
paragraph-content:
        text:line-break::EPSILON
paragraph-content:
        text:span::((text:style-name::styleNameRef)? (text:class-names::styleNameRefs)? paragraph-content*)
paragraph-content:
        text:a::(text-a-attlist office-event-listeners? paragraph-content*)
paragraph-content:
        text:bookmark::text:name::string
        text:bookmark-start::text:name::string
        text:bookmark-end::text:name::string
paragraph-content:
        text:reference-mark::text:name::string
paragraph-content:
        text:reference-mark-start::text:name::string
        text:reference-mark-end::text:name::string
paragraph-content:
        text:note::(text-note-class (text:id::string)? text:note-citation::((text:label::string)? STR) text:note-body::(text-content*))
paragraph-content:
        text:ruby::((text:style-name::styleNameRef)? text:ruby-base::paragraph-content text:ruby-text::((text:style-name::styleNameRef)? STR))
paragraph-content:
        office-annotation
paragraph-content:
        change-marks
paragraph-content:
        shape
        draw-a
paragraph-content:
        text:date::(text-date-attlist STR)
paragraph-content:
        text:time::(text-time-attlist STR)
paragraph-content:
        text:page-number::(text-page-number-attlist STR)
paragraph-content:
        text:page-continuation::(text-page-continuation-attlist STR)
paragraph-content:
        text:sender-firstname::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-lastname::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-initials::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-title::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-position::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-email::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-phone-private::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-fax::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-company::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-phone-work::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-street::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-city::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-postal-code::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-country::(common-field-fixed-attlist STR)
paragraph-content:
        text:sender-state-or-province::(common-field-fixed-attlist STR)
paragraph-content:
        text:author-name::(common-field-fixed-attlist STR)
paragraph-content:
        text:author-initials::(common-field-fixed-attlist STR)
paragraph-content:
        text:chapter::(text-chapter-attlist STR)
paragraph-content:
        text:file-name::(text-file-name-attlist STR)
paragraph-content:
        text:template-name::(text-template-name-attlist STR)
paragraph-content:
        text:sheet-name::STR
paragraph-content:
        text:variable-set::(common-field-name-attlist common-field-formula-attlist common-value-and-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:variable-get::(common-field-name-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:variable-input::(common-field-name-attlist common-field-description-attlist common-value-type-attlist common-field-display-value-none-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:user-field-get::(common-field-name-attlist common-field-display-value-formula-none-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:user-field-input::(common-field-name-attlist common-field-description-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:sequence::(common-field-name-attlist common-field-formula-attlist common-field-num-format-attlist text-sequence-ref-name STR)
paragraph-content:
        text:expression::(common-field-formula-attlist common-value-and-type-attlist? common-field-display-value-formula-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:text-input::(common-field-description-attlist STR)
paragraph-content:
        text:initial-creator::(common-field-fixed-attlist STR)
paragraph-content:
        text:creation-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::dateOrDateTime)? STR)
paragraph-content:
        text:creation-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::timeOrDateTime)? STR)
paragraph-content:
        text:description::(common-field-fixed-attlist STR)
paragraph-content:
        text:user-defined::(common-field-fixed-attlist text:name::string common-field-data-style-name-attlist (office:value::double)? (office:date-value::dateOrDateTime)? (office:time-value::duration)? (office:boolean-value::boolean)? (office:string-value::string)? STR)
paragraph-content:
        text:print-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? STR)
paragraph-content:
        text:print-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? STR)
paragraph-content:
        text:printed-by::(common-field-fixed-attlist STR)
paragraph-content:
        text:title::(common-field-fixed-attlist STR)
paragraph-content:
        text:subject::(common-field-fixed-attlist STR)
paragraph-content:
        text:keywords::(common-field-fixed-attlist STR)
paragraph-content:
        text:editing-cycles::(common-field-fixed-attlist STR)
paragraph-content:
        text:editing-duration::(common-field-fixed-attlist common-field-data-style-name-attlist (text:duration::duration)? STR)
paragraph-content:
        text:modification-time::(common-field-fixed-attlist common-field-data-style-name-attlist (text:time-value::time)? STR)
paragraph-content:
        text:modification-date::(common-field-fixed-attlist common-field-data-style-name-attlist (text:date-value::date)? STR)
paragraph-content:
        text:creator::(common-field-fixed-attlist STR)
paragraph-content:
        text:page-count::(common-field-num-format-attlist STR)
        text:paragraph-count::(common-field-num-format-attlist STR)
        text:word-count::(common-field-num-format-attlist STR)
        text:character-count::(common-field-num-format-attlist STR)
        text:table-count::(common-field-num-format-attlist STR)
        text:image-count::(common-field-num-format-attlist STR)
        text:object-count::(common-field-num-format-attlist STR)
paragraph-content:
        text:database-display::(text-database-display-attlist STR)
paragraph-content:
        text:database-next::text-database-next-attlist
paragraph-content:
        text:database-row-select::text-database-row-select-attlist
paragraph-content:
        text:database-row-number::(common-field-database-table common-field-num-format-attlist (text:value::nonNegativeInteger)? STR)
paragraph-content:
        text:database-name::(common-field-database-table STR)
paragraph-content:
        text:page-variable-set::(text-set-page-variable-attlist STR)
paragraph-content:
        text:page-variable-get::(text-get-page-variable-attlist STR)
paragraph-content:
        text:placeholder::(text-placeholder-attlist STR)
paragraph-content:
        text:conditional-text::(text-conditional-text-attlist STR)
paragraph-content:
        text:hidden-text::(text-hidden-text-attlist STR)
paragraph-content:
        text:reference-ref::(text-common-ref-content text-ref-content)
        text:bookmark-ref::(text-common-ref-content text-ref-content)
paragraph-content:
        text:note-ref::(text-common-ref-content text-note-ref-content text-ref-content)
paragraph-content:
        text:sequence-ref::(text-common-ref-content text-sequence-ref-content)
paragraph-content:
        text:script::(((xlink:href::anyURI (xlink:type::"simple")?) | STR) (script:language::string)?)
paragraph-content:
        text:execute-macro::((text:name::string)? office-event-listeners? STR)
paragraph-content:
        text:hidden-paragraph::(text-hidden-paragraph-attlist STR)
paragraph-content:
        text:dde-connection::(text:connection-name::string STR)
paragraph-content:
        text:measure::(text:kind::("value" | "unit" | "gap") STR)
paragraph-content:
        text:table-formula::(common-field-formula-attlist common-field-display-value-formula-attlist common-field-data-style-name-attlist STR)
paragraph-content:
        text:toc-mark-start::text-toc-mark-start-attrs
paragraph-content:
        text:toc-mark-end::text-id
paragraph-content:
        text:toc-mark::(text:string-value::string text-outline-level)
paragraph-content:
        text:user-index-mark-start::(text-id text-outline-level text-index-name)
paragraph-content:
        text:user-index-mark-end::(text-id text-outline-level)
paragraph-content:
        text:user-index-mark::(text:string-value::string text-outline-level text-index-name)
paragraph-content:
        text:alphabetical-index-mark-start::(text-id text-alphabetical-index-mark-attrs)
paragraph-content:
        text:alphabetical-index-mark-end::text-id
paragraph-content:
        text:alphabetical-index-mark::(text:string-value::string text-alphabetical-index-mark-attrs)
paragraph-content:
        text:bibliography-mark::(text:bibliography-type::text-bibliography-types (text:identifier::string | text:address::string | text:annote::string | text:author::string | text:booktitle::string | text:chapter::string | text:edition::string | text:editor::string | text:howpublished::string | text:institution::string | text:journal::string | text:month::string | text:note::string | text:number::string | text:organizations::string | text:pages::string | text:publisher::string | text:school::string | text:series::string | text:title::string | text:report-type::string | text:volume::string | text:year::string | text:url::string | text:custom1::string | text:custom2::string | text:custom3::string | text:custom4::string | text:custom5::string | text:isbn::string | text:issn::string)* STR)
paragraph-content:
        presentation:header::EPSILON
paragraph-content:
        presentation:footer::EPSILON
paragraph-content:
        presentation:date-time::EPSILON
text-tab-attr:
        (text:tab-ref::nonNegativeInteger)?
text-a-attlist:
        (office:name::string)?
text-a-attlist:
        xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?
text-a-attlist:
        (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?
text-a-attlist:
        (text:style-name::styleNameRef)? (text:visited-style-name::styleNameRef)?
text-note-class:
        text:note-class::("footnote" | "endnote")
text-date-attlist:
        common-field-fixed-attlist common-field-data-style-name-attlist
text-date-attlist:
        (text:date-value::dateOrDateTime)?
text-date-attlist:
        (text:date-adjust::duration)?
text-time-attlist:
        common-field-fixed-attlist common-field-data-style-name-attlist
text-time-attlist:
        (text:time-value::timeOrDateTime)?
text-time-attlist:
        (text:time-adjust::duration)?
text-page-number-attlist:
        common-field-num-format-attlist common-field-fixed-attlist
text-page-number-attlist:
        (text:page-adjust::integer)?
text-page-number-attlist:
        (text:select-page::("previous" | "current" | "next"))?
text-page-continuation-attlist:
        text:select-page::("previous" | "next")
text-page-continuation-attlist:
        (text:string-value::string)?
text-chapter-attlist:
        text:display::("name" | "number" | "number-and-name" | "plain-number-and-name" | "plain-number")
text-chapter-attlist:
        text:outline-level::nonNegativeInteger
text-file-name-attlist:
        (text:display::("full" | "path" | "name" | "name-and-extension"))?
text-file-name-attlist:
        common-field-fixed-attlist
text-template-name-attlist:
        (text:display::("full" | "path" | "name" | "name-and-extension" | "area" | "title"))?
text-variable-decl:
        text:variable-decl::(common-field-name-attlist common-value-type-attlist)
text-user-field-decl:
        text:user-field-decl::(common-field-name-attlist common-field-formula-attlist? common-value-and-type-attlist)
text-sequence-decl:
        text:sequence-decl::text-sequence-decl-attlist
text-sequence-decl-attlist:
        common-field-name-attlist
text-sequence-decl-attlist:
        text:display-outline-level::nonNegativeInteger
text-sequence-decl-attlist:
        (text:separation-character::character)?
text-sequence-ref-name:
        (text:ref-name::string)?
common-field-database-table:
        common-field-database-table-attlist common-field-database-name
common-field-database-name:
        (text:database-name::string)?
common-field-database-name:
        form-connection-resource
common-field-database-table-attlist:
        text:table-name::string
common-field-database-table-attlist:
        (text:table-type::("table" | "query" | "command"))?
text-database-display-attlist:
        common-field-database-table
text-database-display-attlist:
        common-field-data-style-name-attlist
text-database-display-attlist:
        text:column-name::string
text-database-next-attlist:
        common-field-database-table
text-database-next-attlist:
        (text:condition::formula)?
text-database-row-select-attlist:
        common-field-database-table
text-database-row-select-attlist:
        (text:condition::formula)?
text-database-row-select-attlist:
        (text:row-number::nonNegativeInteger)?
text-set-page-variable-attlist:
        (text:active::boolean)?
text-set-page-variable-attlist:
        (text:page-adjust::integer)?
text-get-page-variable-attlist:
        common-field-num-format-attlist
text-placeholder-attlist:
        text:placeholder-type::("text" | "table" | "text-box" | "image" | "object")
text-placeholder-attlist:
        common-field-description-attlist
text-conditional-text-attlist:
        text:condition::formula
text-conditional-text-attlist:
        text:string-value-if-true::string
text-conditional-text-attlist:
        text:string-value-if-false::string
text-conditional-text-attlist:
        (text:current-value::boolean)?
text-hidden-text-attlist:
        text:condition::formula
text-hidden-text-attlist:
        text:string-value::string
text-hidden-text-attlist:
        (text:is-hidden::boolean)?
text-common-ref-content:
        STR
text-common-ref-content:
        (text:ref-name::string)?
text-note-ref-content:
        text-note-class
text-ref-content:
        (text:reference-format::("page" | "chapter" | "direction" | "text"))?
text-sequence-ref-content:
        (text:reference-format::("page" | "chapter" | "direction" | "text" | "category-and-value" | "caption" | "value"))?
text-hidden-paragraph-attlist:
        text:condition::formula
text-hidden-paragraph-attlist:
        (text:is-hidden::boolean)?
common-value-type-attlist:
        office:value-type::valueType
common-value-and-type-attlist:
        office:value-type::"float" office:value::double
        office:value-type::"percentage" office:value::double
        office:value-type::"currency" office:value::double (office:currency::string)?
        office:value-type::"date" office:date-value::dateOrDateTime
        office:value-type::"time" office:time-value::duration
        office:value-type::"boolean" office:boolean-value::boolean
        office:value-type::"string" (office:string-value::string)?
common-field-fixed-attlist:
        (text:fixed::boolean)?
common-field-name-attlist:
        text:name::variableName
common-field-description-attlist:
        (text:description::STR)?
common-field-display-value-none-attlist:
        (text:display::("value" | "none"))?
common-field-display-value-formula-none-attlist:
        (text:display::("value" | "formula" | "none"))?
common-field-display-value-formula-attlist:
        (text:display::("value" | "formula"))?
common-field-formula-attlist:
        (text:formula::formula)?
common-field-data-style-name-attlist:
        (style:data-style-name::styleNameRef)?
common-field-num-format-attlist:
        common-num-format-attlist?
text-toc-mark-start-attrs:
        text-id text-outline-level
text-outline-level:
        (text:outline-level::positiveInteger)?
text-id:
        text:id::string
text-index-name:
        text:index-name::string
text-alphabetical-index-mark-attrs:
        (text:key1::string)? (text:key2::string)?
text-alphabetical-index-mark-attrs:
        (text:string-value-phonetic::string)? (text:key1-phonetic::string)? (text:key2-phonetic::string)?
text-alphabetical-index-mark-attrs:
        (text:main-entry::boolean)?
text-bibliography-types:
        "article"
        "book"
        "booklet"
        "conference"
        "custom1"
        "custom2"
        "custom3"
        "custom4"
        "custom5"
        "email"
        "inbook"
        "incollection"
        "inproceedings"
        "journal"
        "manual"
        "mastersthesis"
        "misc"
        "phdthesis"
        "proceedings"
        "techreport"
        "unpublished"
        "www"
text-index-body:
        text:index-body::(index-content-main*)
index-content-main:
        text-content
        text-index-title
text-index-title:
        text:index-title::(sectionAttr index-content-main*)
text-table-of-content:
        text:table-of-content::(sectionAttr text-table-of-content-source text-index-body)
text-table-of-content-source:
        text:table-of-content-source::(text-table-of-content-source-attlist text-index-title-template? text-table-of-content-entry-template* text-index-source-styles*)
text-table-of-content-source-attlist:
        (text:outline-level::positiveInteger)?
text-table-of-content-source-attlist:
        (text:use-outline-level::boolean)?
text-table-of-content-source-attlist:
        (text:use-index-marks::boolean)?
text-table-of-content-source-attlist:
        (text:use-index-source-styles::boolean)?
text-table-of-content-source-attlist:
        (text:index-scope::("document" | "chapter"))?
text-table-of-content-source-attlist:
        (text:relative-tab-stop-position::boolean)?
text-table-of-content-entry-template:
        text:table-of-content-entry-template::(text-table-of-content-entry-template-attlist text-table-of-content-children*)
text-table-of-content-children:
        text-index-entry-chapter
        text-index-entry-page-number
        text-index-entry-text
        text-index-entry-span
        text-index-entry-tab-stop
        text-index-entry-link-start
        text-index-entry-link-end
text-table-of-content-entry-template-attlist:
        text:outline-level::positiveInteger
text-table-of-content-entry-template-attlist:
        text:style-name::styleNameRef
text-illustration-index:
        text:illustration-index::(sectionAttr text-illustration-index-source text-index-body)
text-illustration-index-source:
        text:illustration-index-source::(text-illustration-index-source-attrs text-index-title-template? text-illustration-index-entry-template?)
text-illustration-index-source-attrs:
        text-index-scope-attr
text-illustration-index-source-attrs:
        text-relative-tab-stop-position-attr
text-illustration-index-source-attrs:
        (text:use-caption::boolean)?
text-illustration-index-source-attrs:
        (text:caption-sequence-name::string)?
text-illustration-index-source-attrs:
        (text:caption-sequence-format::("text" | "category-and-value" | "caption"))?
text-index-scope-attr:
        (text:index-scope::("document" | "chapter"))?
text-relative-tab-stop-position-attr:
        (text:relative-tab-stop-position::boolean)?
text-illustration-index-entry-template:
        text:illustration-index-entry-template::text-illustration-index-entry-content
text-illustration-index-entry-content:
        text-illustration-index-entry-template-attrs (text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*
text-illustration-index-entry-template-attrs:
        text:style-name::styleNameRef
text-table-index:
        text:table-index::(sectionAttr text-table-index-source text-index-body)
text-table-index-source:
        text:table-index-source::(text-illustration-index-source-attrs text-index-title-template? text-table-index-entry-template?)
text-table-index-entry-template:
        text:table-index-entry-template::text-illustration-index-entry-content
text-object-index:
        text:object-index::(sectionAttr text-object-index-source text-index-body)
text-object-index-source:
        text:object-index-source::(text-object-index-source-attrs text-index-title-template? text-object-index-entry-template?)
text-object-index-source-attrs:
        text-index-scope-attr
text-object-index-source-attrs:
        text-relative-tab-stop-position-attr
text-object-index-source-attrs:
        (text:use-spreadsheet-objects::boolean)?
text-object-index-source-attrs:
        (text:use-math-objects::boolean)?
text-object-index-source-attrs:
        (text:use-draw-objects::boolean)?
text-object-index-source-attrs:
        (text:use-chart-objects::boolean)?
text-object-index-source-attrs:
        (text:use-other-objects::boolean)?
text-object-index-entry-template:
        text:object-index-entry-template::text-illustration-index-entry-content
text-user-index:
        text:user-index::(sectionAttr text-user-index-source text-index-body)
text-user-index-source:
        text:user-index-source::(text-user-index-source-attr text-index-title-template? text-user-index-entry-template* text-index-source-styles*)
text-user-index-source-attr:
        text-index-scope-attr text-relative-tab-stop-position-attr text:index-name::string
text-user-index-source-attr:
        (text:use-index-marks::boolean)? (text:use-graphics::boolean)? (text:use-tables::boolean)? (text:use-floating-frames::boolean)? (text:use-objects::boolean)?
text-user-index-source-attr:
        (text:copy-outline-levels::boolean)?
text-user-index-entry-template:
        text:user-index-entry-template::(text-user-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*)
text-user-index-entry-template-attrs:
        text:outline-level::positiveInteger
text-user-index-entry-template-attrs:
        text:style-name::styleNameRef
text-alphabetical-index:
        text:alphabetical-index::(sectionAttr text-alphabetical-index-source text-index-body)
text-alphabetical-index-source:
        text:alphabetical-index-source::(text-alphabetical-index-source-attrs text-index-title-template? text-alphabetical-index-entry-template*)
text-alphabetical-index-source-attrs:
        text-index-scope-attr text-relative-tab-stop-position-attr
text-alphabetical-index-source-attrs:
        (text:ignore-case::boolean)?
text-alphabetical-index-source-attrs:
        (text:main-entry-style-name::styleNameRef)?
text-alphabetical-index-source-attrs:
        (text:alphabetical-separators::boolean)?
text-alphabetical-index-source-attrs:
        (text:combine-entries::boolean)? (text:combine-entries-with-dash::boolean)? (text:combine-entries-with-pp::boolean)?
text-alphabetical-index-source-attrs:
        (text:use-keys-as-entries::boolean)?
text-alphabetical-index-source-attrs:
        (text:capitalize-entries::boolean)?
text-alphabetical-index-source-attrs:
        (text:comma-separated::boolean)?
text-alphabetical-index-source-attrs:
        (fo:language::languageCode)?
text-alphabetical-index-source-attrs:
        (fo:country::countryCode)?
text-alphabetical-index-source-attrs:
        (text:sort-algorithm::string)?
text-alphabetical-index-auto-mark-file:
        text:alphabetical-index-auto-mark-file::(xlink:href::anyURI (xlink:type::"simple")?)
text-alphabetical-index-entry-template:
        text:alphabetical-index-entry-template::(text-alphabetical-index-entry-template-attrs (text-index-entry-chapter | text-index-entry-page-number | text-index-entry-text | text-index-entry-span | text-index-entry-tab-stop)*)
text-alphabetical-index-entry-template-attrs:
        text:outline-level::("1" | "2" | "3" | "separator")
text-alphabetical-index-entry-template-attrs:
        text:style-name::styleNameRef
text-bibliography:
        text:bibliography::(sectionAttr text-bibliography-source text-index-body)
text-bibliography-source:
        text:bibliography-source::(text-index-title-template? text-bibliography-entry-template*)
text-bibliography-entry-template:
        text:bibliography-entry-template::(text-bibliography-entry-template-attrs (text-index-entry-span | text-index-entry-tab-stop | text-index-entry-bibliography)*)
text-bibliography-entry-template-attrs:
        text:bibliography-type::text-bibliography-types
text-bibliography-entry-template-attrs:
        text:style-name::styleNameRef
text-index-source-styles:
        text:index-source-styles::(text:outline-level::positiveInteger text-index-source-style*)
text-index-source-style:
        text:index-source-style::text:style-name::styleName
text-index-title-template:
        text:index-title-template::((text:style-name::styleNameRef)? STR)
text-index-entry-chapter:
        text:index-entry-chapter::((text:style-name::styleNameRef)? text-index-entry-chapter-attrs)
text-index-entry-chapter-attrs:
        (text:display::("name" | "number" | "number-and-name"))?
text-index-entry-text:
        text:index-entry-text::((text:style-name::styleNameRef)?)
text-index-entry-page-number:
        text:index-entry-page-number::((text:style-name::styleNameRef)?)
text-index-entry-span:
        text:index-entry-span::((text:style-name::styleNameRef)? STR)
text-index-entry-bibliography:
        text:index-entry-bibliography::text-index-entry-bibliography-attrs
text-index-entry-bibliography-attrs:
        (text:style-name::styleNameRef)?
text-index-entry-bibliography-attrs:
        text:bibliography-data-field::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year")
text-index-entry-tab-stop:
        text:index-entry-tab-stop::((text:style-name::styleNameRef)? text-index-entry-tab-stop-attrs)
text-index-entry-tab-stop-attrs:
        (style:leader-char::character)?
text-index-entry-tab-stop-attrs:
        style:type::"right"
        style:type::"left" style:position::length
text-index-entry-link-start:
        text:index-entry-link-start::((text:style-name::styleNameRef)?)
text-index-entry-link-end:
        text:index-entry-link-end::((text:style-name::styleNameRef)?)
table-table:
        table:table::(table-table-attlist table-table-source? office-dde-source? table-scenario? office-forms? table-shapes? table-columns-and-groups table-rows-and-groups)
table-columns-and-groups:
        (table-table-column-group | table-columns-no-group)+
table-columns-no-group:
        table-columns (table-table-header-columns table-columns?)?
        table-table-header-columns table-columns?
table-columns:
        table-table-columns
        table-table-column+
table-rows-and-groups:
        (table-table-row-group | table-rows-no-group)+
table-rows-no-group:
        table-rows (table-table-header-rows table-rows?)?
        table-table-header-rows table-rows?
table-rows:
        table-table-rows
        table-table-row+
table-table-attlist:
        (table:name::string)?
table-table-attlist:
        (table:style-name::styleNameRef)?
table-table-attlist:
        (table:protected::boolean)? (table:protection-key::STR)?
table-table-attlist:
        (table:print::boolean)?
table-table-attlist:
        (table:print-ranges::cellRangeAddressList)?
table-table-attlist:
        (table:is-sub-table::boolean)?
table-table-row:
        table:table-row::(table-table-row-attlist (table-table-cell | table-covered-table-cell)+)
table-table-row-attlist:
        (table:number-rows-repeated::positiveInteger)?
table-table-row-attlist:
        (table:style-name::styleNameRef)?
table-table-row-attlist:
        (table:default-cell-style-name::styleNameRef)?
table-table-row-attlist:
        (table:visibility::table-visibility-value)?
table-visibility-value:
        "visible"
        "collapse"
        "filter"
table-table-cell:
        table:table-cell::(table-table-cell-attlist table-table-cell-attlist-extra table-table-cell-content)
table-covered-table-cell:
        table:covered-table-cell::(table-table-cell-attlist table-table-cell-content)
table-table-cell-content:
        table-cell-range-source? office-annotation? table-detective? text-content*
table-table-cell-attlist:
        (table:number-columns-repeated::positiveInteger)?
table-table-cell-attlist:
        (table:style-name::styleNameRef)?
table-table-cell-attlist:
        (table:content-validation-name::string)?
table-table-cell-attlist:
        (table:formula::string)?
table-table-cell-attlist:
        common-value-and-type-attlist?
table-table-cell-attlist:
        (table:protect::boolean)?
table-table-cell-attlist-extra:
        (table:number-columns-spanned::positiveInteger)? (table:number-rows-spanned::positiveInteger)?
table-table-cell-attlist-extra:
        (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)?
table-table-column:
        table:table-column::table-table-column-attlist
table-table-column-attlist:
        (table:number-columns-repeated::positiveInteger)?
table-table-column-attlist:
        (table:style-name::styleNameRef)?
table-table-column-attlist:
        (table:visibility::table-visibility-value)?
table-table-column-attlist:
        (table:default-cell-style-name::styleNameRef)?
table-table-header-columns:
        table:table-header-columns::(table-table-column+)
table-table-columns:
        table:table-columns::(table-table-column+)
table-table-column-group:
        table:table-column-group::(table-table-column-group-attlist table-columns-and-groups)
table-table-column-group-attlist:
        (table:display::boolean)?
table-table-header-rows:
        table:table-header-rows::(table-table-row+)
table-table-rows:
        table:table-rows::(table-table-row+)
table-table-row-group:
        table:table-row-group::(table-table-row-group-attlist table-rows-and-groups)
table-table-row-group-attlist:
        (table:display::boolean)?
cellAddress:
        STR
cellRangeAddress:
        STR
cellRangeAddressList:
        STR
table-table-source:
        table:table-source::(table-table-source-attlist table-linked-source-attlist)
table-table-source-attlist:
        (table:mode::("copy-all" | "copy-results-only"))?
table-table-source-attlist:
        (table:table-name::string)?
table-linked-source-attlist:
        (xlink:type::"simple")? (xlink:actuate::"onRequest")? xlink:href::anyURI
table-linked-source-attlist:
        (table:filter-name::string)?
table-linked-source-attlist:
        (table:filter-options::string)?
table-linked-source-attlist:
        (table:refresh-delay::duration)?
table-scenario:
        table:scenario::table-scenario-attlist
table-scenario-attlist:
        table:scenario-ranges::cellRangeAddressList
table-scenario-attlist:
        table:is-active::boolean
table-scenario-attlist:
        (table:display-border::boolean)?
table-scenario-attlist:
        (table:border-color::color)?
table-scenario-attlist:
        (table:copy-back::boolean)?
table-scenario-attlist:
        (table:copy-styles::boolean)?
table-scenario-attlist:
        (table:copy-formulas::boolean)?
table-scenario-attlist:
        (table:comment::string)?
table-scenario-attlist:
        (table:protected::boolean)?
table-shapes:
        table:shapes::(shape+)
table-cell-range-source:
        table:cell-range-source::(table-table-cell-range-source-attlist table-linked-source-attlist)
table-table-cell-range-source-attlist:
        table:name::string
table-table-cell-range-source-attlist:
        table:last-column-spanned::positiveInteger table:last-row-spanned::positiveInteger
table-detective:
        table:detective::(table-highlighted-range* table-operation*)
table-operation:
        table:operation::table-operation-attlist
table-operation-attlist:
        table:name::("trace-dependents" | "remove-dependents" | "trace-precedents" | "remove-precedents" | "trace-errors")
table-operation-attlist:
        table:index::nonNegativeInteger
table-highlighted-range:
        table:highlighted-range::(table-highlighted-range-attlist | table-highlighted-range-attlist-invalid)
table-highlighted-range-attlist:
        (table:cell-range-address::cellRangeAddress)?
table-highlighted-range-attlist:
        table:direction::("from-another-table" | "to-another-table" | "from-same-table")
table-highlighted-range-attlist:
        (table:contains-error::boolean)?
table-highlighted-range-attlist-invalid:
        table:marked-invalid::boolean
office-spreadsheet-attlist:
        (table:structure-protected::boolean)? (table:protection-key::string)?
table-calculation-settings:
        table:calculation-settings::(table-calculation-setting-attlist table-null-date? table-iteration?)
table-calculation-setting-attlist:
        (table:case-sensitive::boolean)?
table-calculation-setting-attlist:
        (table:precision-as-shown::boolean)?
table-calculation-setting-attlist:
        (table:search-criteria-must-apply-to-whole-cell::boolean)?
table-calculation-setting-attlist:
        (table:automatic-find-labels::boolean)?
table-calculation-setting-attlist:
        (table:use-regular-expressions::boolean)?
table-calculation-setting-attlist:
        (table:null-year::positiveInteger)?
table-null-date:
        table:null-date::((table:value-type::valueType)? (table:date-value-type::date)?)
table-iteration:
        table:iteration::((table:status::("enable" | "disable"))? (table:steps::positiveInteger)? (table:maximum-difference::double)?)
table-content-validations:
        table:content-validations::(table-content-validation+)
table-content-validation:
        table:content-validation::(table-validation-attlist table-help-message? (table-error-message | (table-error-macro office-event-listeners?))?)
table-validation-attlist:
        table:name::string
table-validation-attlist:
        (table:condition::string)?
table-validation-attlist:
        (table:base-cell-address::cellAddress)?
table-validation-attlist:
        (table:allow-empty-cell::boolean)?
table-validation-attlist:
        (table:display-list::("none" | "unsorted" | "sort-ascending"))?
table-help-message:
        table:help-message::((table:title::string)? (table:display::boolean)? text-p*)
table-error-message:
        table:error-message::((table:title::string)? (table:display::boolean)? (table:message-type::("stop" | "warning" | "information"))? text-p*)
table-error-macro:
        table:error-macro::((table:execute::boolean)?)
table-label-ranges:
        table:label-ranges::(table-label-range*)
table-label-range:
        table:label-range::table-label-range-attlist
table-label-range-attlist:
        table:label-cell-range-address::cellRangeAddress
table-label-range-attlist:
        table:data-cell-range-address::cellRangeAddress
table-label-range-attlist:
        table:orientation::("column" | "row")
table-named-expressions:
        table:named-expressions::((table-named-range | table-named-expression)*)
table-named-range:
        table:named-range::table-named-range-attlist
table-named-range-attlist:
        table:name::string table:cell-range-address::cellRangeAddress (table:base-cell-address::cellAddress)? (table:range-usable-as::("none" | ("print-range" | "filter" | "repeat-row" | "repeat-column")+))?
table-named-expression:
        table:named-expression::table-named-expression-attlist
table-named-expression-attlist:
        table:name::string table:expression::string (table:base-cell-address::cellAddress)?
table-database-ranges:
        table:database-ranges::(table-database-range*)
table-database-range:
        table:database-range::(table-database-range-attlist (table-database-source-sql | table-database-source-table | table-database-source-query)? table-filter? table-sort? table-subtotal-rules?)
table-database-range-attlist:
        (table:name::string)?
table-database-range-attlist:
        (table:is-selection::boolean)?
table-database-range-attlist:
        (table:on-update-keep-styles::boolean)?
table-database-range-attlist:
        (table:on-update-keep-size::boolean)?
table-database-range-attlist:
        (table:has-persistent-data::boolean)?
table-database-range-attlist:
        (table:orientation::("column" | "row"))?
table-database-range-attlist:
        (table:contains-header::boolean)?
table-database-range-attlist:
        (table:display-filter-buttons::boolean)?
table-database-range-attlist:
        table:target-range-address::cellRangeAddress
table-database-range-attlist:
        (table:refresh-delay::boolean)?
table-database-source-sql:
        table:database-source-sql::table-database-source-sql-attlist
table-database-source-sql-attlist:
        table:database-name::string
table-database-source-sql-attlist:
        table:sql-statement::string
table-database-source-sql-attlist:
        (table:parse-sql-statement::boolean)?
table-database-source-query:
        table:database-source-table::table-database-source-table-attlist
table-database-source-table-attlist:
        table:database-name::string
table-database-source-table-attlist:
        table:database-table-name::string
table-database-source-table:
        table:database-source-query::table-database-source-query-attlist
table-database-source-query-attlist:
        table:database-name::string
table-database-source-query-attlist:
        table:query-name::string
table-sort:
        table:sort::(table-sort-attlist table-sort-by+)
table-sort-attlist:
        (table:bind-styles-to-content::boolean)?
table-sort-attlist:
        (table:target-range-address::cellRangeAddress)?
table-sort-attlist:
        (table:case-sensitive::boolean)?
table-sort-attlist:
        (table:language::languageCode)?
table-sort-attlist:
        (table:country::countryCode)?
table-sort-attlist:
        (table:algorithm::string)?
table-sort-by:
        table:sort-by::table-sort-by-attlist
table-sort-by-attlist:
        table:field-number::nonNegativeInteger
table-sort-by-attlist:
        (table:data-type::("text" | "number" | "automatic" | string))?
table-sort-by-attlist:
        (table:order::("ascending" | "descending"))?
table-subtotal-rules:
        table:subtotal-rules::(table-subtotal-rules-attlist table-sort-groups? table-subtotal-rule*)
table-subtotal-rules-attlist:
        (table:bind-styles-to-content::boolean)?
table-subtotal-rules-attlist:
        (table:case-sensitive::boolean)?
table-subtotal-rules-attlist:
        (table:page-breaks-on-group-change::boolean)?
table-sort-groups:
        table:sort-groups::table-sort-groups-attlist
table-sort-groups-attlist:
        (table:data-type::("text" | "number" | "automatic" | string))?
table-sort-groups-attlist:
        (table:order::("ascending" | "descending"))?
table-subtotal-rule:
        table:subtotal-rule::(table-subtotal-rule-attlist table-subtotal-field*)
table-subtotal-rule-attlist:
        table:group-by-field-number::nonNegativeInteger
table-subtotal-field:
        table:subtotal-field::table-subtotal-field-attlist
table-subtotal-field-attlist:
        table:field-number::nonNegativeInteger
table-subtotal-field-attlist:
        table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string)
table-filter:
        table:filter::(table-filter-attlist (table-filter-condition | table-filter-and | table-filter-or))
table-filter-attlist:
        (table:target-range-address::cellRangeAddress)?
table-filter-attlist:
        (table:condition-source::("self" | "cell-range"))?
table-filter-attlist:
        (table:condition-source-range-address::cellRangeAddress)?
table-filter-attlist:
        (table:display-duplicates::boolean)?
table-filter-and:
        table:filter-and::((table-filter-or | table-filter-condition)+)
table-filter-or:
        table:filter-or::((table-filter-and | table-filter-condition)+)
table-filter-condition:
        table:filter-condition::table-filter-condition-attlist
table-filter-condition-attlist:
        table:field-number::nonNegativeInteger
table-filter-condition-attlist:
        table:value::string
table-filter-condition-attlist:
        table:operator::string
table-filter-condition-attlist:
        (table:case-sensitive::string)?
table-filter-condition-attlist:
        (table:data-type::("text" | "number"))?
table-data-pilot-tables:
        table:data-pilot-tables::(table-data-pilot-table*)
table-data-pilot-table:
        table:data-pilot-table::(table-data-pilot-table-attlist (table-database-source-sql | table-database-source-table | table-database-source-query | table-source-service | table-source-cell-range)? table-data-pilot-field+)
table-data-pilot-table-attlist:
        table:name::string
table-data-pilot-table-attlist:
        (table:application-data::string)?
table-data-pilot-table-attlist:
        (table:grand-total::("none" | "row" | "column" | "both"))?
table-data-pilot-table-attlist:
        (table:ignore-empty-rows::boolean)?
table-data-pilot-table-attlist:
        (table:identify-categories::boolean)?
table-data-pilot-table-attlist:
        table:target-range-address::cellRangeAddress
table-data-pilot-table-attlist:
        (table:buttons::cellRangeAddressList)?
table-data-pilot-table-attlist:
        (table:show-filter-button::boolean)?
table-data-pilot-table-attlist:
        (table:drill-down-on-double-click::boolean)?
table-source-cell-range:
        table:source-cell-range::(table-source-cell-range-attlist table-filter?)
table-source-cell-range-attlist:
        table:cell-range-address::cellRangeAddress
table-source-service:
        table:source-service::table-source-service-attlist
table-source-service-attlist:
        table:name::string
table-source-service-attlist:
        table:source-name::string
table-source-service-attlist:
        table:object-name::string
table-source-service-attlist:
        (table:user-name::string)?
table-source-service-attlist:
        (table:password::string)?
table-data-pilot-field:
        table:data-pilot-field::(table-data-pilot-field-attlist table-data-pilot-level? table-data-pilot-field-reference? table-data-pilot-groups?)
table-data-pilot-field-attlist:
        table:source-field-name::string
table-data-pilot-field-attlist:
        table:orientation::("row" | "column" | "data" | "hidden")
        table:orientation::"page" table:selected-page::string
table-data-pilot-field-attlist:
        (table:is-data-layout-field::string)?
table-data-pilot-field-attlist:
        (table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string))?
table-data-pilot-field-attlist:
        (table:used-hierarchy::integer)?
table-data-pilot-level:
        table:data-pilot-level::(table-data-pilot-level-attlist table-data-pilot-subtotals? table-data-pilot-members? table-data-pilot-display-info? table-data-pilot-sort-info? table-data-pilot-layout-info?)
table-data-pilot-level-attlist:
        (table:show-empty::boolean)?
table-data-pilot-subtotals:
        table:data-pilot-subtotals::(table-data-pilot-subtotal*)
table-data-pilot-subtotal:
        table:data-pilot-subtotal::table-data-pilot-subtotal-attlist
table-data-pilot-subtotal-attlist:
        table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string)
table-data-pilot-members:
        table:data-pilot-members::(table-data-pilot-member*)
table-data-pilot-member:
        table:data-pilot-member::table-data-pilot-member-attlist
table-data-pilot-member-attlist:
        table:name::string
table-data-pilot-member-attlist:
        (table:display::boolean)?
table-data-pilot-member-attlist:
        (table:show-details::boolean)?
table-data-pilot-display-info:
        table:data-pilot-display-info::table-data-pilot-display-info-attlist
table-data-pilot-display-info-attlist:
        table:enabled::boolean
table-data-pilot-display-info-attlist:
        table:data-field::string
table-data-pilot-display-info-attlist:
        table:member-count::nonNegativeInteger
table-data-pilot-display-info-attlist:
        table:display-member-mode::("from-top" | "from-bottom")
table-data-pilot-sort-info:
        table:data-pilot-sort-info::table-data-pilot-sort-info-attlist
table-data-pilot-sort-info-attlist:
        table:sort-mode::"data" table:data-field::string
        table:sort-mode::("none" | "manual" | "name")
table-data-pilot-sort-info-attlist:
        table:order::("ascending" | "descending")
table-data-pilot-layout-info:
        table:data-pilot-layout-info::table-data-pilot-layout-info-attlist
table-data-pilot-layout-info-attlist:
        table:layout-mode::("tabular-layout" | "outline-subtotals-top" | "outline-subtotals-bottom")
table-data-pilot-layout-info-attlist:
        table:add-empty-lines::boolean
table-data-pilot-field-reference:
        table:data-pilot-field-reference::table-data-pilot-field-reference-attlist
table-data-pilot-field-reference-attlist:
        table:field-name::string
table-data-pilot-field-reference-attlist:
        table:member-type::"named" table:member-name::string
        table:member-type::("previous" | "next")
table-data-pilot-field-reference-attlist:
        table:type::("none" | "member-difference" | "member-percentage" | "member-percentage-difference" | "running-total" | "row-percentage" | "column-percentage" | "total-percentage" | "index")
table-data-pilot-groups:
        table:data-pilot-groups::(table-data-pilot-groups-attlist table-data-pilot-group+)
table-data-pilot-groups-attlist:
        table:source-field-name::string
table-data-pilot-groups-attlist:
        table:date-start::(dateOrDateTime | "auto")
        table:start::(double | "auto")
table-data-pilot-groups-attlist:
        table:date-end::(dateOrDateTime | "auto")
        table:end::(double | "auto")
table-data-pilot-groups-attlist:
        table:step::double
table-data-pilot-groups-attlist:
        table:grouped-by::("seconds" | "minutes" | "hours" | "days" | "months" | "quarters" | "years")
table-data-pilot-group:
        table:data-pilot-group::(table-data-pilot-group-attlist table-data-pilot-group-member+)
table-data-pilot-group-attlist:
        table:name::string
table-data-pilot-group-member:
        table:data-pilot-group-member::table-data-pilot-group-member-attlist
table-data-pilot-group-member-attlist:
        table:name::string
table-consolidation:
        table:consolidation::table-consolidation-attlist
table-consolidation-attlist:
        table:function::("auto" | "average" | "count" | "countnums" | "max" | "min" | "product" | "stdev" | "stdevp" | "sum" | "var" | "varp" | string)
table-consolidation-attlist:
        table:source-cell-range-addresses::cellRangeAddressList
table-consolidation-attlist:
        table:target-cell-address::cellAddress
table-consolidation-attlist:
        (table:use-labels::("none" | "row" | "column" | "both"))?
table-consolidation-attlist:
        (table:link-to-source-data::boolean)?
table-dde-links:
        table:dde-links::(table-dde-link+)
table-tracked-changes:
        table:tracked-changes::(table-tracked-changes-attlist (table-cell-content-change | table-insertion | table-deletion | table-movement)*)
table-tracked-changes-attlist:
        (table:track-changes::boolean)?
table-insertion:
        table:insertion::(table-insertion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions?)
table-insertion-attlist:
        table:type::("row" | "column" | "table")
table-insertion-attlist:
        table:position::integer
table-insertion-attlist:
        (table:count::positiveInteger)?
table-insertion-attlist:
        (table:table::integer)?
table-dependencies:
        table:dependencies::(table-dependency+)
table-dependency:
        table:dependency::table:id::string
table-deletions:
        table:deletions::((table-cell-content-deletion | table-change-deletion)+)
table-cell-content-deletion:
        table:cell-content-deletion::((table:id::string)? table-cell-address? table-change-track-table-cell?)
table-change-deletion:
        table:change-deletion::((table:id::string)?)
table-deletion:
        table:deletion::(table-deletion-attlist common-table-change-attlist office-change-info table-dependencies? table-deletions? table-cut-offs?)
table-deletion-attlist:
        table:type::("row" | "column" | "table")
table-deletion-attlist:
        table:position::integer
table-deletion-attlist:
        (table:table::integer)?
table-deletion-attlist:
        (table:multi-deletion-spanned::integer)?
table-cut-offs:
        table:cut-offs::(table-movement-cut-off+ | (table-insertion-cut-off table-movement-cut-off*))
table-insertion-cut-off:
        table:insertion-cut-off::table-insertion-cut-off-attlist
table-insertion-cut-off-attlist:
        table:id::string
table-insertion-cut-off-attlist:
        table:position::integer
table-movement-cut-off:
        table:movement-cut-off::table-movement-cut-off-attlist
table-movement-cut-off-attlist:
        table:position::integer
        table:start-position::integer table:end-position::integer
table-movement:
        table:movement::(common-table-change-attlist table-source-range-address table-target-range-address office-change-info table-dependencies? table-deletions?)
table-source-range-address:
        table:source-range-address::common-table-range-attlist
table-target-range-address:
        table:target-range-address::common-table-range-attlist
common-table-range-attlist:
        common-table-cell-address-attlist
        common-table-cell-range-address-attlist
common-table-cell-address-attlist:
        table:column::integer table:row::integer table:table::integer
common-table-cell-range-address-attlist:
        table:start-column::integer table:start-row::integer table:start-table::integer table:end-column::integer table:end-row::integer table:end-table::integer
table-change-track-table-cell:
        table:change-track-table-cell::(table-change-track-table-cell-attlist text-p*)
table-change-track-table-cell-attlist:
        (table:cell-address::cellAddress)?
table-change-track-table-cell-attlist:
        (table:matrix-covered::boolean)?
table-change-track-table-cell-attlist:
        (table:formula::string)? (table:number-matrix-columns-spanned::positiveInteger)? (table:number-matrix-rows-spanned::positiveInteger)? common-value-and-type-attlist?
table-cell-content-change:
        table:cell-content-change::(common-table-change-attlist table-cell-address office-change-info table-dependencies? table-deletions? table-previous)
table-cell-address:
        table:cell-address::common-table-cell-address-attlist
table-previous:
        table:previous::((table:id::string)? table-change-track-table-cell)
common-table-change-attlist:
        table:id::string
common-table-change-attlist:
        (table:acceptance-state::("accepted" | "rejected" | "pending"))?
common-table-change-attlist:
        (table:rejecting-change-id::string)?
style-handout-master:
        style:handout-master::(common-presentation-header-footer-attlist style-handout-master-attlist shape*)
style-handout-master-attlist:
        (presentation:presentation-page-layout-name::styleNameRef)?
style-handout-master-attlist:
        style:page-layout-name::styleNameRef
style-handout-master-attlist:
        (draw:style-name::styleNameRef)?
draw-layer-set:
        draw:layer-set::(draw-layer*)
draw-layer:
        draw:layer::draw-layer-attlist
draw-layer-attlist:
        draw:name::string
draw-layer-attlist:
        (draw:protected::boolean)?
draw-layer-attlist:
        (draw:display::("always" | "screen" | "printer" | "none"))?
draw-page:
        draw:page::(common-presentation-header-footer-attlist draw-page-attlist office-forms? shape* (presentation-animations | animation-element)? presentation-notes?)
draw-page-attlist:
        (draw:name::string)?
draw-page-attlist:
        (draw:style-name::styleNameRef)?
draw-page-attlist:
        draw:master-page-name::styleNameRef
draw-page-attlist:
        (presentation:presentation-page-layout-name::styleNameRef)?
draw-page-attlist:
        (draw:id::ID)?
common-presentation-header-footer-attlist:
        (presentation:use-header-name::string)?
common-presentation-header-footer-attlist:
        (presentation:use-footer-name::string)?
common-presentation-header-footer-attlist:
        (presentation:use-date-time-name::string)?
shape:
        draw-rect
        draw-line
        draw-polyline
        draw-polygon
        draw-regular-polygon
        draw-path
        draw-circle
        draw-ellipse
        draw-g
        draw-page-thumbnail
        draw-frame
        draw-measure
        draw-caption
        draw-connector
        draw-control
        dr3d-scene
        draw-custom-shape
draw-rect:
        draw:rect::(draw-rect-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-rect-attlist:
        (draw:corner-radius::nonNegativeLength)?
draw-line:
        draw:line::(draw-line-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-line-attlist:
        svg:x1::coordinate svg:y1::coordinate
draw-line-attlist:
        svg:x2::coordinate svg:y2::coordinate
draw-polyline:
        draw:polyline::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
common-draw-points-attlist:
        draw:points::points
draw-polygon:
        draw:polygon::(common-draw-points-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-regular-polygon:
        draw:regular-polygon::(draw-regular-polygon-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-regular-polygon-attlist:
        draw:concave::"false"
        draw:concave::"true" draw-regular-polygon-sharpness-attlist
draw-regular-polygon-attlist:
        draw:corners::positiveInteger
draw-regular-polygon-sharpness-attlist:
        draw:sharpness::percent
draw-path:
        draw:path::(common-draw-path-data-attlist common-draw-position-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
common-draw-path-data-attlist:
        svg:d::pathData
draw-circle:
        draw:circle::(draw-circle-attlist common-draw-circle-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
common-draw-circle-ellipse-attlist:
        (svg:cx::coordinate svg:cy::coordinate)?
common-draw-circle-ellipse-attlist:
        (draw:kind::("full" | "section" | "cut" | "arc"))?
common-draw-circle-ellipse-attlist:
        (draw:start-angle::double)?
common-draw-circle-ellipse-attlist:
        (draw:end-angle::double)?
draw-circle-attlist:
        (svg:r::length)?
draw-ellipse:
        draw:ellipse::(common-draw-circle-ellipse-attlist draw-ellipse-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-ellipse-attlist:
        (svg:rx::length svg:ry::length)?
draw-connector:
        draw:connector::(draw-connector-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-connector-attlist:
        (draw:type::("standard" | "lines" | "line" | "curve"))?
draw-connector-attlist:
        (svg:x1::coordinate svg:y1::coordinate)?
draw-connector-attlist:
        (draw:start-shape::IDREF)?
draw-connector-attlist:
        (draw:start-glue-point::nonNegativeInteger)?
draw-connector-attlist:
        (svg:x2::coordinate svg:y2::coordinate)?
draw-connector-attlist:
        (draw:end-shape::IDREF)?
draw-connector-attlist:
        (draw:end-glue-point::nonNegativeInteger)?
draw-connector-attlist:
        (draw:line-skew::(length (length length?)?))?
draw-caption:
        draw:caption::(draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-caption-attlist:
        (draw:caption-point-x::coordinate draw:caption-point-y::coordinate)?
draw-caption-attlist:
        (draw:corner-radius::nonNegativeLength)?
draw-measure:
        draw:measure::(draw-measure-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text)
draw-measure-attlist:
        svg:x1::coordinate svg:y1::coordinate
draw-measure-attlist:
        svg:x2::coordinate svg:y2::coordinate
draw-control:
        draw:control::(draw-control-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist draw-glue-point*)
draw-control-attlist:
        draw:control::IDREF
draw-page-thumbnail:
        draw:page-thumbnail::(draw-page-thumbnail-attlist common-draw-position-attlist common-draw-size-attlist presentation-shape-attlist common-draw-shape-with-styles-attlist)
draw-page-thumbnail-attlist:
        (draw:page-number::positiveInteger)?
draw-g:
        draw:g::(draw-g-attlist common-draw-z-index-attlist common-draw-name-attlist common-draw-id-attlist common-draw-style-name-attlist common-text-spreadsheet-shape-attlist office-event-listeners? draw-glue-point* shape*)
draw-g-attlist:
        (svg:y::coordinate)?
common-draw-name-attlist:
        (draw:name::string)?
common-draw-position-attlist:
        (svg:x::coordinate)? (svg:y::coordinate)?
common-draw-size-attlist:
        (svg:width::length)? (svg:height::length)?
common-draw-transform-attlist:
        (draw:transform::string)?
common-draw-viewbox-attlist:
        svg:viewBox::(integer integer integer integer)
common-draw-style-name-attlist:
        (draw:style-name::styleNameRef)? (draw:class-names::styleNameRefs)?
        (presentation:style-name::styleNameRef)? (presentation:class-names::styleNameRefs)?
common-draw-text-style-name-attlist:
        (draw:text-style-name::styleNameRef)?
common-draw-layer-name-attlist:
        (draw:layer::STR)?
common-draw-id-attlist:
        (draw:id::ID)?
common-draw-z-index-attlist:
        (draw:z-index::nonNegativeInteger)?
common-text-spreadsheet-shape-attlist:
        (table:end-cell-address::cellAddress)? (table:end-x::coordinate)? (table:end-y::coordinate)?
common-text-spreadsheet-shape-attlist:
        (table:table-background::boolean)?
common-text-spreadsheet-shape-attlist:
        common-text-anchor-attlist
common-text-anchor-attlist:
        (text:anchor-type::("page" | "frame" | "paragraph" | "char" | "as-char"))?
common-text-anchor-attlist:
        (text:anchor-page-number::positiveInteger)?
draw-text:
        (text-p | text-list)*
common-draw-shape-with-styles-attlist:
        common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-draw-transform-attlist common-draw-name-attlist common-text-spreadsheet-shape-attlist
common-draw-shape-with-text-and-styles-attlist:
        common-draw-shape-with-styles-attlist common-draw-text-style-name-attlist
draw-glue-point:
        draw:glue-point::draw-glue-point-attlist
draw-glue-point-attlist:
        draw:id::nonNegativeInteger
draw-glue-point-attlist:
        svg:x::(distance | percent) svg:y::(distance | percent)
draw-glue-point-attlist:
        draw:align::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom-right")
draw-glue-points-attlist:
        draw:escape-direction::("auto" | "left" | "right" | "up" | "down" | "horizontal" | "vertical")
draw-frame:
        draw:frame::(common-draw-shape-with-text-and-styles-attlist common-draw-position-attlist common-draw-rel-size-attlist presentation-shape-attlist draw-frame-attlist (draw-text-box | draw-image | draw-object | draw-object-ole | draw-applet | draw-floating-frame | draw-plugin)* office-event-listeners? draw-glue-point* draw-image-map? svg-desc? (draw-contour-polygon | draw-contour-path)?)
common-draw-rel-size-attlist:
        common-draw-size-attlist (style:rel-width::(percent | "scale" | "scale-min"))? (style:rel-height::(percent | "scale" | "scale-min"))?
draw-frame-attlist:
        (draw:copy-of::string)?
draw-text-box:
        draw:text-box::(draw-text-box-attlist text-content*)
draw-text-box-attlist:
        (draw:chain-next-name::string)?
draw-text-box-attlist:
        (draw:corner-radius::nonNegativeLength)?
draw-text-box-attlist:
        (fo:min-height::(length | percent))? (fo:min-width::(length | percent))?
draw-text-box-attlist:
        (fo:max-height::(length | percent))? (fo:max-width::(length | percent))?
draw-image:
        draw:image::(draw-image-attlist (common-draw-data-attlist | office-binary-data) draw-text)
common-draw-data-attlist:
        xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?
office-binary-data:
        office:binary-data::base64Binary
draw-image-attlist:
        (draw:filter-name::string)?
draw-object:
        draw:object::(draw-object-attlist (common-draw-data-attlist | office-document | math-math))
draw-object-ole:
        draw:object-ole::(draw-object-ole-attlist (common-draw-data-attlist | office-binary-data))
draw-object-attlist:
        (draw:notify-on-update-of-ranges::string)?
draw-object-ole-attlist:
        (draw:class-id::STR)?
draw-applet:
        draw:applet::(draw-applet-attlist common-draw-data-attlist? draw-param*)
draw-applet-attlist:
        (draw:code::STR)?
draw-applet-attlist:
        (draw:object::STR)?
draw-applet-attlist:
        (draw:archive::STR)?
draw-applet-attlist:
        (draw:may-script::boolean)?
draw-plugin:
        draw:plugin::(draw-plugin-attlist common-draw-data-attlist draw-param*)
draw-plugin-attlist:
        (draw:mime-type::STR)?
draw-param:
        draw:param::draw-param-attlist
draw-param-attlist:
        (draw:name::STR)?
draw-param-attlist:
        (draw:value::STR)?
draw-floating-frame:
        draw:floating-frame::(draw-floating-frame-attlist common-draw-data-attlist)
draw-floating-frame-attlist:
        (draw:frame-name::string)?
draw-contour-polygon:
        draw:contour-polygon::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-points-attlist)
draw-contour-path:
        draw:contour-path::(common-contour-attlist common-draw-size-attlist common-draw-viewbox-attlist common-draw-path-data-attlist)
common-contour-attlist:
        draw:recreate-on-edit::boolean
svg-desc:
        svg:desc::STR
draw-a:
        draw:a::(draw-a-attlist draw-frame)
draw-a-attlist:
        xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?
draw-a-attlist:
        (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?
draw-a-attlist:
        (office:name::string)?
draw-a-attlist:
        (office:server-map::boolean)?
draw-image-map:
        draw:image-map::((draw-area-rectangle | draw-area-circle | draw-area-polygon)*)
draw-area-rectangle:
        draw:area-rectangle::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length svg-desc? office-event-listeners?)
draw-area-circle:
        draw:area-circle::(common-draw-area-attlist svg:cx::coordinate svg:cy::coordinate svg:r::length svg-desc? office-event-listeners?)
draw-area-polygon:
        draw:area-polygon::(common-draw-area-attlist svg:x::coordinate svg:y::coordinate svg:width::length svg:height::length common-draw-viewbox-attlist common-draw-points-attlist svg-desc? office-event-listeners?)
common-draw-area-attlist:
        (xlink:href::anyURI)? (xlink:type::"simple")? (office:target-frame-name::targetFrameName)? (xlink:show::("new" | "replace"))?
common-draw-area-attlist:
        (office:name::string)?
common-draw-area-attlist:
        (draw:nohref::"nohref")?
dr3d-scene:
        dr3d:scene::(dr3d-scene-attlist common-draw-position-attlist common-draw-size-attlist common-draw-style-name-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-text-spreadsheet-shape-attlist common-dr3d-transform-attlist dr3d-light* shapes3d*)
shapes3d:
        dr3d-scene
        dr3d-extrude
        dr3d-sphere
        dr3d-rotate
        dr3d-cube
dr3d-scene-attlist:
        (dr3d:vrp::vector3D)? (dr3d:vpn::vector3D)? (dr3d:vup::vector3D)?
dr3d-scene-attlist:
        (dr3d:projection::("parallel" | "perspective"))?
dr3d-scene-attlist:
        (dr3d:distance::length)?
dr3d-scene-attlist:
        (dr3d:focal-length::length)?
dr3d-scene-attlist:
        (dr3d:shadow-slant::nonNegativeInteger)?
dr3d-scene-attlist:
        (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))?
dr3d-scene-attlist:
        (dr3d:ambient-color::color)?
dr3d-scene-attlist:
        (dr3d:lighting-mode::boolean)?
common-dr3d-transform-attlist:
        (dr3d:transform::STR)?
dr3d-light:
        dr3d:light::dr3d-light-attlist
dr3d-light-attlist:
        (dr3d:diffuse-color::color)?
dr3d-light-attlist:
        dr3d:direction::vector3D
dr3d-light-attlist:
        (dr3d:enabled::boolean)?
dr3d-light-attlist:
        (dr3d:specular::boolean)?
dr3d-cube:
        dr3d:cube::(dr3d-cube-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist)
dr3d-cube-attlist:
        (dr3d:min-edge::vector3D)? (dr3d:max-edge::vector3D)?
dr3d-sphere:
        dr3d:sphere::(dr3d-sphere-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist)
dr3d-sphere-attlist:
        (dr3d:center::vector3D)?
dr3d-sphere-attlist:
        (dr3d:size::vector3D)?
dr3d-extrude:
        dr3d:extrude::(common-draw-path-data-attlist common-draw-viewbox-attlist common-draw-id-attlist common-draw-z-index-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist)
dr3d-rotate:
        dr3d:rotate::(common-draw-viewbox-attlist common-draw-path-data-attlist common-draw-z-index-attlist common-draw-id-attlist common-draw-layer-name-attlist common-draw-style-name-attlist common-dr3d-transform-attlist)
draw-custom-shape:
        draw:custom-shape::(draw-custom-shape-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist office-event-listeners? draw-glue-point* draw-text draw-enhanced-geometry?)
draw-custom-shape-attlist:
        (draw:engine::namespacedToken)?
draw-custom-shape-attlist:
        (draw:data::string)?
draw-enhanced-geometry:
        draw:enhanced-geometry::(draw-enhanced-geometry-attlist draw-equation* draw-handle*)
draw-enhanced-geometry-attlist:
        (draw:type::custom-shape-type)?
draw-enhanced-geometry-attlist:
        (svg:viewBox::(integer integer integer integer))?
draw-enhanced-geometry-attlist:
        (draw:mirror-vertical::boolean)? (draw:mirror-horizontal::boolean)?
draw-enhanced-geometry-attlist:
        (draw:text-rotate-angle::double)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-allowed::boolean)?
draw-enhanced-geometry-attlist:
        (draw:text-path-allowed::boolean)?
draw-enhanced-geometry-attlist:
        (draw:concentric-gradient-fill-allowed::boolean)?
draw-enhanced-geometry-attlist:
        (draw:extrusion::boolean)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-brightness::percent)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-depth::(length double))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-diffusion::percent)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-number-of-line-segments::integer)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-light-face::boolean)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-first-light-harsh::boolean)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-second-light-harsh::boolean)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-first-light-level::percent)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-second-light-level::percent)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-first-light-direction::vector3D)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-second-light-direction::vector3D)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-metal::boolean)?
draw-enhanced-geometry-attlist:
        (dr3d:shade-mode::("flat" | "phong" | "gouraud" | "draft"))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-rotation-angle::(double double))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-rotation-center::vector3D)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-shininess::percent)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-skew::(double double))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-specularity::percent)?
draw-enhanced-geometry-attlist:
        (dr3d:projection::("parallel" | "perspective"))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-viewpoint::point3D)?
draw-enhanced-geometry-attlist:
        (draw:extrusion-origin::(double double))?
draw-enhanced-geometry-attlist:
        (draw:extrusion-color::boolean)?
draw-enhanced-geometry-attlist:
        (draw:enhanced-path::string)?
draw-enhanced-geometry-attlist:
        (draw:path-stretchpoint-x::double)? (draw:path-stretchpoint-y::double)?
draw-enhanced-geometry-attlist:
        (draw:text-areas::string)?
draw-enhanced-geometry-attlist:
        (draw:glue-points::string)?
draw-enhanced-geometry-attlist:
        (draw:glue-point-type::("none" | "segments" | "rectangle"))?
draw-enhanced-geometry-attlist:
        (draw:glue-point-leaving-directions::STR)?
draw-enhanced-geometry-attlist:
        (draw:text-path::boolean)?
draw-enhanced-geometry-attlist:
        (draw:text-path-mode::("normal" | "path" | "shape"))?
draw-enhanced-geometry-attlist:
        (draw:text-path-scale::("path" | "shape"))?
draw-enhanced-geometry-attlist:
        (draw:text-path-same-letter-heights::boolean)?
draw-enhanced-geometry-attlist:
        (draw:modifiers::string)?
custom-shape-type:
        "non-primitive"
        string
point3D:
        STR
draw-equation:
        draw:equation::draw-equation-attlist
draw-equation-attlist:
        (draw:name::string)?
draw-equation-attlist:
        (draw:formula::string)?
draw-handle:
        draw:handle::draw-handle-attlist
draw-handle-attlist:
        (draw:handle-mirror-vertical::boolean)?
draw-handle-attlist:
        (draw:handle-mirror-horizontal::boolean)?
draw-handle-attlist:
        (draw:handle-switched::boolean)?
draw-handle-attlist:
        draw:handle-position::string
draw-handle-attlist:
        (draw:handle-range-x-minimum::string)?
draw-handle-attlist:
        (draw:handle-range-x-maximum::string)?
draw-handle-attlist:
        (draw:handle-range-y-minimum::string)?
draw-handle-attlist:
        (draw:handle-range-y-maximum::string)?
draw-handle-attlist:
        (draw:handle-polar::string)?
draw-handle-attlist:
        (draw:handle-radius-range-minimum::string)?
draw-handle-attlist:
        (draw:handle-radius-range-maximum::string)?
presentation-shape-attlist:
        (presentation:class::presentation-classes)?
presentation-shape-attlist:
        (presentation:placeholder::boolean)?
presentation-shape-attlist:
        (presentation:user-transformed::boolean)?
presentation-classes:
        "title"
        "outline"
        "subtitle"
        "text"
        "graphic"
        "object"
        "chart"
        "table"
        "orgchart"
        "page"
        "notes"
        "handout"
        "header"
        "footer"
        "date-time"
        "page-number"
presentation-animations:
        presentation:animations::((presentation-animation-elements | presentation-animation-group)*)
presentation-animation-elements:
        presentation-show-shape
        presentation-show-text
        presentation-hide-shape
        presentation-hide-text
        presentation-dim
        presentation-play
presentation-sound:
        presentation:sound::(presentation-sound-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")? (xlink:show::("new" | "replace"))?)
presentation-sound-attlist:
        (presentation:play-full::boolean)?
presentation-show-shape:
        presentation:show-shape::(common-presentation-effect-attlist presentation-sound?)
common-presentation-effect-attlist:
        draw:shape-id::IDREF
common-presentation-effect-attlist:
        (presentation:effect::presentationEffects)?
common-presentation-effect-attlist:
        (presentation:direction::presentationEffectDirections)?
common-presentation-effect-attlist:
        (presentation:speed::presentationSpeeds)?
common-presentation-effect-attlist:
        (presentation:delay::duration)?
common-presentation-effect-attlist:
        (presentation:start-scale::percent)?
common-presentation-effect-attlist:
        (presentation:path-id::STR)?
presentationEffects:
        "none"
        "fade"
        "move"
        "stripes"
        "open"
        "close"
        "dissolve"
        "wavyline"
        "random"
        "lines"
        "laser"
        "appear"
        "hide"
        "move-short"
        "checkerboard"
        "rotate"
        "stretch"
presentationEffectDirections:
        "none"
        "from-left"
        "from-top"
        "from-right"
        "from-bottom"
        "from-center"
        "from-upper-left"
        "from-upper-right"
        "from-lower-left"
        "from-lower-right"
        "to-left"
        "to-top"
        "to-right"
        "to-bottom"
        "to-upper-left"
        "to-upper-right"
        "to-lower-right"
        "to-lower-left"
        "path"
        "spiral-inward-left"
        "spiral-inward-right"
        "spiral-outward-left"
        "spiral-outward-right"
        "vertical"
        "horizontal"
        "to-center"
        "clockwise"
        "counter-clockwise"
presentationSpeeds:
        "slow"
        "medium"
        "fast"
presentation-show-text:
        presentation:show-text::(common-presentation-effect-attlist presentation-sound?)
presentation-hide-shape:
        presentation:hide-shape::(common-presentation-effect-attlist presentation-sound?)
presentation-hide-text:
        presentation:hide-text::(common-presentation-effect-attlist presentation-sound?)
presentation-dim:
        presentation:dim::(presentation-dim-attlist presentation-sound?)
presentation-dim-attlist:
        draw:shape-id::IDREF
presentation-dim-attlist:
        draw:color::color
presentation-play:
        presentation:play::presentation-play-attlist
presentation-play-attlist:
        draw:shape-id::IDREF (presentation:speed::presentationSpeeds)?
presentation-animation-group:
        presentation:animation-group::(presentation-animation-elements*)
common-anim-attlist:
        (presentation:node-type::("default" | "on-click" | "with-previous" | "after-previous" | "timing-root" | "main-sequence" | "interactive-sequence"))?
common-anim-attlist:
        (presentation:preset-id::string)?
common-anim-attlist:
        (presentation:preset-sub-type::string)?
common-anim-attlist:
        (presentation:preset-class::("custom" | "entrance" | "exit" | "emphasis" | "motion-path" | "ole-action" | "media-call"))?
common-anim-attlist:
        (presentation:master-element::IDREF)?
common-anim-attlist:
        (presentation:group-id::string)?
common-anim-attlist:
        (anim:id::ID)?
presentation-event-listener:
        presentation:event-listener::(presentation-event-listener-attlist presentation-sound?)
presentation-event-listener-attlist:
        script:event-name::string
presentation-event-listener-attlist:
        presentation:action::("none" | "previous-page" | "next-page" | "first-page" | "last-page" | "hide" | "stop" | "execute" | "show" | "verb" | "fade-out" | "sound")
presentation-event-listener-attlist:
        (presentation:effect::presentationEffects)?
presentation-event-listener-attlist:
        (presentation:direction::presentationEffectDirections)?
presentation-event-listener-attlist:
        (presentation:speed::presentationSpeeds)?
presentation-event-listener-attlist:
        (presentation:start-scale::percent)?
presentation-event-listener-attlist:
        (xlink:href::anyURI)? (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onRequest")?
presentation-event-listener-attlist:
        (presentation:verb::nonNegativeInteger)?
presentation-decls:
        presentation-decl*
presentation-decl:
        presentation:header-decl::(presentation-header-decl-attlist STR)
presentation-decl:
        presentation:footer-decl::(presentation-footer-decl-attlist STR)
presentation-decl:
        presentation:date-time-decl::(presentation-date-time-decl-attlist STR)
presentation-header-decl-attlist:
        presentation:name::string
presentation-footer-decl-attlist:
        presentation:name::string
presentation-date-time-decl-attlist:
        presentation:name::string
presentation-date-time-decl-attlist:
        presentation:source::("fixed" | "current-date")
presentation-date-time-decl-attlist:
        (style:data-style-name::styleNameRef)?
presentation-settings:
        (presentation:settings::(presentation-settings-attlist presentation-show*))?
presentation-settings-attlist:
        (presentation:start-page::string)?
presentation-settings-attlist:
        (presentation:show::string)?
presentation-settings-attlist:
        (presentation:full-screen::boolean)?
presentation-settings-attlist:
        (presentation:endless::boolean)?
presentation-settings-attlist:
        (presentation:pause::duration)?
presentation-settings-attlist:
        (presentation:show-logo::boolean)?
presentation-settings-attlist:
        (presentation:force-manual::boolean)?
presentation-settings-attlist:
        (presentation:mouse-visible::boolean)?
presentation-settings-attlist:
        (presentation:mouse-as-pen::boolean)?
presentation-settings-attlist:
        (presentation:start-with-navigator::boolean)?
presentation-settings-attlist:
        (presentation:animations::("enabled" | "disabled"))?
presentation-settings-attlist:
        (presentation:transition-on-click::("enabled" | "disabled"))?
presentation-settings-attlist:
        (presentation:stay-on-top::boolean)?
presentation-show:
        presentation:show::presentation-show-attlist
presentation-show-attlist:
        presentation:name::string
presentation-show-attlist:
        presentation:pages::STR
chart-chart:
        chart:chart::(chart-chart-attlist chart-title? chart-subtitle? chart-footer? chart-legend? chart-plot-area table-table?)
chart-chart-attlist:
        chart:class::namespacedToken
chart-chart-attlist:
        common-draw-size-attlist
chart-chart-attlist:
        (chart:column-mapping::string)?
chart-chart-attlist:
        (chart:row-mapping::string)?
chart-chart-attlist:
        (chart:style-name::styleNameRef)?
chart-title:
        chart:title::(chart-title-attlist text-p?)
chart-title-attlist:
        (table:cell-range::cellAddress)?
chart-title-attlist:
        common-draw-position-attlist
chart-title-attlist:
        (chart:style-name::styleNameRef)?
chart-subtitle:
        chart:subtitle::(chart-title-attlist text-p?)
chart-footer:
        chart:footer::(chart-title-attlist text-p?)
chart-legend:
        chart:legend::chart-legend-attlist
chart-legend-attlist:
        chart:legend-position::("start" | "end" | "top" | "bottom") (chart:legend-align::("start" | "center" | "end"))?
        chart:legend-position::("top-start" | "bottom-start" | "top-end" | "bottom-end")
        EPSILON
chart-legend-attlist:
        common-draw-position-attlist
chart-legend-attlist:
        style:legend-expansion::("wide" | "high" | "balanced")
        style:legend-expansion::"custom" style:legend-expansion-aspect-ratio::double
        EPSILON
chart-legend-attlist:
        (chart:style-name::styleNameRef)?
chart-plot-area:
        chart:plot-area::(chart-plot-area-attlist dr3d-light* chart-axis* chart-series* chart-stock-gain-marker? chart-stock-loss-marker? chart-stock-range-line? chart-wall? chart-floor?)
chart-plot-area-attlist:
        common-draw-position-attlist common-draw-size-attlist
chart-plot-area-attlist:
        (chart:style-name::styleNameRef)?
chart-plot-area-attlist:
        (table:cell-range-address::cellRangeAddress)?
chart-plot-area-attlist:
        (chart:data-source-has-labels::("none" | "row" | "column" | "both"))?
chart-plot-area-attlist:
        dr3d-scene-attlist common-dr3d-transform-attlist
chart-wall:
        chart:wall::chart-wall-attlist
chart-wall-attlist:
        (svg:width::length)?
chart-wall-attlist:
        (chart:style-name::styleNameRef)?
chart-floor:
        chart:floor::chart-floor-attlist
chart-floor-attlist:
        (svg:width::length)?
chart-floor-attlist:
        (chart:style-name::styleNameRef)?
chart-axis:
        chart:axis::(chart-axis-attlist chart-title? chart-categories? chart-grid*)
chart-axis-attlist:
        chart:dimension::("x" | "y" | "z")
chart-axis-attlist:
        (chart:name::string)?
chart-axis-attlist:
        (chart:style-name::styleNameRef)?
chart-grid:
        chart:grid::chart-grid-attlist
chart-grid-attlist:
        (chart:class::("major" | "minor"))?
chart-grid-attlist:
        (chart:style-name::styleNameRef)?
chart-series:
        chart:series::(chart-series-attlist chart-domain* chart-mean-value? chart-regression-curve? chart-error-indicator? chart-data-point*)
chart-series-attlist:
        (chart:values-cell-range-address::cellRangeAddress)?
chart-series-attlist:
        (chart:label-cell-address::cellAddress)?
chart-series-attlist:
        (chart:class::namespacedToken)?
chart-series-attlist:
        (chart:attached-axis::string)?
chart-series-attlist:
        (chart:style-name::styleNameRef)?
chart-domain:
        chart:domain::((table:cell-range-address::cellRangeAddress)?)
chart-categories:
        chart:categories::((table:cell-range-address::cellRangeAddress)?)
chart-data-point:
        chart:data-point::chart-data-point-attlist
chart-data-point-attlist:
        (chart:repeated::nonNegativeInteger)?
chart-data-point-attlist:
        (chart:style-name::styleNameRef)?
chart-mean-value:
        chart:mean-value::chart-mean-value-attlist
chart-mean-value-attlist:
        (chart:style-name::styleNameRef)?
chart-error-indicator:
        chart:error-indicator::chart-error-indicator-attlist
chart-error-indicator-attlist:
        (chart:style-name::styleNameRef)?
chart-regression-curve:
        chart:regression-curve::chart-regression-curve-attlist
chart-regression-curve-attlist:
        (chart:style-name::styleNameRef)?
chart-stock-gain-marker:
        chart:stock-gain-marker::common-stock-marker-attlist
chart-stock-loss-marker:
        chart:stock-loss-marker::common-stock-marker-attlist
chart-stock-range-line:
        chart:stock-range-line::common-stock-marker-attlist
common-stock-marker-attlist:
        (chart:style-name::styleNameRef)?
office-forms:
        (office:forms::(office-forms-attlist (form-form | xforms-model)*))?
office-forms-attlist:
        (form:automatic-focus::boolean)?
office-forms-attlist:
        (form:apply-design-mode::boolean)?
form-form:
        form:form::(common-form-control-attlist form-form-attlist form-properties? office-event-listeners? (controls | form-form)* form-connection-resource?)
form-form-attlist:
        (xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?)?
form-form-attlist:
        (office:target-frame::targetFrameName)?
form-form-attlist:
        (form:method::("get" | "post" | string))?
form-form-attlist:
        (form:enctype::string)?
form-form-attlist:
        (form:allow-deletes::boolean)?
form-form-attlist:
        (form:allow-inserts::boolean)?
form-form-attlist:
        (form:allow-updates::boolean)?
form-form-attlist:
        (form:apply-filter::boolean)?
form-form-attlist:
        (form:command-type::("table" | "query" | "command"))?
form-form-attlist:
        (form:command::STR)?
form-form-attlist:
        (form:datasource::(anyURI | string))?
form-form-attlist:
        (form:master-fields::string)?
form-form-attlist:
        (form:detail-fields::string)?
form-form-attlist:
        (form:escape-processing::boolean)?
form-form-attlist:
        (form:filter::string)?
form-form-attlist:
        (form:ignore-result::boolean)?
form-form-attlist:
        (form:navigation-mode::navigation)?
form-form-attlist:
        (form:order::string)?
form-form-attlist:
        (form:tab-cycle::tab-cycles)?
navigation:
        "none"
        "current"
        "parent"
tab-cycles:
        "records"
        "current"
        "page"
form-connection-resource:
        form:connection-resource::xlink:href::anyURI
xforms-model:
        xforms:model::anyAttListOrElements
column-controls:
        form:text::(form-text-attlist common-form-control-content)
column-controls:
        form:textarea::(form-textarea-attlist common-form-control-content text-p*)
column-controls:
        form:formatted-text::(form-formatted-text-attlist common-form-control-content)
column-controls:
        form:number::(form-number-attlist common-numeric-control-attlist common-form-control-content)
column-controls:
        form:date::(form-date-attlist common-numeric-control-attlist common-form-control-content)
column-controls:
        form:combobox::(form-combobox-attlist common-form-control-content form-item*)
column-controls:
        form:listbox::(form-listbox-attlist common-form-control-content form-option*)
column-controls:
        form:checkbox::(form-checkbox-attlist common-form-control-content)
controls:
        column-controls
controls:
        form:password::(form-password-attlist common-form-control-content)
controls:
        form:file::(form-file-attlist common-form-control-content)
controls:
        form:time::(form-time-attlist common-numeric-control-attlist common-form-control-content)
controls:
        form:fixed-text::(form-fixed-text-attlist common-form-control-content)
controls:
        form:button::(form-button-attlist common-form-control-content)
controls:
        form:image::(form-image-attlist common-form-control-content)
controls:
        form:radio::(form-radio-attlist common-form-control-content)
controls:
        form:frame::(form-frame-attlist common-form-control-content)
controls:
        form:image-frame::(form-image-frame-attlist common-form-control-content)
controls:
        form:hidden::(form-hidden-attlist common-form-control-content)
controls:
        form:grid::(form-grid-attlist common-form-control-content form-column*)
controls:
        form:value-range::(form-value-range-attlist common-form-control-content)
controls:
        form:generic-control::(form-generic-control-attlist common-form-control-content)
form-text-attlist:
        form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist
form-control-attlist:
        common-form-control-attlist common-control-id-attlist xforms-bind-attlist
common-form-control-content:
        form-properties? office-event-listeners?
form-textarea-attlist:
        form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist
form-password-attlist:
        form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist
form-password-attlist:
        (form:echo-char::character)?
form-file-attlist:
        form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist
form-formatted-text-attlist:
        form-control-attlist common-current-value-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist
form-formatted-text-attlist:
        (form:max-value::string)?
form-formatted-text-attlist:
        (form:min-value::string)?
form-formatted-text-attlist:
        (form:validation::boolean)?
common-numeric-control-attlist:
        form-control-attlist common-disabled-attlist common-maxlength-attlist common-printable-attlist common-readonly-attlist common-tab-attlist common-title-attlist common-convert-empty-attlist common-data-field-attlist
form-number-attlist:
        (form:value::double)?
form-number-attlist:
        (form:current-value::double)?
form-number-attlist:
        (form:min-value::double)?
form-number-attlist:
        (form:max-value::double)?
form-date-attlist:
        (form:value::date)?
form-date-attlist:
        (form:current-value::date)?
form-date-attlist:
        (form:min-value::date)?
form-date-attlist:
        (form:max-value::date)?
form-time-attlist:
        (form:value::time)?
form-time-attlist:
        (form:current-value::time)?
form-time-attlist:
        (form:min-value::time)?
form-time-attlist:
        (form:max-value::time)?
form-fixed-text-attlist:
        form-control-attlist for common-disabled-attlist label common-printable-attlist common-title-attlist
form-fixed-text-attlist:
        (form:multi-line::boolean)?
form-combobox-attlist:
        form-control-attlist common-current-value-attlist common-disabled-attlist dropdown common-maxlength-attlist common-printable-attlist common-readonly-attlist size common-tab-attlist common-title-attlist common-value-attlist common-convert-empty-attlist common-data-field-attlist list-source list-source-type
form-combobox-attlist:
        (form:auto-complete::boolean)?
form-item:
        form:item::(form-item-attlist STR)
form-item-attlist:
        label
form-listbox-attlist:
        form-control-attlist common-disabled-attlist dropdown common-printable-attlist size common-tab-attlist common-title-attlist bound-column common-data-field-attlist list-source list-source-type
form-listbox-attlist:
        (form:multiple::boolean)?
form-listbox-attlist:
        (form:xforms-list-source::string)?
form-option:
        form:option::(form-option-attlist STR)
form-option-attlist:
        current-selected selected label common-value-attlist
form-button-attlist:
        form-control-attlist button-type common-disabled-attlist label image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist common-form-relative-image-position-attlist
form-button-attlist:
        (form:default-button::boolean)?
form-button-attlist:
        (form:toggle::boolean)?
form-button-attlist:
        (form:focus-on-click::boolean)?
form-button-attlist:
        (form:xforms-submission::string)?
form-image-attlist:
        form-control-attlist button-type common-disabled-attlist image-data common-printable-attlist common-tab-attlist target-frame target-location common-title-attlist common-value-attlist
form-checkbox-attlist:
        form-control-attlist common-disabled-attlist label common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist
form-checkbox-attlist:
        (form:current-state::states)?
form-checkbox-attlist:
        (form:is-tristate::boolean)?
form-checkbox-attlist:
        (form:state::states)?
states:
        "unchecked"
        "checked"
        "unknown"
form-radio-attlist:
        form-control-attlist current-selected common-disabled-attlist label common-printable-attlist selected common-tab-attlist common-title-attlist common-value-attlist common-data-field-attlist common-form-visual-effect-attlist common-form-relative-image-position-attlist
form-frame-attlist:
        form-control-attlist common-disabled-attlist for label common-printable-attlist common-title-attlist
form-image-frame-attlist:
        form-control-attlist common-disabled-attlist image-data common-printable-attlist common-readonly-attlist common-title-attlist common-data-field-attlist
form-hidden-attlist:
        form-control-attlist common-value-attlist
form-grid-attlist:
        form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist
form-column:
        form:column::(form-column-attlist column-controls+)
form-column-attlist:
        common-form-control-attlist label text-style-name
text-style-name:
        (form:text-style-name::styleNameRef)?
form-value-range-attlist:
        form-control-attlist common-disabled-attlist common-printable-attlist common-tab-attlist common-title-attlist common-value-attlist
form-value-range-attlist:
        (form:max-value::string)?
form-value-range-attlist:
        (form:min-value::string)?
form-value-range-attlist:
        (form:step-size::positiveInteger)?
form-value-range-attlist:
        (form:page-step-size::positiveInteger)?
form-value-range-attlist:
        (form:delay-for-repeat::duration)?
form-value-range-attlist:
        (form:orientation::("horizontal" | "vertical"))?
form-generic-control-attlist:
        form-control-attlist
common-form-control-attlist:
        (form:name::string)?
common-form-control-attlist:
        (form:control-implementation::namespacedToken)?
xforms-bind-attlist:
        (xforms:bind::string)?
types:
        "submit"
        "reset"
        "push"
        "url"
button-type:
        (form:button-type::types)?
common-control-id-attlist:
        form:id::ID
current-selected:
        (form:current-selected::boolean)?
common-value-attlist:
        (form:value::string)?
common-current-value-attlist:
        (form:current-value::string)?
common-disabled-attlist:
        (form:disabled::boolean)?
dropdown:
        (form:dropdown::boolean)?
for:
        (form:for::string)?
image-data:
        (form:image-data::anyURI)?
label:
        (form:label::string)?
common-maxlength-attlist:
        (form:max-length::nonNegativeInteger)?
common-printable-attlist:
        (form:printable::boolean)?
common-readonly-attlist:
        (form:readonly::boolean)?
selected:
        (form:selected::boolean)?
size:
        (form:size::nonNegativeInteger)?
common-tab-attlist:
        (form:tab-index::nonNegativeInteger)?
common-tab-attlist:
        (form:tab-stop::boolean)?
target-frame:
        (office:target-frame::targetFrameName)?
target-location:
        (xlink:href::anyURI)?
common-title-attlist:
        (form:title::STR)?
common-form-visual-effect-attlist:
        (form:visual-effect::("flat" | "3d"))?
common-form-relative-image-position-attlist:
        (form:image-position::"center")?
        form:image-position::("start" | "end" | "top" | "bottom") (form:image-align::("start" | "center" | "end"))?
bound-column:
        (form:bound-column::string)?
common-convert-empty-attlist:
        (form:convert-empty-to-null::boolean)?
common-data-field-attlist:
        (form:data-field::string)?
list-source:
        (form:list-source::string)?
list-source-type:
        (form:list-source-type::("table" | "query" | "sql" | "sql-pass-through" | "value-list" | "table-fields"))?
form-properties:
        form:properties::(form-property+)
form-property:
        form:property::(form-property-name form-property-value-and-type-attlist)
form-property:
        form:list-property::(form-property-name form-property-type-and-value-list)
form-property-name:
        form:property-name::string
form-property-value-and-type-attlist:
        common-value-and-type-attlist
        office:value-type::"void"
form-property-type-and-value-list:
        office:value-type::"float" form:list-value::office:value::double*
        office:value-type::"percentage" form:list-value::office:value::double*
        office:value-type::"currency" form:list-value::(office:value::double (office:currency::string)?)*
        office:value-type::"date" form:list-value::office:date-value::dateOrDateTime*
        office:value-type::"time" form:list-value::office:time-value::duration*
        office:value-type::"boolean" form:list-value::office:boolean-value::boolean*
        office:value-type::"string" form:list-value::office:string-value::string*
        office:value-type::"void"
office-annotation:
        office:annotation::(office-annotation-attlist draw-caption-attlist common-draw-position-attlist common-draw-size-attlist common-draw-shape-with-text-and-styles-attlist dc-creator? dc-date? meta-date-string? (text-p | text-list)*)
office-annotation-attlist:
        (office:display::boolean)?
meta-date-string:
        meta:date-string::string
common-num-format-prefix-suffix-attlist:
        (style:num-prefix::string)? (style:num-suffix::string)?
common-num-format-attlist:
        style:num-format::("1" | "i" | "I" | string | EPSILON)
        style:num-format::("a" | "A") style-num-letter-sync-attlist
        EPSILON
style-num-letter-sync-attlist:
        (style:num-letter-sync::boolean)?
office-change-info:
        office:change-info::(dc-creator dc-date text-p*)
office-event-listeners:
        office:event-listeners::((script-event-listener | presentation-event-listener)*)
script-event-listener:
        script:event-listener::script-event-listener-attlist
script-event-listener-attlist:
        script:event-name::string
script-event-listener-attlist:
        script:language::string
script-event-listener-attlist:
        script:macro-name::string
        xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?
math-math:
        math:math::mathMarkup
mathMarkup:
        (ANY | STR | mathMarkup)*
text-dde-connection-decl:
        text:dde-connection-decl::(text-dde-connection-decl-attlist common-dde-connection-decl-attlist)
text-dde-connection-decl-attlist:
        office:name::string
common-dde-connection-decl-attlist:
        office:dde-application::string
common-dde-connection-decl-attlist:
        office:dde-topic::string
common-dde-connection-decl-attlist:
        office:dde-item::string
common-dde-connection-decl-attlist:
        (office:automatic-update::boolean)?
table-dde-link:
        table:dde-link::(office-dde-source table-table)
office-dde-source:
        office:dde-source::(office-dde-source-attlist common-dde-connection-decl-attlist)
office-dde-source-attlist:
        (office:name::string)?
office-dde-source-attlist:
        (office:conversion-mode::("into-default-style-data-style" | "into-english-number" | "keep-text"))?
animation-element:
        anim:animate::(common-anim-target-attlist common-anim-named-target-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist common-repeat-timing-attlist common-fill-timing-attlist common-anim-add-accum-attlist)
animation-element:
        anim:set::(common-anim-target-attlist common-anim-named-target-attlist common-anim-set-values-attlist common-fill-timing-attlist common-anim-add-accum-attlist)
animation-element:
        anim:animateMotion::(anim-animate-motion-attlist common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-fill-timing-attlist common-spline-anim-value-attlist)
animation-element:
        anim:animateColor::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist common-spline-anim-value-attlist anim-animate-color-attlist common-fill-timing-attlist)
animation-element:
        anim:animateTransform::(common-anim-target-attlist common-anim-named-target-attlist common-anim-add-accum-attlist common-anim-values-attlist anim-animate-transform-attlist common-fill-timing-attlist)
animation-element:
        anim:transitionFilter::(common-anim-target-attlist common-anim-add-accum-attlist common-anim-values-attlist common-anim-spline-mode-attlist  anim-transition-filter-attlist common-fill-timing-attlist)
animation-element:
        anim:par::(common-anim-attlist common-timing-attlist common-endsync-timing-attlist animation-element*)
animation-element:
        anim:seq::(common-anim-attlist common-endsync-timing-attlist common-timing-attlist)
animation-element:
        anim:iterate::(common-anim-attlist anin-iterate-attlist common-timing-attlist common-endsync-timing-attlist animation-element*)
animation-element:
        anim:audio::(common-anim-attlist anim-audio-attlist common-basic-timing-attlist)
animation-element:
        anim:command::(common-anim-attlist anim-command-attlist common-begin-end-timing-attlist common-anim-target-attlist anim:param::(anim:name::STR anim:value::STR)*)
anim-animate-motion-attlist:
        (svg:path::pathData)?
anim-animate-motion-attlist:
        (svg:origin::string)?
anim-animate-motion-attlist:
        (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))?
anim-animate-color-attlist:
        (anim:color-interpolation::("rgb" | "hsl"))?
anim-animate-color-attlist:
        (anim:color-interpolation-direction::("clockwise" | "counter-clockwise"))?
anim-animate-transform-attlist:
        svg:type::("translate" | "scale" | "rotate" | "skewX" | "skewY")
anim-transition-filter-attlist:
        smil:type::string
anim-transition-filter-attlist:
        (smil:subtype::string)?
anim-transition-filter-attlist:
        (smil:direction::("forward" | "reverse"))?
anim-transition-filter-attlist:
        (smil:fadeColor::("forward" | "reverse"))?
anim-transition-filter-attlist:
        (smil:mode::("in" | "out"))?
common-anim-target-attlist:
        (smil:targetElement::IDREF)?
common-anim-target-attlist:
        (anim:sub-item::string)?
common-anim-named-target-attlist:
        smil:attributeName::string
common-anim-values-attlist:
        (smil:values::string)?
common-anim-values-attlist:
        (anim:formula::string)?
common-anim-values-attlist:
        common-anim-set-values-attlist (smil:from::string)? (smil:by::string)?
common-anim-spline-mode-attlist:
        (smil:calcMode::("discrete" | "linear" | "paced" | "spline"))?
common-spline-anim-value-attlist:
        (smil:keyTimes::string)?
common-spline-anim-value-attlist:
        (smil:keySplines::string)?
common-anim-add-accum-attlist:
        (smil:accumulate::("none" | "sum"))?
common-anim-add-accum-attlist:
        (smil:additive::("replace" | "sum"))?
common-anim-set-values-attlist:
        (smil:to::string)?
common-begin-end-timing-attlist:
        (smil:begin::string)?
common-begin-end-timing-attlist:
        (smil:end::string)?
common-dur-timing-attlist:
        (smil:dur::string)?
common-endsync-timing-attlist:
        (smil:endsync::("first" | "last" | "all" | "media"))?
common-repeat-timing-attlist:
        (smil:repeatDur::string smil:repeatCount::nonNegativeInteger)?
common-fill-timing-attlist:
        (smil:fill::("remove" | "freeze" | "hold" | "auto" | "default" | "transition"))?
common-fill-default-attlist:
        (smil:fillDefault::("remove" | "freeze" | "hold" | "transition" | "auto" | "inherit"))?
common-restart-timing-attlist:
        (smil:restart::("never" | "always" | "whenNotActive" | "default"))?
common-restart-default-attlist:
        (smil:restartDefault::("never" | "always" | "whenNotActive" | "inherit"))?
common-time-manip-attlist:
        (smil:accelerate::double)?
common-time-manip-attlist:
        (smil:decelerate::double)?
common-time-manip-attlist:
        (smil:autoReverse::boolean)?
common-basic-timing-attlist:
        common-begin-end-timing-attlist common-dur-timing-attlist common-repeat-timing-attlist
common-timing-attlist:
        common-basic-timing-attlist common-restart-timing-attlist common-restart-default-attlist common-fill-timing-attlist common-fill-default-attlist common-time-manip-attlist
anin-iterate-attlist:
        (smil:targetElement::IDREF)?
anin-iterate-attlist:
        (anim:iterate-type::string)?
anin-iterate-attlist:
        (anim:iterate-interval::duration)?
anim-audio-attlist:
        (xlink:href::anyURI)?
anim-audio-attlist:
        (anim:audio-level::double)?
anim-command-attlist:
        anim:command::string
style-style:
        style:style::(style-style-attlist style-style-content style-map*)
style-style-attlist:
        style:name::styleName
style-style-attlist:
        (style:display-name::string)?
style-style-attlist:
        (style:parent-style-name::styleNameRef)?
style-style-attlist:
        (style:next-style-name::styleNameRef)?
style-style-attlist:
        (style:list-style-name::(styleName | EPSILON))?
style-style-attlist:
        (style:master-page-name::styleNameRef)?
style-style-attlist:
        (style:auto-update::boolean)?
style-style-attlist:
        (style:data-style-name::styleNameRef)?
style-style-attlist:
        (style:class::string)?
style-style-attlist:
        (style:default-outline-level::positiveInteger)?
style-map:
        style:map::style-map-attlist
style-map-attlist:
        style:condition::string
style-map-attlist:
        style:apply-style-name::styleNameRef
style-map-attlist:
        (style:base-cell-address::cellAddress)?
style-default-style:
        style:default-style::style-style-content
style-page-layout:
        style:page-layout::(style-page-layout-attlist style-page-layout-properties? style-header-style? style-footer-style?)
style-page-layout-attlist:
        style:name::styleName
style-page-layout-attlist:
        (style:page-usage::("all" | "left" | "right" | "mirrored"))?
style-header-style:
        style:header-style::(style-header-footer-properties?)
style-footer-style:
        style:footer-style::(style-header-footer-properties?)
style-master-page:
        style:master-page::(style-master-page-attlist (style-header style-header-left?)? (style-footer style-footer-left?)? office-forms? style-style* shape* presentation-notes?)
style-master-page-attlist:
        style:name::styleName
style-master-page-attlist:
        (style:display-name::string)?
style-master-page-attlist:
        style:page-layout-name::styleNameRef
style-master-page-attlist:
        (draw:style-name::styleNameRef)?
style-master-page-attlist:
        (style:next-style-name::styleNameRef)?
style-header:
        style:header::(common-style-header-footer-attlist header-footer-content)
style-footer:
        style:footer::(common-style-header-footer-attlist header-footer-content)
style-header-left:
        style:header-left::(common-style-header-footer-attlist header-footer-content)
style-footer-left:
        style:footer-left::(common-style-header-footer-attlist header-footer-content)
header-footer-content:
        text-decls (text-h | text-p | text-list | table-table | text-section | text-table-of-content | text-illustration-index | text-table-index | text-object-index | text-user-index | text-alphabetical-index | text-bibliography | text-index-title | change-marks)*
        style-region-left? style-region-center? style-region-right?
common-style-header-footer-attlist:
        (style:display::boolean)?
style-region-left:
        style:region-left::region-content
style-region-center:
        style:region-center::region-content
style-region-right:
        style:region-right::region-content
region-content:
        text-p*
presentation-notes:
        presentation:notes::(common-presentation-header-footer-attlist presentation-notes-attlist shape*)
presentation-notes-attlist:
        (style:page-layout-name::styleNameRef)?
presentation-notes-attlist:
        (draw:style-name::styleNameRef)?
table-table-template:
        table:table-template::(table-table-template-attlist table-first-row? table-last-row? table-first-column? table-last-column? (table-body | (table-even-rows table-odd-rows) | (table-even-columns table-odd-columns)))
table-table-template-attlist:
        text:name::string
table-table-template-attlist:
        text:first-row-start-column::rowOrCol
table-table-template-attlist:
        text:first-row-end-column::rowOrCol
table-table-template-attlist:
        text:last-row-start-column::rowOrCol
table-table-template-attlist:
        text:last-row-end-column::rowOrCol
rowOrCol:
        "row"
        "column"
table-first-row:
        table:first-row::common-table-template-attlist
table-last-row:
        table:last-row::common-table-template-attlist
table-first-column:
        table:first-column::common-table-template-attlist
table-last-column:
        table:last-column::common-table-template-attlist
table-body:
        table:body::common-table-template-attlist
table-even-rows:
        table:even-rows::common-table-template-attlist
table-odd-rows:
        table:odd-rows::common-table-template-attlist
table-even-columns:
        table:even-columns::common-table-template-attlist
table-odd-columns:
        table:odd-columns::common-table-template-attlist
common-table-template-attlist:
        text:style-name::styleNameRef
style-font-face:
        style:font-face::(style-font-face-attlist svg-font-face-src? svg-definition-src?)
style-font-face-attlist:
        (svg:font-family::string)? (svg:font-style::fontStyle)? (svg:font-variant::fontVariant)? (svg:font-weight::fontWeight)? (svg:font-stretch::("normal" | "ultra-condensed" | "extra-condensed" | "condensed" | "semi-condensed" | "semi-expanded" | "expanded" | "extra-expanded" | "ultra-expanded"))? (svg:font-size::positiveLength)? (svg:unicode-range::STR)? (svg:units-per-em::integer)? (svg:panose-1::STR)? (svg:stemv::integer)? (svg:stemh::integer)? (svg:slope::integer)? (svg:cap-height::integer)? (svg:x-height::integer)? (svg:accent-height::integer)? (svg:ascent::integer)? (svg:descent::integer)? (svg:widths::STR)? (svg:bbox::STR)? (svg:ideographic::integer)? (svg:alphabetic::integer)? (svg:mathematical::integer)? (svg:hanging::integer)? (svg:v-ideographic::integer)? (svg:v-alphabetic::integer)? (svg:v-mathematical::integer)? (svg:v-hanging::integer)? (svg:underline-position::integer)? (svg:underline-thickness::integer)? (svg:strikethrough-position::integer)? (svg:strikethrough-thickness::integer)? (svg:overline-position::integer)? (svg:overline-thickness::integer)?
style-font-face-attlist:
        style:name::string
style-font-face-attlist:
        (style:font-adornments::string)?
style-font-face-attlist:
        (style:font-family-generic::fontFamilyGeneric)?
style-font-face-attlist:
        (style:font-pitch::fontPitch)?
style-font-face-attlist:
        (style:font-charset::textEncoding)?
svg-font-face-src:
        svg:font-face-src::((svg-font-face-uri | svg-font-face-name)+)
svg-font-face-uri:
        svg:font-face-uri::(common-svg-font-face-xlink-attlist svg-font-face-format*)
svg-font-face-format:
        svg:font-face-format::((svg:string::STR)?)
svg-font-face-name:
        svg:font-face-name::((name::STR)?)
svg-definition-src:
        svg:definition-src::common-svg-font-face-xlink-attlist
common-svg-font-face-xlink-attlist:
        xlink:href::anyURI (xlink:type::"simple")? (xlink:actuate::"onRequest")?
number-number-style:
        number:number-style::(common-data-style-attlist style-text-properties? number-text? (any-number number-text?)? style-map*)
any-number:
        number-number
        number-scientific-number
        number-fraction
number-number:
        number:number::(number-number-attlist common-decimal-places-attlist common-number-attlist number-embedded-text*)
number-number-attlist:
        (number:decimal-replacement::STR)?
number-number-attlist:
        (number:display-factor::double)?
number-embedded-text:
        number:embedded-text::(number-embedded-text-attlist STR)
number-embedded-text-attlist:
        number:position::integer
number-scientific-number:
        number:scientific-number::(number-scientific-number-attlist common-decimal-places-attlist common-number-attlist)
number-scientific-number-attlist:
        (number:min-exponent-digits::integer)?
number-fraction:
        number:fraction::(number-fraction-attlist common-number-attlist)
number-fraction-attlist:
        (number:min-numerator-digits::integer)?
number-fraction-attlist:
        (number:min-denominator-digits::integer)?
number-fraction-attlist:
        (number:denominator-value::integer)?
number-currency-style:
        number:currency-style::(common-data-style-attlist common-auto-reorder-attlist style-text-properties? number-text? ((number-and-text currency-symbol-and-text?) | (currency-symbol-and-text number-and-text?))? style-map*)
currency-symbol-and-text:
        number-currency-symbol number-text?
number-and-text:
        number-number number-text?
number-currency-symbol:
        number:currency-symbol::(number-currency-symbol-attlist STR)
number-currency-symbol-attlist:
        (number:language::languageCode)? (number:country::countryCode)?
number-percentage-style:
        number:percentage-style::(common-data-style-attlist style-text-properties? number-text? number-and-text? style-map*)
number-date-style:
        number:date-style::(common-data-style-attlist common-auto-reorder-attlist common-format-source-attlist style-text-properties? number-text? (any-date number-text?)+ style-map*)
any-date:
        number-day
        number-month
        number-year
        number-era
        number-day-of-week
        number-week-of-year
        number-quarter
        number-hours
        number-am-pm
        number-minutes
        number-seconds
number-day:
        number:day::(number-day-attlist common-calendar-attlist)
number-day-attlist:
        (number:style::("short" | "long"))?
number-month:
        number:month::(number-month-attlist common-calendar-attlist)
number-month-attlist:
        (number:textual::boolean)?
number-month-attlist:
        (number:possessive-form::boolean)?
number-month-attlist:
        (number:style::("short" | "long"))?
number-year:
        number:year::(number-year-attlist common-calendar-attlist)
number-year-attlist:
        (number:style::("short" | "long"))?
number-era:
        number:era::(number-era-attlist common-calendar-attlist)
number-era-attlist:
        (number:style::("short" | "long"))?
number-day-of-week:
        number:day-of-week::(number-day-of-week-attlist common-calendar-attlist)
number-day-of-week-attlist:
        (number:style::("short" | "long"))?
number-week-of-year:
        number:week-of-year::common-calendar-attlist
number-quarter:
        number:quarter::(number-quarter-attlist common-calendar-attlist)
number-quarter-attlist:
        (number:style::("short" | "long"))?
number-time-style:
        number:time-style::(number-time-style-attlist common-data-style-attlist common-format-source-attlist style-text-properties? number-text? (any-time number-text?)+ style-map*)
any-time:
        number-hours
        number-am-pm
        number-minutes
        number-seconds
number-time-style-attlist:
        (number:truncate-on-overflow::boolean)?
number-hours:
        number:hours::number-hours-attlist
number-hours-attlist:
        (number:style::("short" | "long"))?
number-minutes:
        number:minutes::number-minutes-attlist
number-minutes-attlist:
        (number:style::("short" | "long"))?
number-seconds:
        number:seconds::number-seconds-attlist
number-seconds-attlist:
        (number:style::("short" | "long"))?
number-seconds-attlist:
        (number:decimal-places::integer)?
number-am-pm:
        number:am-pm::EPSILON
number-boolean-style:
        number:boolean-style::(common-data-style-attlist style-text-properties? number-text? (number-boolean number-text?)? style-map*)
number-boolean:
        number:boolean::EPSILON
number-text-style:
        number:text-style::(common-data-style-attlist style-text-properties? number-text? (number-text-content number-text?)* style-map*)
number-text:
        number:text::STR
number-text-content:
        number:text-content::EPSILON
common-data-style-attlist:
        style:name::styleName
common-data-style-attlist:
        (number:language::languageCode)?
common-data-style-attlist:
        (number:country::countryCode)?
common-data-style-attlist:
        (number:title::STR)?
common-data-style-attlist:
        (style:volatile::boolean)?
common-data-style-attlist:
        (number:transliteration-format::string)?
common-data-style-attlist:
        (number:transliteration-language::countryCode)?
common-data-style-attlist:
        (number:transliteration-country::countryCode)?
common-data-style-attlist:
        (number:transliteration-style::("short" | "medium" | "long"))?
style-data-style-attlist:
        (style:display-name::string)?
common-auto-reorder-attlist:
        (number:automatic-order::boolean)?
common-format-source-attlist:
        (number:format-source::("fixed" | "language"))?
common-decimal-places-attlist:
        (number:decimal-places::integer)?
common-number-attlist:
        (number:min-integer-digits::integer)?
common-number-attlist:
        (number:grouping::boolean)?
common-calendar-attlist:
        (number:calendar::("gregorian" | "gengou" | "ROC" | "hanja_yoil" | "hanja" | "hijri" | "jewish" | "buddhist" | string))?
style-style-content:
        style:family::"text" style-text-properties?
style-style-content:
        style:family::"paragraph" style-paragraph-properties? style-text-properties?
style-style-content:
        style:family::"section" style-section-properties?
style-style-content:
        style:family::"ruby" style-ruby-properties?
style-style-content:
        style:family::"table" style-table-properties?
style-style-content:
        style:family::"table-column" style-table-column-properties?
style-style-content:
        style:family::"table-row" style-table-row-properties?
style-style-content:
        style:family::"table-cell" style-table-cell-properties? style-paragraph-properties? style-text-properties?
style-style-content:
        style:family::("graphic" | "presentation") style-graphic-properties? style-paragraph-properties? style-text-properties?
style-style-content:
        style:family::"drawing-page" style-drawing-page-properties?
style-style-content:
        style:family::"chart" style-chart-properties? style-graphic-properties? style-paragraph-properties? style-text-properties?
text-linenumbering-configuration:
        text:linenumbering-configuration::(text-linenumbering-configuration-attlist text-linenumbering-separator?)
text-linenumbering-configuration-attlist:
        (text:number-lines::boolean)?
text-linenumbering-configuration-attlist:
        common-num-format-attlist?
text-linenumbering-configuration-attlist:
        (text:style-name::styleNameRef)?
text-linenumbering-configuration-attlist:
        (text:increment::nonNegativeInteger)?
text-linenumbering-configuration-attlist:
        (text:number-position::("left" | "rigth" | "inner" | "outer"))?
text-linenumbering-configuration-attlist:
        (text:offset::nonNegativeLength)?
text-linenumbering-configuration-attlist:
        (text:count-empty-lines::boolean)?
text-linenumbering-configuration-attlist:
        (text:count-in-text-boxes::boolean)?
text-linenumbering-configuration-attlist:
        (text:restart-on-page::boolean)?
text-linenumbering-separator:
        text:linenumbering-separator::((text:increment::nonNegativeInteger)? STR)
text-notes-configuration:
        text:notes-configuration::text-notes-configuration-content
text-notes-configuration-content:
        text-note-class
text-notes-configuration-content:
        (text:citation-style-name::styleNameRef)?
text-notes-configuration-content:
        (text:citation-body-style-name::styleNameRef)?
text-notes-configuration-content:
        (text:default-style-name::styleNameRef)?
text-notes-configuration-content:
        (text:master-page-name::styleNameRef)?
text-notes-configuration-content:
        (text:start-value::nonNegativeInteger)?
text-notes-configuration-content:
        common-num-format-prefix-suffix-attlist common-num-format-attlist?
text-notes-configuration-content:
        (text:start-numbering-at::("document" | "chapter" | "page"))?
text-notes-configuration-content:
        (text:footnotes-position::("text" | "page" | "section" | "document"))?
text-notes-configuration-content:
        (text:note-continuation-notice-forward::STR)?
text-notes-configuration-content:
        (text:note-continuation-notice-backward::STR)?
text-bibliography-configuration:
        text:bibliography-configuration::(text-bibliography-configuration-attlist text-sort-key*)
text-bibliography-configuration-attlist:
        (text:prefix::string)? (text:suffix::string)?
text-bibliography-configuration-attlist:
        (text:numbered-entries::boolean)?
text-bibliography-configuration-attlist:
        (text:sort-by-position::boolean)? (fo:language::languageCode)? (fo:country::countryCode)? (text:sort-algorithm::string)?
text-sort-key:
        text:sort-key::text-sort-key-attlist
text-sort-key-attlist:
        text:key::("address" | "annote" | "author" | "bibliography-type" | "booktitle" | "chapter" | "custom1" | "custom2" | "custom3" | "custom4" | "custom5" | "edition" | "editor" | "howpublished" | "identifier" | "institution" | "isbn" | "issn" | "journal" | "month" | "note" | "number" | "organizations" | "pages" | "publisher" | "report-type" | "school" | "series" | "title" | "url" | "volume" | "year") (text:sort-ascending::boolean)?
text-list-style:
        text:list-style::(text-list-style-attr text-list-style-content*)
text-list-style-attr:
        style:name::styleName
text-list-style-attr:
        (style:display-name::string)?
text-list-style-attr:
        (text:consecutive-numbering::boolean)?
text-list-level-style-attr:
        text:level::positiveInteger
text-list-style-content:
        text:list-level-style-number::(text-list-level-style-attr text-list-level-style-number-attr style-list-level-properties? style-text-properties?)
text-list-style-content:
        text:list-level-style-bullet::(text-list-level-style-attr text-list-level-style-bullet-attr style-list-level-properties? style-text-properties?)
text-list-style-content:
        text:list-level-style-image::(text-list-level-style-attr text-list-level-style-image-attr style-list-level-properties?)
text-list-level-style-number-attr:
        (text:style-name::styleNameRef)?
text-list-level-style-number-attr:
        common-num-format-attlist common-num-format-prefix-suffix-attlist
text-list-level-style-number-attr:
        (text:display-levels::positiveInteger)?
text-list-level-style-number-attr:
        (text:start-value::positiveInteger)?
text-list-level-style-bullet-attr:
        (text:style-name::styleNameRef)?
text-list-level-style-bullet-attr:
        text:bullet-char::character
text-list-level-style-bullet-attr:
        common-num-format-prefix-suffix-attlist
text-list-level-style-bullet-attr:
        (text:bullet-relative-size::percent)?
text-list-level-style-image-attr:
        common-draw-data-attlist
        office-binary-data
text-outline-style:
        text:outline-style::(text-outline-level-style+)
text-outline-level-style:
        text:outline-level-style::(text-outline-level-style-attlist style-list-level-properties? style-text-properties?)
text-outline-level-style-attlist:
        text:level::positiveInteger
text-outline-level-style-attlist:
        (text:style-name::styleNameRef)?
text-outline-level-style-attlist:
        common-num-format-attlist common-num-format-prefix-suffix-attlist
text-outline-level-style-attlist:
        (text:display-levels::positiveInteger)?
text-outline-level-style-attlist:
        (text:start-value::positiveInteger)?
style-graphic-properties:
        style:graphic-properties::style-graphic-properties-content
style-graphic-properties-content:
        style-properties-content
style-graphic-properties-content-strict:
        style-graphic-properties-attlist style-graphic-fill-properties-attlist style-graphic-properties-elements
 style-graphic-properties-elements:
        EPSILON
style-drawing-page-properties:
        style:drawing-page-properties::style-drawing-page-properties-content
style-drawing-page-properties-content:
        style-properties-content
style-drawing-page-properties-content-strict:
        style-graphic-fill-properties-attlist style-drawing-page-properties-attlist style-drawing-page-properties-elements
draw-gradient:
        draw:gradient::(common-draw-gradient-attlist draw-gradient-attlist)
common-draw-gradient-attlist:
        (draw:name::styleName)?
common-draw-gradient-attlist:
        (draw:display-name::string)?
common-draw-gradient-attlist:
        draw:style::gradient-style
common-draw-gradient-attlist:
        (draw:cx::percent)? (draw:cy::percent)?
common-draw-gradient-attlist:
        (draw:angle::integer)?
common-draw-gradient-attlist:
        (draw:border::percent)?
gradient-style:
        "linear"
        "axial"
        "radial"
        "ellipsoid"
        "square"
        "rectangular"
draw-gradient-attlist:
        (draw:start-color::color)? (draw:end-color::color)?
draw-gradient-attlist:
        (draw:start-intensity::percent)? (draw:end-intensity::percent)?
svg-linearGradient:
        svg:linearGradient::(common-svg-gradient-attlist (svg:x1::(coordinate | percent))? (svg:y1::(coordinate | percent))? (svg:x2::(coordinate | percent))? (svg:y2::(coordinate | percent))? svg-stop*)
svg-radialGradient:
        svg:radialGradient::(common-svg-gradient-attlist (svg:cx::(coordinate | percent))? (svg:cy::(coordinate | percent))? (svg:r::(coordinate | percent))? (svg:fx::(coordinate | percent))? (svg:fy::(coordinate | percent))? svg-stop*)
svg-stop:
        svg:stop::(svg:offset::(double | percent) (svg:stop-color::color)? (svg:stop-opacity::double)?)
common-svg-gradient-attlist:
        (svg:gradientUnits::"objectBoundingBox")? (svg:gradientTransform::string)? (svg:spreadMethod::("pad" | "reflect" | "repeat"))?
common-svg-gradient-attlist:
        draw:name::styleName
common-svg-gradient-attlist:
        (draw:display-name::string)?
draw-hatch:
        draw:hatch::draw-hatch-attlist
draw-hatch-attlist:
        draw:name::styleName
draw-hatch-attlist:
        (draw:display-name::string)?
draw-hatch-attlist:
        draw:style::("single" | "double" | "triple")
draw-hatch-attlist:
        (draw:color::color)?
draw-hatch-attlist:
        (draw:distance::length)?
draw-hatch-attlist:
        (draw:rotation::integer)?
draw-fill-image:
        draw:fill-image::(draw-fill-image-attlist xlink:href::anyURI (xlink:type::"simple")? (xlink:show::"embed")? (xlink:actuate::"onLoad")?)
draw-fill-image-attlist:
        draw:name::styleName
draw-fill-image-attlist:
        (draw:display-name::string)?
draw-fill-image-attlist:
        (svg:width::length)? (svg:height::length)?
draw-opacity:
        draw:opacity::(common-draw-gradient-attlist draw-opacity-attlist)
draw-opacity-attlist:
        (draw:start::percent)? (draw:end::percent)?
draw-marker:
        draw:marker::(draw-marker-attlist common-draw-viewbox-attlist common-draw-path-data-attlist)
draw-marker-attlist:
        draw:name::styleName
draw-marker-attlist:
        (draw:display-name::string)?
draw-stroke-dash:
        draw:stroke-dash::draw-stroke-dash-attlist
draw-stroke-dash-attlist:
        draw:name::styleName
draw-stroke-dash-attlist:
        (draw:display-name::string)?
draw-stroke-dash-attlist:
        (draw:style::("rect" | "round"))?
draw-stroke-dash-attlist:
        (draw:dots1::integer)? (draw:dots1-length::length)? (draw:dots2::integer)? (draw:dots2-length::length)?
draw-stroke-dash-attlist:
        (draw:distance::length)?
style-presentation-page-layout:
        style:presentation-page-layout::(style:name::styleName (style:display-name::string)? presentation-placeholder*)
presentation-placeholder:
        presentation:placeholder::(presentation:object::presentation-classes svg:x::(coordinate | percent) svg:y::(coordinate | percent) svg:width::(length | percent) svg:height::(length | percent))
style-properties-content:
        anyAttListOrElements
style-page-layout-properties:
        style:page-layout-properties::style-page-layout-properties-content
style-page-layout-properties-content:
        style-properties-content
style-page-layout-properties-content-strict:
        style-page-layout-properties-attlist style-page-layout-properties-elements
style-page-layout-properties-attlist:
        (fo:page-width::length)? (fo:page-height::length)?
style-page-layout-properties-attlist:
        common-num-format-attlist? common-num-format-prefix-suffix-attlist
style-page-layout-properties-attlist:
        (style:paper-tray-name::("default" | string))?
style-page-layout-properties-attlist:
        (style:print-orientation::("portrait" | "landscape"))?
style-page-layout-properties-attlist:
        common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist
style-page-layout-properties-attlist:
        common-border-attlist
style-page-layout-properties-attlist:
        common-border-line-width-attlist
style-page-layout-properties-attlist:
        common-padding-attlist
style-page-layout-properties-attlist:
        common-shadow-attlist
style-page-layout-properties-attlist:
        common-background-color-attlist
style-page-layout-properties-attlist:
        (style:register-truth-ref-style-name::styleNameRef)?
style-page-layout-properties-attlist:
        (style:print::(("headers" | "grid" | "annotations" | "objects" | "charts" | "drawings" | "formulas" | "zero-values")*))?
style-page-layout-properties-attlist:
        (style:print-page-order::("ttb" | "ltr"))?
style-page-layout-properties-attlist:
        (style:first-page-number::(positiveInteger | "continue"))?
style-page-layout-properties-attlist:
        (style:scale-to::percent)? (style:scale-to-pages::positiveInteger)?
style-page-layout-properties-attlist:
        (style:table-centering::("horizontal" | "vertical" | "both" | "none"))?
style-page-layout-properties-attlist:
        (style:footnote-max-height::length)?
style-page-layout-properties-attlist:
        common-writing-mode-attlist
style-page-layout-properties-attlist:
        (style:layout-grid-mode::("none" | "line" | "both"))?
style-page-layout-properties-attlist:
        (style:layout-grid-base-height::length)?
style-page-layout-properties-attlist:
        (style:layout-grid-ruby-height::length)?
style-page-layout-properties-attlist:
        (style:layout-grid-lines::positiveInteger)?
style-page-layout-properties-attlist:
        (style:layout-grid-color::color)?
style-page-layout-properties-attlist:
        (style:layout-grid-ruby-below::boolean)?
style-page-layout-properties-attlist:
        (style:layout-grid-print::boolean)?
style-page-layout-properties-attlist:
        (style:layout-grid-display::boolean)?
style-page-layout-properties-elements:
        style-background-image
style-page-layout-properties-elements:
        style-columns
style-page-layout-properties-elements:
        style-footnote-sep
style-footnote-sep:
        (style:footnote-sep::style-footnote-sep-attlist)?
style-footnote-sep-attlist:
        (style:width::length)? (style:rel-width::percent)? (style:color::color)? (style:line-style::lineStyle)? (style:adjustment::("left" | "center" | "right"))? (style:distance-before-sep::length)? (style:distance-after-sep::length)?
style-header-footer-properties:
        style:header-footer-properties::style-header-footer-properties-content
style-header-footer-properties-content:
        style-properties-content
style-header-footer-properties-content-strict:
        style-header-footer-properties-attlist style-header-footer-properties-elements
style-header-footer-properties-attlist:
        (svg:height::length)? (fo:min-height::length)?
style-header-footer-properties-attlist:
        common-horizontal-margin-attlist common-vertical-margin-attlist common-margin-attlist
style-header-footer-properties-attlist:
        common-border-attlist
style-header-footer-properties-attlist:
        common-border-line-width-attlist
style-header-footer-properties-attlist:
        common-padding-attlist
style-header-footer-properties-attlist:
        common-background-color-attlist
style-header-footer-properties-attlist:
        common-shadow-attlist
style-header-footer-properties-elements:
        style-background-image
style-header-footer-attlist:
        (style:dynamic-spacing::boolean)?
style-text-properties:
        style:text-properties::style-text-properties-content
style-text-properties-content:
        style-properties-content
style-text-properties-content-strict:
        style-text-properties-attlist style-text-properties-elements
style-text-properties-elements:
        EPSILON
style-text-properties-attlist:
        (fo:font-variant::fontVariant)?
style-text-properties-attlist:
        (fo:text-transform::("none" | "lowercase" | "uppercase" | "capitalize"))?
style-text-properties-attlist:
        (fo:color::color)?
style-text-properties-attlist:
        (style:use-window-font-color::boolean)?
style-text-properties-attlist:
        (style:text-outline::boolean)?
style-text-properties-attlist:
        (style:text-line-through-type::lineType)?
style-text-properties-attlist:
        (style:text-line-through-style::lineStyle)?
style-text-properties-attlist:
        (style:text-line-through-width::lineWidth)?
style-text-properties-attlist:
        (style:text-line-through-color::("font-color" | color))?
style-text-properties-attlist:
        (style:text-line-through-text::string)?
style-text-properties-attlist:
        (style:text-line-through-text-style::styleNameRef)?
style-text-properties-attlist:
        (style:text-position::((percent | "super" | "sub") percent?))?
style-text-properties-attlist:
        (style:font-name::string)? (style:font-name-asian::string)? (style:font-name-complex::string)?
style-text-properties-attlist:
        (fo:font-family::string)? (style:font-family-asian::string)? (style:font-family-complex::string)?
style-text-properties-attlist:
        (style:font-family-generic::fontFamilyGeneric)? (style:font-family-generic-asian::fontFamilyGeneric)? (style:font-family-generic-complex::fontFamilyGeneric)?
style-text-properties-attlist:
        (style:font-style-name::string)? (style:font-style-name-asian::string)? (style:font-style-name-complex::string)?
style-text-properties-attlist:
        (style:font-pitch::fontPitch)? (style:font-pitch-asian::fontPitch)? (style:font-pitch-complex::fontPitch)?
style-text-properties-attlist:
        (style:font-charset::textEncoding)?
style-text-properties-attlist:
        (fo:font-size::(positiveLength | percent))? (style:font-size-asian::(positiveLength | percent))? (style:font-size-complex::(positiveLength | percent))?
style-text-properties-attlist:
        (style:font-size-rel::length)? (style:font-size-rel-asian::length)? (style:font-size-rel-complex::length)?
style-text-properties-attlist:
        (style:script-type::("latin" | "asian" | "complex" | "ignore"))?
style-text-properties-attlist:
        (fo:letter-spacing::(length | "normal"))?
style-text-properties-attlist:
        (fo:language::languageCode)? (style:language-asian::languageCode)? (style:language-complex::languageCode)?
style-text-properties-attlist:
        (fo:country::countryCode)? (style:country-asian::countryCode)? (style:country-complex::countryCode)?
style-text-properties-attlist:
        (fo:font-style::fontStyle)? (style:font-style-asian::fontStyle)? (style:font-style-complex::fontStyle)?
style-text-properties-attlist:
        (style:font-relief::("none" | "embossed" | "engraved"))?
style-text-properties-attlist:
        (fo:text-shadow::shadowType)?
style-text-properties-attlist:
        (style:text-underline-type::lineType)?
style-text-properties-attlist:
        (style:text-underline-style::lineStyle)?
style-text-properties-attlist:
        (style:text-underline-width::lineWidth)?
style-text-properties-attlist:
        (style:text-underline-color::("font-color" | color))?
style-text-properties-attlist:
        (fo:font-weight::fontWeight)? (style:font-weight-asian::fontWeight)? (style:font-weight-complex::fontWeight)?
style-text-properties-attlist:
        (style:text-underline-mode::lineMode)?
style-text-properties-attlist:
        (style:text-line-through-mode::lineMode)?
style-text-properties-attlist:
        (style:letter-kerning::boolean)?
style-text-properties-attlist:
        (style:text-blinking::boolean)?
style-text-properties-attlist:
        common-background-color-attlist
style-text-properties-attlist:
        (style:text-combine::("none" | "letters" | "lines"))?
style-text-properties-attlist:
        (style:text-combine-start-char::character)? (style:text-combine-end-char::character)?
style-text-properties-attlist:
        (style:text-emphasize::("none" | (("none" | "accent" | "dot" | "circle" | "disc") ("above" | "below"))))?
style-text-properties-attlist:
        (style:text-scale::percent)?
style-text-properties-attlist:
        (style:text-rotation-angle::integer)?
style-text-properties-attlist:
        (style:text-rotation-scale::("fixed" | "line-height"))?
style-text-properties-attlist:
        (fo:hyphenate::boolean)?
style-text-properties-attlist:
        (fo:hyphenation-remain-char-count::positiveInteger)?
style-text-properties-attlist:
        (fo:hyphenation-push-char-count::positiveInteger)?
style-text-properties-attlist:
        text:display::"true"
        text:display::"none"
        text:display::"condition" text:condition::"none"
        EPSILON
fontVariant:
        "normal"
        "small-caps"
fontFamilyGeneric:
        "roman"
        "swiss"
        "modern"
        "decorative"
        "script"
        "system"
fontPitch:
        "fixed"
        "variable"
textEncoding:
        STR
fontStyle:
        "normal"
        "italic"
        "oblique"
shadowType:
        "none"
        string
lineType:
        "none"
        "single"
        "double"
lineStyle:
        "none"
        "solid"
        "dotted"
        "dash"
        "long-dash"
        "dot-dash"
        "dot-dot-dash"
        "wave"
lineWidth:
        "auto"
        "normal"
        "bold"
        "thin"
        "dash"
        "medium"
        "thick"
        positiveInteger
        percent
        positiveLength
fontWeight:
        "normal"
        "bold"
        "100"
        "200"
        "300"
        "400"
        "500"
        "600"
        "700"
        "800"
        "900"
lineMode:
        "continuous"
        "skip-white-space"
style-paragraph-properties:
        style:paragraph-properties::style-paragraph-properties-content
style-paragraph-properties-content:
        style-properties-content
style-paragraph-properties-content-strict:
        style-paragraph-properties-attlist style-paragraph-properties-elements
style-paragraph-properties-attlist:
        (fo:line-height::("normal" | nonNegativeLength | percent))?
style-paragraph-properties-attlist:
        (style:line-height-at-least::nonNegativeLength)?
style-paragraph-properties-attlist:
        (style:line-spacing::length)?
style-paragraph-properties-attlist:
        (style:font-independent-line-spacing::boolean)?
style-paragraph-properties-attlist:
        common-text-align
style-paragraph-properties-attlist:
        (fo:text-align-last::("start" | "center" | "justify"))?
style-paragraph-properties-attlist:
        (style:justify-single-word::boolean)?
style-paragraph-properties-attlist:
        (fo:keep-together::("auto" | "always"))?
style-paragraph-properties-attlist:
        (fo:widows::nonNegativeInteger)?
style-paragraph-properties-attlist:
        (fo:orphans::nonNegativeInteger)?
style-paragraph-properties-attlist:
        (style:tab-stop-distance::nonNegativeLength)?
style-paragraph-properties-attlist:
        (fo:hyphenation-keep::("auto" | "page"))?
style-paragraph-properties-attlist:
        (fo:hyphenation-ladder-count::("no-limit" | positiveInteger))?
style-paragraph-properties-attlist:
        (style:register-true::boolean)?
style-paragraph-properties-attlist:
        common-horizontal-margin-attlist
style-paragraph-properties-attlist:
        (fo:text-indent::(length | percent))?
style-paragraph-properties-attlist:
        (style:auto-text-indent::boolean)?
style-paragraph-properties-attlist:
        common-vertical-margin-attlist
style-paragraph-properties-attlist:
        common-margin-attlist
style-paragraph-properties-attlist:
        common-break-attlist
style-paragraph-properties-attlist:
        common-background-color-attlist
style-paragraph-properties-attlist:
        common-border-attlist
style-paragraph-properties-attlist:
        common-border-line-width-attlist
style-paragraph-properties-attlist:
        common-padding-attlist
style-paragraph-properties-attlist:
        common-shadow-attlist
style-paragraph-properties-attlist:
        common-keep-with-next-attlist
style-paragraph-properties-attlist:
        (text:number-lines::boolean)?
style-paragraph-properties-attlist:
        (text:line-number::nonNegativeInteger)?
style-paragraph-properties-attlist:
        (style:text-autospace::("none" | "ideograph-alpha"))?
style-paragraph-properties-attlist:
        (style:punctuation-wrap::("simple" | "hanging"))?
style-paragraph-properties-attlist:
        (style:line-break::("normal" | "strict"))?
style-paragraph-properties-attlist:
        (style:vertical-align::("top" | "middle" | "bottom" | "auto"))?
style-paragraph-properties-attlist:
        common-writing-mode-attlist
style-paragraph-properties-attlist:
        (style:writing-mode-automatic::boolean)?
style-paragraph-properties-attlist:
        (style:snap-to-layout-grid::boolean)?
style-paragraph-properties-attlist:
        common-page-number-attlist
style-paragraph-properties-attlist:
        (style:background-transparency::percent)?
common-text-align:
        (fo:text-align::("start" | "end" | "left" | "right" | "center" | "justify"))?
style-paragraph-properties-elements:
        style-tab-stops
style-paragraph-properties-elements:
        style-drop-cap
style-paragraph-properties-elements:
        style-background-image
style-tab-stops:
        (style:tab-stops::(style-tab-stop*))?
style-tab-stop:
        style:tab-stop::style-tab-stop-attlist
style-tab-stop-attlist:
        style:position::nonNegativeLength
style-tab-stop-attlist:
        (style:type::("left" | "center" | "right"))?
        style:type::"char" style-tab-stop-char-attlist
style-tab-stop-attlist:
        (style:leader-type::lineType)?
style-tab-stop-attlist:
        (style:leader-style::lineStyle)?
style-tab-stop-attlist:
        (style:leader-width::lineWidth)?
style-tab-stop-attlist:
        (style:leader-color::("font-color" | color))?
style-tab-stop-attlist:
        (style:leader-text::string)?
style-tab-stop-attlist:
        (style:leader-text-style::styleNameRef)?
style-tab-stop-char-attlist:
        style:char::character
style-drop-cap:
        (style:drop-cap::style-drop-cap-attlist)?
style-drop-cap-attlist:
        (style:length::("word" | positiveInteger))?
style-drop-cap-attlist:
        (style:lines::positiveInteger)?
style-drop-cap-attlist:
        (style:distance::length)?
style-drop-cap-attlist:
        (style:style-name::styleNameRef)?
common-horizontal-margin-attlist:
        (fo:margin-left::(length | percent))? (fo:margin-right::(length | percent))?
common-vertical-margin-attlist:
        (fo:margin-top::(nonNegativeLength | percent))? (fo:margin-bottom::(nonNegativeLength | percent))?
common-margin-attlist:
        (fo:margin::(nonNegativeLength | percent))?
common-break-attlist:
        (fo:break-before::("auto" | "column" | "page"))? (fo:break-after::("auto" | "column" | "page"))?
common-background-color-attlist:
        (fo:background-color::("transparent" | color))?
style-background-image:
        (style:background-image::(style-background-image-attlist (common-draw-data-attlist | office-binary-data | EPSILON)))?
style-background-image-attlist:
        (style:repeat::("no-repeat" | "repeat" | "stretch"))?
style-background-image-attlist:
        (style:position::("left" | "center" | "right" | "top" | "bottom" | (horiBackPos vertBackPos) | (vertBackPos horiBackPos)))?
style-background-image-attlist:
        (style:filter-name::string)?
style-background-image-attlist:
        (draw:opacity::percent)?
horiBackPos:
        "left"
        "center"
        "right"
vertBackPos:
        "top"
        "center"
        "bottom"
common-border-attlist:
        (fo:border::string)? (fo:border-top::string)? (fo:border-bottom::string)? (fo:border-left::string)? (fo:border-right::string)?
common-border-line-width-attlist:
        (style:border-line-width::borderWidths)? (style:border-line-width-top::borderWidths)? (style:border-line-width-bottom::borderWidths)? (style:border-line-width-left::borderWidths)? (style:border-line-width-right::borderWidths)?
borderWidths:
        positiveLength positiveLength positiveLength
common-padding-attlist:
        (fo:padding::nonNegativeLength)? (fo:padding-top::nonNegativeLength)? (fo:padding-bottom::nonNegativeLength)? (fo:padding-left::nonNegativeLength)? (fo:padding-right::nonNegativeLength)?
common-shadow-attlist:
        (style:shadow::shadowType)?
common-keep-with-next-attlist:
        (fo:keep-with-next::("auto" | "always"))?
common-writing-mode-attlist:
        (style:writing-mode::("lr-tb" | "rl-tb" | "tb-rl" | "tb-lr" | "lr" | "rl" | "tb" | "page"))?
common-page-number-attlist:
        (style:page-number::positiveInteger)?
style-ruby-properties:
        style:ruby-properties::style-ruby-properties-content
style-ruby-properties-content:
        style-properties-content
style-ruby-properties-content-strict:
        style-ruby-properties-attlist style-ruby-properties-elements
style-ruby-properties-elements:
        EPSILON
style-ruby-properties-attlist:
        (style:ruby-position::("above" | "below"))?
style-ruby-properties-attlist:
        (style:ruby-align::("left" | "center" | "right" | "distribute-letter" | "distribute-space"))?
style-section-properties:
        style:section-properties::style-section-properties-content
style-section-properties-content:
        style-properties-content
style-section-properties-content-strict:
        style-section-properties-attlist style-section-properties-elements
style-section-properties-attlist:
        common-background-color-attlist
style-section-properties-attlist:
        common-horizontal-margin-attlist
style-section-properties-attlist:
        (style:protect::boolean)?
style-section-properties-attlist:
        (text:dont-balance-text-columns::boolean)?
style-section-properties-attlist:
        common-writing-mode-attlist
style-section-properties-elements:
        style-background-image
style-section-properties-elements:
        style-columns
style-section-properties-elements:
        text-notes-configuration*
style-columns:
        (style:columns::(style-columns-attlist style-column-sep? style-column*))?
style-columns-attlist:
        fo:column-count::positiveInteger
style-columns-attlist:
        (fo:column-gap::length)?
style-column:
        style:column::style-column-attlist
style-column-attlist:
        style:rel-width::relativeLength
style-column-attlist:
        (fo:start-indent::length)?
style-column-attlist:
        (fo:end-indent::length)?
style-column-attlist:
        (fo:space-before::length)?
style-column-attlist:
        (fo:space-after::length)?
style-column-sep:
        style:column-sep::style-column-sep-attlist
style-column-sep-attlist:
        (style:style::("none" | "solid" | "dotted" | "dashed" | "dot-dashed"))?
style-column-sep-attlist:
        style:width::length
style-column-sep-attlist:
        (style:height::percent)?
style-column-sep-attlist:
        (style:vertical-align::("top" | "middle" | "bottom"))?
style-column-sep-attlist:
        (style:color::color)?
style-table-properties:
        style:table-properties::style-table-properties-content
style-table-properties-content:
        style-properties-content
style-table-properties-content-strict:
        style-table-properties-attlist style-table-properties-elements
style-table-properties-attlist:
        (style:width::positiveLength)? (style:rel-width::percent)?
style-table-properties-attlist:
        (table:align::("left" | "center" | "right" | "margins"))?
style-table-properties-attlist:
        common-horizontal-margin-attlist
style-table-properties-attlist:
        common-vertical-margin-attlist
style-table-properties-attlist:
        common-margin-attlist
style-table-properties-attlist:
        common-page-number-attlist
style-table-properties-attlist:
        common-break-attlist
style-table-properties-attlist:
        common-background-color-attlist
style-table-properties-attlist:
        common-shadow-attlist
style-table-properties-attlist:
        common-keep-with-next-attlist
style-table-properties-attlist:
        (style:may-break-between-rows::boolean)?
style-table-properties-attlist:
        (table:border-model::("collapsing" | "separating"))?
style-table-properties-attlist:
        common-writing-mode-attlist
style-table-properties-attlist:
        (table:display::boolean)?
style-table-properties-elements:
        style-background-image
style-table-column-properties:
        style:table-column-properties::style-table-column-properties-content
style-table-column-properties-content:
        style-properties-content
style-table-column-properties-content-strict:
        style-table-column-properties-attlist style-table-column-properties-elements
style-table-column-properties-elements:
        EPSILON
style-table-column-properties-attlist:
        (style:column-width::positiveLength)? (style:rel-column-width::relativeLength)?
style-table-column-properties-attlist:
        (style:use-optimal-column-width::boolean)?
style-table-column-properties-attlist:
        common-break-attlist
style-table-row-properties:
        style:table-row-properties::style-table-row-properties-content
style-table-row-properties-content:
        style-properties-content
style-table-row-properties-content-strict:
        style-table-row-properties-attlist style-table-row-properties-elements
style-table-row-properties-attlist:
        (style:row-height::positiveLength)? (style:min-row-height::nonNegativeLength)?
style-table-row-properties-attlist:
        (style:use-optimal-row-height::boolean)?
style-table-row-properties-attlist:
        common-background-color-attlist
style-table-row-properties-attlist:
        common-break-attlist
style-table-row-properties-attlist:
        (fo:keep-together::("auto" | "always"))?
style-table-row-properties-elements:
        style-background-image
style-table-cell-properties:
        style:table-cell-properties::style-table-cell-properties-content
style-table-cell-properties-content:
        style-properties-content
style-table-cell-properties-content-strict:
        style-table-cell-properties-attlist style-table-cell-properties-elements
style-table-cell-properties-attlist:
        (style:vertical-align::("top" | "middle" | "bottom" | "automatic"))?
style-table-cell-properties-attlist:
        (style:text-align-source::("fix" | "value-type"))?
style-table-cell-properties-attlist:
        common-style-direction-attlist
style-table-cell-properties-attlist:
        (style:glyph-orientation-vertical::("auto" | "0"))?
style-table-cell-properties-attlist:
        common-shadow-attlist
style-table-cell-properties-attlist:
        common-background-color-attlist
style-table-cell-properties-attlist:
        common-border-attlist
style-table-cell-properties-attlist:
        (style:diagonal-tl-br::string)? (style:diagonal-tl-br-widths::borderWidths)? (style:diagonal-bl-tr::string)? (style:diagonal-bl-tr-widths::borderWidths)?
style-table-cell-properties-attlist:
        common-border-line-width-attlist
style-table-cell-properties-attlist:
        common-padding-attlist
style-table-cell-properties-attlist:
        (fo:wrap-option::("no-wrap" | "wrap"))?
style-table-cell-properties-attlist:
        common-rotation-angle-attlist
style-table-cell-properties-attlist:
        (style:rotation-align::("none" | "bottom" | "top" | "center"))?
style-table-cell-properties-attlist:
        (style:cell-protect::("none" | "hidden-and-protected" | ("protected" | "formula-hidden")+))?
style-table-cell-properties-attlist:
        (style:print-content::boolean)?
style-table-cell-properties-attlist:
        (style:decimal-places::nonNegativeInteger)?
style-table-cell-properties-attlist:
        (style:repeat-content::boolean)?
style-table-cell-properties-attlist:
        (style:shrink-to-fit::boolean)?
common-style-direction-attlist:
        (style:direction::("ltr" | "ttb"))?
style-table-cell-properties-elements:
        style-background-image
common-rotation-angle-attlist:
        (style:rotation-angle::nonNegativeInteger)?
style-list-level-properties:
        style:list-level-properties::style-list-level-properties-content
style-list-level-properties-content:
        style-properties-content
style-list-level-properties-content-strict:
        style-list-level-properties-attlist style-list-level-properties-elements
style-list-level-properties-elements:
        EPSILON
style-list-level-properties-attlist:
        common-text-align
style-list-level-properties-attlist:
        (text:space-before::nonNegativeLength)?
style-list-level-properties-attlist:
        (text:min-label-width::nonNegativeLength)?
style-list-level-properties-attlist:
        (text:min-label-distance::nonNegativeLength)?
style-list-level-properties-attlist:
        (style:font-name::string)?
style-list-level-properties-attlist:
        (fo:width::positiveLength)? (fo:height::positiveLength)?
style-list-level-properties-attlist:
        common-vertical-rel-attlist common-vertical-pos-attlist
style-graphic-properties-attlist:
        (draw:stroke::("none" | "dash" | "solid"))?
style-graphic-properties-attlist:
        (draw:stroke-dash::styleNameRef)?
style-graphic-properties-attlist:
        (draw:stroke-dash-names::styleNameRefs)?
style-graphic-properties-attlist:
        (svg:stroke-width::length)?
style-graphic-properties-attlist:
        (svg:stroke-color::color)?
style-graphic-properties-attlist:
        (draw:marker-start::styleNameRef)?
style-graphic-properties-attlist:
        (draw:marker-end::styleNameRef)?
style-graphic-properties-attlist:
        (draw:marker-start-width::length)?
style-graphic-properties-attlist:
        (draw:marker-end-width::length)?
style-graphic-properties-attlist:
        (draw:marker-start-center::boolean)?
style-graphic-properties-attlist:
        (draw:marker-end-center::boolean)?
style-graphic-properties-attlist:
        (svg:stroke-opacity::(STR | percent))?
style-graphic-properties-attlist:
        (draw:stroke-linejoin::("miter" | "round" | "bevel" | "middle" | "none" | "inherit"))?
style-graphic-properties-attlist:
        (draw:symbol-color::color)?
style-graphic-properties-attlist:
        (text:animation::("none" | "scroll" | "alternate" | "slide"))?
style-graphic-properties-attlist:
        (text:animation-direction::("left" | "right" | "up" | "down"))?
style-graphic-properties-attlist:
        (text:animation-start-inside::boolean)?
style-graphic-properties-attlist:
        (text:animation-stop-inside::boolean)?
style-graphic-properties-attlist:
        (text:animation-repeat::nonNegativeInteger)?
style-graphic-properties-attlist:
        (text:animation-delay::duration)?
style-graphic-properties-attlist:
        (text:animation-steps::length)?
style-graphic-properties-attlist:
        (draw:auto-grow-width::boolean)? (draw:auto-grow-height::boolean)?
style-graphic-properties-attlist:
        (draw:fit-to-size::boolean)?
style-graphic-properties-attlist:
        (draw:fit-to-contour::boolean)?
style-graphic-properties-attlist:
        (draw:textarea-vertical-align::("top" | "middle" | "bottom" | "justify"))?
style-graphic-properties-attlist:
        (draw:textarea-horizontal-align::("left" | "center" | "right" | "justify"))?
style-graphic-properties-attlist:
        (fo:wrap-option::("no-wrap" | "wrap"))?
style-graphic-properties-attlist:
        (draw:color-mode::("greyscale" | "mono" | "watermark" | "standard"))?
style-graphic-properties-attlist:
        (draw:color-inversion::boolean)?
style-graphic-properties-attlist:
        (draw:luminance::percent)?
style-graphic-properties-attlist:
        (draw:contrast::percent)?
style-graphic-properties-attlist:
        (draw:gamma::percent)?
style-graphic-properties-attlist:
        (draw:red::percent)?
style-graphic-properties-attlist:
        (draw:green::percent)?
style-graphic-properties-attlist:
        (draw:blue::percent)?
style-graphic-properties-attlist:
        (draw:image-opacity::percent)?
style-graphic-properties-attlist:
        (draw:shadow::("visible" | "hidden"))?
style-graphic-properties-attlist:
        (draw:shadow-offset-x::length)? (draw:shadow-offset-y::length)?
style-graphic-properties-attlist:
        (draw:shadow-color::color)?
style-graphic-properties-attlist:
        (draw:shadow-opacity::percent)?
style-graphic-properties-attlist:
        (draw:start-line-spacing-horizontal::distance)? (draw:start-line-spacing-vertical::distance)?
style-graphic-properties-attlist:
        (draw:end-line-spacing-horizontal::distance)? (draw:end-line-spacing-vertical::distance)?
style-graphic-properties-attlist:
        (draw:line-distance::distance)?
style-graphic-properties-attlist:
        (draw:guide-overhang::length)?
style-graphic-properties-attlist:
        (draw:guide-distance::distance)?
style-graphic-properties-attlist:
        (draw:start-guide::length)?
style-graphic-properties-attlist:
        (draw:end-guide::length)?
style-graphic-properties-attlist:
        (draw:placing::("below" | "above"))?
style-graphic-properties-attlist:
        (draw:parallel::boolean)?
style-graphic-properties-attlist:
        (draw:measure-align::("automatic" | "left-outside" | "inside" | "right-outside"))? (draw:measure-vertical-align::("automatic" | "above" | "below" | "center"))?
style-graphic-properties-attlist:
        (draw:unit::("automatic" | "mm" | "cm" | "m" | "km" | "pt" | "pc" | "inch" | "ft" | "mi"))?
style-graphic-properties-attlist:
        (draw:show-unit::boolean)?
style-graphic-properties-attlist:
        (draw:decimal-places::nonNegativeInteger)?
style-graphic-properties-attlist:
        (draw:caption-type::("straight-line" | "angled-line" | "angled-connector-line"))?
style-graphic-properties-attlist:
        (draw:caption-angle-type::("fixed" | "free"))?
style-graphic-properties-attlist:
        (draw:caption-angle::nonNegativeInteger)?
style-graphic-properties-attlist:
        (draw:caption-gap::distance)?
style-graphic-properties-attlist:
        (draw:caption-escape-direction::("horizontal" | "vertical" | "auto"))?
style-graphic-properties-attlist:
        (draw:caption-escape::(length | percent))?
style-graphic-properties-attlist:
        (draw:caption-line-length::length)?
style-graphic-properties-attlist:
        (draw:caption-fit-line-length::boolean)?
style-graphic-properties-attlist:
        (dr3d:horizontal-segments::nonNegativeInteger)?
style-graphic-properties-attlist:
        (dr3d:vertical-segments::nonNegativeInteger)?
style-graphic-properties-attlist:
        (dr3d:edge-rounding::percent)?
style-graphic-properties-attlist:
        (dr3d:edge-rounding-mode::("correct" | "attractive"))?
style-graphic-properties-attlist:
        (dr3d:back-scale::percent)?
style-graphic-properties-attlist:
        (dr3d:depth::length)?
style-graphic-properties-attlist:
        (dr3d:backface-culling::("enabled" | "disabled"))?
style-graphic-properties-attlist:
        (dr3d:end-angle::nonNegativeInteger)?
style-graphic-properties-attlist:
        (dr3d:close-front::boolean)?
style-graphic-properties-attlist:
        (dr3d:close-back::boolean)?
style-graphic-properties-attlist:
        (dr3d:lighting-mode::("standard" | "double-sided"))?
style-graphic-properties-attlist:
        (dr3d:normals-kind::("object" | "flat" | "sphere"))?
style-graphic-properties-attlist:
        (dr3d:normals-direction::("normal" | "inverse"))?
style-graphic-properties-attlist:
        (dr3d:texture-generation-mode-x::("object" | "parallel" | "sphere"))? (dr3d:texture-generation-mode-y::("object" | "parallel" | "sphere"))?
style-graphic-properties-attlist:
        (dr3d:texture-kind::("luminance" | "intesity" | "color"))?
style-graphic-properties-attlist:
        (dr3d:texture-filter::("enabled" | "disabled"))?
style-graphic-properties-attlist:
        (dr3d:texture-mode::("replace" | "modulate" | "blend"))?
style-graphic-properties-attlist:
        (dr3d:ambient-color::color)? (dr3d:emissive-color::color)? (dr3d:specular-color::color)? (dr3d:diffuse-color::color)?
style-graphic-properties-attlist:
        (dr3d:shininess::percent)?
style-graphic-properties-attlist:
        (dr3d:shadow::("visible" | "hidden"))?
style-graphic-properties-attlist:
        common-draw-rel-size-attlist (fo:min-width::(length | percent))?
style-graphic-properties-attlist:
        (fo:min-height::(length | percent))?
style-graphic-properties-attlist:
        (fo:max-height::(length | percent))? (fo:max-width::(length | percent))?
style-graphic-properties-attlist:
        common-horizontal-margin-attlist
style-graphic-properties-attlist:
        common-vertical-margin-attlist
style-graphic-properties-attlist:
        common-margin-attlist
style-graphic-properties-attlist:
        (style:print-content::boolean)?
style-graphic-properties-attlist:
        (style:protect::("none" | ("content" | "position" | "size")+))?
style-graphic-properties-attlist:
        (style:horizontal-pos::("left" | "center" | "right" | "from-left" | "inside" | "outside" | "from-inside"))? (svg:x::coordinate)?
style-graphic-properties-attlist:
        (style:horizontal-rel::("page" | "page-content" | "page-start-margin" | "page-end-margin" | "frame" | "frame-content" | "frame-start-margin" | "frame-end-margin" | "paragraph" | "paragraph-content" | "paragraph-start-margin" | "paragraph-end-margin" | "char"))?
style-graphic-properties-attlist:
        common-vertical-pos-attlist
style-graphic-properties-attlist:
        common-vertical-rel-attlist
style-graphic-properties-attlist:
        common-text-anchor-attlist
style-graphic-properties-attlist:
        common-border-attlist
style-graphic-properties-attlist:
        common-border-line-width-attlist
style-graphic-properties-attlist:
        common-padding-attlist
style-graphic-properties-attlist:
        common-shadow-attlist
style-graphic-properties-attlist:
        common-background-color-attlist
style-graphic-properties-attlist:
        (style:editable::boolean)?
style-graphic-properties-attlist:
        (style:wrap::("none" | "left" | "right" | "parallel" | "dynamic" | "run-through" | "biggest"))?
style-graphic-properties-attlist:
        (style:wrap-dynamic-treshold::nonNegativeLength)?
style-graphic-properties-attlist:
        (style:number-wrapped-paragraphs::("no-limit" | positiveInteger))?
style-graphic-properties-attlist:
        (style:wrap-contour::boolean)?
style-graphic-properties-attlist:
        (style:wrap-contour-mode::("full" | "outside"))?
style-graphic-properties-attlist:
        (style:run-through::("foreground" | "background"))?
style-graphic-properties-attlist:
        (style:flow-with-text::boolean)?
style-graphic-properties-attlist:
        (style:overflow-behavior::("clip" | "auto-create-new-frame"))?
style-graphic-properties-attlist:
        (style:mirror::("none" | "vertical" | horizontal-mirror | ("vertical" horizontal-mirror) | (horizontal-mirror "vertical")))?
style-graphic-properties-attlist:
        (fo:clip::string)?
style-graphic-properties-attlist:
        (draw:wrap-influence-on-position::("iterative" | "once-concurrent" | "once-successive"))?
style-graphic-properties-attlist:
        (draw:frame-display-scrollbar::boolean)?
style-graphic-properties-attlist:
        (draw:frame-display-border::boolean)?
style-graphic-properties-attlist:
        (draw:frame-margin-horizontal::nonNegativePixelLength)? (draw:frame-margin-vertical::nonNegativePixelLength)?
style-graphic-properties-attlist:
        (draw:visible-area-left::nonNegativeLength)? (draw:visible-area-top::nonNegativeLength)? (draw:visible-area-width::positiveLength)? (draw:visible-area-height::positiveLength)?
style-graphic-properties-attlist:
        (draw:ole-draw-aspect::nonNegativeInteger)?
style-graphic-fill-properties-attlist:
        (draw:fill::("none" | "solid" | "bitmap" | "gradient" | "hatch"))?
style-graphic-fill-properties-attlist:
        (draw:fill-color::color)?
style-graphic-fill-properties-attlist:
        (draw:secondary-fill-color::color)?
style-graphic-fill-properties-attlist:
        (draw:fill-gradient-name::styleNameRef)?
style-graphic-fill-properties-attlist:
        (draw:gradient-step-count::nonNegativeInteger)?
style-graphic-fill-properties-attlist:
        (draw:fill-hatch-name::styleNameRef)?
style-graphic-fill-properties-attlist:
        (draw:fill-hatch-solid::boolean)?
style-graphic-fill-properties-attlist:
        (draw:fill-image-name::styleNameRef)?
style-graphic-fill-properties-attlist:
        (style:repeat::("no-repeat" | "repeat" | "stretch"))?
style-graphic-fill-properties-attlist:
        (draw:fill-image-width::(length | percent))? (draw:fill-image-height::(length | percent))?
style-graphic-fill-properties-attlist:
        (draw:fill-image-ref-point-x::percent)? (draw:fill-image-ref-point-y::percent)? (draw:fill-image-ref-point::("top-left" | "top" | "top-right" | "left" | "center" | "right" | "bottom-left" | "bottom" | "bottom-right"))?
style-graphic-fill-properties-attlist:
        (draw:tile-repeat-offset::STR)?
style-graphic-fill-properties-attlist:
        (draw:opacity::percent)?
style-graphic-fill-properties-attlist:
        (draw:opacity-name::styleNameRef)?
style-graphic-fill-properties-attlist:
        (svg:fill-rule::("nonzero" | "evenodd"))?
style-graphic-properties-elements:
        text-list-style?
style-graphic-properties-elements:
        style-background-image
style-graphic-properties-elements:
        style-columns
common-vertical-pos-attlist:
        (style:vertical-pos::("top" | "middle" | "bottom" | "from-top" | "below"))? (svg:y::coordinate)?
common-vertical-rel-attlist:
        (style:vertical-rel::("page" | "page-content" | "frame" | "frame-content" | "paragraph" | "paragraph-content" | "char" | "line" | "baseline" | "text"))?
horizontal-mirror:
        "horizontal"
        "horizontal-on-odd"
        "horizontal-on-even"
nonNegativePixelLength:
        STR
style-chart-properties:
        style:chart-properties::style-chart-properties-content
style-chart-properties-content:
        style-properties-content
style-chart-properties-content-strict:
        style-chart-properties-attlist style-chart-properties-elements
style-chart-properties-elements:
        EPSILON
style-chart-properties-attlist:
        (chart:scale-text::boolean)?
style-chart-properties-attlist:
        (chart:three-dimensional::boolean)?
style-chart-properties-attlist:
        (chart:deep::boolean)?
style-chart-properties-attlist:
        chart:symbol-type::"none"
        chart:symbol-type::"automatic"
        chart:symbol-type::"named-symbol" chart:symbol-name::("square" | "diamond" | "arrow-down" | "arrow-up" | "arrow-right" | "arrow-left" | "bow-tie" | "hourglass" | "circle" | "star" | "x" | "plus" | "asterisk" | "horizontal-bar" | "vertical-bar")
        chart:symbol-type::"image" chart:symbol-image::xlink:href::anyURI
        EPSILON
style-chart-properties-attlist:
        (chart:symbol-width::nonNegativeLength)? (chart:symbol-height::nonNegativeLength)?
style-chart-properties-attlist:
        (chart:vertical::boolean)?
style-chart-properties-attlist:
        (chart:connect-bars::boolean)?
style-chart-properties-attlist:
        (chart:gap-width::integer)? (chart:overlap::integer)?
style-chart-properties-attlist:
        (chart:japanese-candle-stick::boolean)?
style-chart-properties-attlist:
        (chart:interpolation::("none" | "cubic-spline" | "b-spline"))? (chart:spline-order::positiveInteger)? (chart:spline-resolution::positiveInteger)?
style-chart-properties-attlist:
        (chart:pie-offset::nonNegativeInteger)?
style-chart-properties-attlist:
        (chart:lines::boolean)?
style-chart-properties-attlist:
        (chart:solid-type::("cuboid" | "cylinder" | "cone" | "pyramid"))?
style-chart-properties-attlist:
        (chart:stacked::boolean)? (chart:percentage::boolean)?
style-chart-properties-attlist:
        (chart:link-data-style-to-source::boolean)?
style-chart-properties-attlist:
        (chart:visible::boolean)?
style-chart-properties-attlist:
        (chart:logarithmic::boolean)?
style-chart-properties-attlist:
        (chart:maximum::double)? (chart:minimum::double)? (chart:origin::double)? (chart:interval-major::double)? (chart:interval-minor::positiveInteger)?
style-chart-properties-attlist:
        (chart:tick-marks-major-inner::boolean)? (chart:tick-marks-major-outer::boolean)? (chart:tick-marks-minor-inner::boolean)? (chart:tick-marks-minor-outer::boolean)?
style-chart-properties-attlist:
        (chart:display-label::boolean)? (chart:text-overlap::boolean)? (text:line-break::boolean)? (chart:label-arrangement::("side-by-side" | "stagger-even" | "stagger-odd"))?
style-chart-properties-attlist:
        common-style-direction-attlist
style-chart-properties-attlist:
        common-rotation-angle-attlist
style-chart-properties-attlist:
        (chart:data-label-number::("none" | "value" | "percentage"))?
style-chart-properties-attlist:
        (chart:data-label-text::boolean)?
style-chart-properties-attlist:
        (chart:data-label-symbol::boolean)?
style-chart-properties-attlist:
        (chart:mean-value::boolean)?
style-chart-properties-attlist:
        (chart:error-category::("none" | "variance" | "standard-deviation" | "percentage" | "error-margin" | "constant"))?
style-chart-properties-attlist:
        (chart:error-percentage::double)?
style-chart-properties-attlist:
        (chart:error-margin::double)?
style-chart-properties-attlist:
        (chart:error-lower-limit::double)? (chart:error-upper-limit::double)?
style-chart-properties-attlist:
        (chart:error-upper-indicator::boolean)? (chart:error-lower-indicator::boolean)?
style-chart-properties-attlist:
        (chart:series-source::("columns" | "rows"))?
style-chart-properties-attlist:
        (chart:regression-type::("none" | "linear" | "logarithmic" | "exponential" | "power"))?
style-drawing-page-properties-attlist:
        (presentation:transition-type::("manual" | "automatic" | "semi-automatic"))?
style-drawing-page-properties-attlist:
        (presentation:transition-style::("none" | "fade-from-left" | "fade-from-top" | "fade-from-right" | "fade-from-bottom" | "fade-from-upperleft" | "fade-from-upperright" | "fade-from-lowerleft" | "fade-from-lowerright" | "move-from-left" | "move-from-top" | "move-from-right" | "move-from-bottom" | "move-from-upperleft" | "move-from-upperright" | "move-from-lowerleft" | "move-from-lowerright" | "uncover-to-left" | "uncover-to-top" | "uncover-to-right" | "uncover-to-bottom" | "uncover-to-upperleft" | "uncover-to-upperright" | "uncover-to-lowerleft" | "uncover-to-lowerright" | "fade-to-center" | "fade-from-center" | "vertical-stripes" | "horizontal-stripes" | "clockwise" | "counterclockwise" | "open-vertical" | "open-horizontal" | "close-vertical" | "close-horizontal" | "wavyline-from-left" | "wavyline-from-top" | "wavyline-from-right" | "wavyline-from-bottom" | "spiralin-left" | "spiralin-right" | "spiralout-left" | "spiralout-right" | "roll-from-top" | "roll-from-left" | "roll-from-right" | "roll-from-bottom" | "stretch-from-left" | "stretch-from-top" | "stretch-from-right" | "stretch-from-bottom" | "vertical-lines" | "horizontal-lines" | "dissolve" | "random" | "vertical-checkerboard" | "horizontal-checkerboard" | "interlocking-horizontal-left" | "interlocking-horizontal-right" | "interlocking-vertical-top" | "interlocking-vertical-bottom" | "fly-away" | "open" | "close" | "melt"))?
style-drawing-page-properties-attlist:
        (presentation:transition-speed::presentationSpeeds)?
style-drawing-page-properties-attlist:
        (smil:subtype::string)?
style-drawing-page-properties-attlist:
        (smil:direction::("forward" | "reverse"))?
style-drawing-page-properties-attlist:
        (smil:fadeColor::("forward" | "reverse"))?
style-drawing-page-properties-attlist:
        (presentation:duration::duration)?
style-drawing-page-properties-attlist:
        (presentation:visibility::("visible" | "hidden"))?
style-drawing-page-properties-attlist:
        (draw:background-size::("full" | "border"))?
style-drawing-page-properties-attlist:
        (presentation:background-objects-visible::boolean)?
style-drawing-page-properties-attlist:
        (presentation:background-visible::boolean)?
style-drawing-page-properties-attlist:
        (presentation:display-header::boolean)?
style-drawing-page-properties-attlist:
        (presentation:display-footer::boolean)?
style-drawing-page-properties-attlist:
        (presentation:display-page-number::boolean)?
style-drawing-page-properties-attlist:
        (presentation:display-date-time::boolean)?
style-drawing-page-properties-attlist :
        (smil:type::string)?
style-drawing-page-properties-elements:
        presentation-sound?
string:
        STR
date:
        STR
time:
        STR
dateTime:
        STR
duration:
        STR
integer:
        INT
nonNegativeInteger:
        INT
positiveInteger:
        INT
double:
        STR
anyURI:
        STR
base64Binary:
        STR
ID:
        STR
IDREF:
        STR
boolean:
        "true"
        "false"
dateOrDateTime:
        STR
timeOrDateTime:
        STR
language:
        STR
countryCode:
        STR
languageCode:
        STR
character:
        STR
length:
        STR
nonNegativeLength:
        STR
positiveLength:
        STR
percent:
        STR
relativeLength:
        STR
coordinate:
        length
distance:
        length
color:
        STR
styleName:
        STR
styleNameRef:
        STR
        EPSILON
styleNameRefs:
        STR*
variableName:
        STR
formula:
        STR
targetFrameName:
        "_self"
        "_blank"
        "_parent"
        "_top"
        string
valueType:
        "float"
        "time"
        "date"
        "percentage"
        "currency"
        "boolean"
        "string"
points:
        STR
pathData:
        STR
vector3D:
        STR
namespacedToken:
        STR
anyAttListOrElements:
        STR* anyElements
anyElements:
        (STR? anyAttListOrElements STR?)*
