<?xml version="1.0" encoding="UTF-8"?>

<xns1:grammar xmlns:xns1="http://planet-sl.org/bgf">
  <root>program</root>
  <xns1:production>
    <nonterminal>comment_NL</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>comment</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>NL</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>null_declaration</nonterminal>
    <xns1:expression>
      <nonterminal>semi</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>local_label</nonterminal>
    <xns1:expression>
      <terminal>__label__</terminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>ptr_qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>restrict_qualifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cv_qualifier</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>restrict_qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__restrict</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>restrict__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>restrict</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__restrict__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>designator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>array_designator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>struct_or_union_designator</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>array_designator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>postfix_extension</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>[</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>SP</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>...</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>SP</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>constant_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>]</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>postfix_extension</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>struct_or_union_designator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>.</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <star>
	    <xns1:expression>
	      <nonterminal>postfix_extension</nonterminal>
	    </xns1:expression>
	  </star>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>designator_assignment</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>extension_specifier</nonterminal>
    <xns1:expression>
      <terminal>__extension__</terminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>bit_qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>long</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>short</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>signed</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>unsigned</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__signed__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__signed</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>inline_qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__inline</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__inline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>inline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>inline</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attributes_or_asm</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>attribute_spec</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>asm_spec</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_spec</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>__attribute__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>('(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <sepliststar>
	    <xns1:expression>
	      <nonterminal>attribute_extension</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	  </sepliststar>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)')</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_extension</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_alias</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_aligned</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_aligned</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_aligned</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>alignof_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_always_inline</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_cdecl</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_cleanup</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_id</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_const</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_constructor</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_deprecated</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_destructor</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_dllexport</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_dllimport</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_eightbit</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_exception</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>exception_function</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <sepliststar>
		<xns1:expression>
		  <nonterminal>exception_arg</nonterminal>
		</xns1:expression>
		<xns1:expression>
		  <terminal>,</terminal>
		</xns1:expression>
	      </sepliststar>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_far</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_funvector</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_format</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>format_archetype</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_format_arg</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_interrupt</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_interrupt</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_interrupt_handler</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_interrupt_handler</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_longcall</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_long_call</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_malloc</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_may_alias</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_mode</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_id</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_model</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>attribute_model_name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_naked</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_near</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_no_check_mem</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_no_instrument</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_nocommon</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_noinline</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_nonnull</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_nonnull</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <plus>
		<xns1:expression>
		  <nonterminal>tagged_attribute_number</nonterminal>
		</xns1:expression>
	      </plus>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_noreturn</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_nothrow</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_packed</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_pure</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_regparm</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_section</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_shared</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_short_call</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_signal</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_sp_switch</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_stdcall</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_tiny</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_tls_model</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tls_model_type</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_trans_union</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_trap_exit</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_used</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_unused</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_vector_size</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>tagged_attribute_number</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>attribute_visibility</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>visibility_type</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>attribute_weak</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>tagged_attribute_id</nonterminal>
    <xns1:expression>
      <nonterminal>id</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>tagged_attribute_number</nonterminal>
    <xns1:expression>
      <nonterminal>number</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_near</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__near__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__near</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>near__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>near</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_far</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__far__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__far</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>far__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>far</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_visibility</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__visibility__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__visibility</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>visibility__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>visibility</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>visibility_type</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>"default"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"hidden"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"protected"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"internal"</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_nonnull</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__nonnull__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__nonnull</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>nonnull__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>nonnull</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_nothrow</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__nothrow__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__nothrow</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>nothrow__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>nothrow</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_may_alias</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__may_alias__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__may_alias</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>may_alias__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>may_alias</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_tls_model</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__tls_model__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__tls_model</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>tls_model__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>tls_model</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>tls_model_type</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>"global-dynamic"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"local-dynamic"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"initial-exec"</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>"local-exec"</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_cleanup</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__cleanup__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__cleanup</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>cleanup__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>cleanup</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_dllexport</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__dllexport__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__dllexport</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>dllexport__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>dllexport</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_used</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__used__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__used</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>used__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>used</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_always_inline</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__always_inline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__always_inline</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>always_inline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>always_inline</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_noinline</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__noinline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__noinline</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>noinline__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>noinline</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_vector_size</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__vector_size__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__vector_size</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>vector_size__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>vector_size</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_deprecated</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__deprecated__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__deprecated</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>deprecated__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>deprecated</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_mode</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__mode__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__mode</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>mode__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>mode</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_format</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__format__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__format</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>format__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>format</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_format_arg</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__format_arg__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__format_arg</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>format_arg__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>format_arg</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_aligned</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__aligned__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__aligned</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>aligned__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>aligned</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_weak</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>weak</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__weak__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__weak</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>weak__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_alias</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>alias</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__alias__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__alias</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>alias__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_no_check_mem</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>no_check_memory_usage</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__no_check_memory_usage__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__no_check_memory_usage</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>no_check_memory_usage__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_regparm</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>regparm</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__regparm__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__regparm</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>regparm__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_stdcall</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>stdcall</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__stdcall__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__stdcall</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>stdcall__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_cdecl</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>cdecl</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__cdecl__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__cdecl</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>cdecl__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_longcall</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>longcall</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__longcall__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__longcall</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>longcall__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_long_call</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>long_call</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__long_call__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__long_call</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>long_call__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_short_call</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>short_call</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__short_call__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__short_call</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>short_call__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_dllimport</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>dllimport</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__dllimport__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__dllimport</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>dllimport__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_exception</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>exception</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__exception__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__exception</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>exception__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exception_function</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>stringlit</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>stringlit</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>tagged_attribute_id</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exception_arg</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>stringlit</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>stringlit</nonterminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>tagged_attribute_id</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_funvector</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>function_vector</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__function_vector__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__function_vector</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>function_vector__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_interrupt</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>interrupt</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__interrupt__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__interrupt</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>interrupt__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_interrupt_handler</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>interrupt_handler</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__interrupt_handler__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__interrupt_handler</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>interrupt_handler__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_sp_switch</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>sp_switch</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__sp_switch__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__sp_switch</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>sp_switch__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_trap_exit</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>trap_exit</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__trap_exit__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__trap_exit</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>trap_exit__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_eightbit</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>eightbit_data</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__eightbit_data__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__eightbit_data</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>eightbit_data__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_tiny</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>tiny_data</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__tiny_data__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__tiny_data</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>tiny_data__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_signal</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>signal</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__signal__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__signal</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>signal__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_naked</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>naked</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__naked__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__naked</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>naked__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_model</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>model</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__model__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__model</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>model__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_model_name</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>small</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__small__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__small</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>small__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>medium</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__medium__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__medium</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>medium__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>large</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__large__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__large</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>large__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_nocommon</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>nocommon</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__nocommon__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>nocommon__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__nocommon</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_shared</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>shared</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__shared__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__shared</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>shared__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_malloc</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>malloc</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__malloc__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__malloc</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>malloc__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>format_archetype</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>printf</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__printf__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__printf</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>printf__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>scanf</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__scanf__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__scanf</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>scanf__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>strftime</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__strftime__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__strftime</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>strftime__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>strfmon</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__strfmon__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__strfmon</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>strfmon__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_noreturn</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__noreturn__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__noreturn</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>noreturn__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>noreturn</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_const</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__const__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__const</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>const__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>const</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_pure</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__pure__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__pure</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>pure__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>pure</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_trans_union</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__transparent_union__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__transparent_union</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>transparent_union__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>transparent_union</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_unused</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__unused__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__unused</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>unused__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>unused</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_packed</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__packed__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__packed</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>packed__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>packed</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_no_instrument</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>no_instrument_function</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__no_instrument_function__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__no_instrument_function</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>no_instrument_function__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_section</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>section</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__section__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__section</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>section__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_constructor</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>constructor</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__constructor__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__constructor</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>constructor__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>attribute_destructor</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>destructor</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__destructor__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__destructor</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>destructor__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>asm_spec</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>semi</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_spec</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <plus>
	    <xns1:expression>
	      <nonterminal>asm_or_cv</nonterminal>
	    </xns1:expression>
	  </plus>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>asm_template</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>asm_output_operands</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>asm_input_operands</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>asm_clobbered_registers</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_or_cv</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__asm__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>asm</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>asm__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__asm</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cv_qualifier</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_template</nonterminal>
    <xns1:expression>
      <nonterminal>string</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_output_operands</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <sepliststar>
	    <xns1:expression>
	      <nonterminal>asm_operand</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	  </sepliststar>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_input_operands</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <sepliststar>
	    <xns1:expression>
	      <nonterminal>asm_operand</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	  </sepliststar>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_operand</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>string</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm_clobbered_registers</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <sepliststar>
	    <xns1:expression>
	      <nonterminal>string</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	  </sepliststar>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound_statement_expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound_statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound_literal</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>struct_or_union_specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <sepliststar>
		<xns1:expression>
		  <nonterminal>designated_initializer</nonterminal>
		</xns1:expression>
		<xns1:expression>
		  <terminal>,</terminal>
		</xns1:expression>
	      </sepliststar>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <terminal>,</terminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>compound_literal_array_type</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>{</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <sepliststar>
		<xns1:expression>
		  <nonterminal>designated_initializer</nonterminal>
		</xns1:expression>
		<xns1:expression>
		  <terminal>,</terminal>
		</xns1:expression>
	      </sepliststar>
	    </xns1:expression>
	    <xns1:expression>
	      <optional>
		<xns1:expression>
		  <terminal>,</terminal>
		</xns1:expression>
	      </optional>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>}</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>compound_literal</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound_literal_array_type</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type_specifiers</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound_literal_array_declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound_literal_array_declarator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>ptr_operator</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>array_declarator_extension</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>compound_literal_array_declarator</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <star>
		<xns1:expression>
		  <nonterminal>array_declarator_extension</nonterminal>
		</xns1:expression>
	      </star>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>typeof_expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>typeof_specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>simple_type_name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <nonterminal>typeof_specifier</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>typeof_specifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>__typeof</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typeof</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>__typeof__</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typeof__</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>complex_specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>_Complex</terminal>
	</xns1:expression>
	<xns1:expression>
	  <star>
	    <xns1:expression>
	      <nonterminal>simple_type_or_qualifier</nonterminal>
	    </xns1:expression>
	  </star>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>simple_type_or_qualifier</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>simple_type_name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type_qualifier</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>gnu_long_int</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>gnu_long_int_string</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>gnu_long_int_charlit</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>gnu_long_int_string</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>L</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>SPOFF</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>string</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>SPON</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>gnu_long_int_charlit</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>L</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>SPOFF</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>charlit</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>SPON</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>hexfloat</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>extension_specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>hex</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>argument_expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <nonterminal>assignment_expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type_name</nonterminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>alignof_expression</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>__alignof__</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>unary_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>__alignof</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>unary_expression</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>__alignof__</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type_name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>__alignof</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>(</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <nonterminal>type_name</nonterminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>)</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
</xns1:grammar>