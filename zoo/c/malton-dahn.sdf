module Main

exports
 context-free start-symbols program
  sorts
        C-compilation-unit Constant String Expression Constant-expression Assignment-expression Assignment-operation Assignment-operator Conditional-expression Conditional-operation Binary-expression Binary-operator Unary-expression Sizeof-expression Unary-operator Postfix-expression Reference Reference-id Reference-expression Unannotated-reference-base Nonreference Nonreferential-primary Postfix-extension Declaration Declaration-body Decl-specifiers Struct-or-union-specifier Tagged-reference-id Member-declaration Member-declarator Bitfieldsize Decl-qualifier Sc-specifier Type-specifier Type-qualifier Simple-type-name Type-id Struct-or-union Enum-specifier Enumerator Enumerator-value Init-declarator Declarator Base-declarator Declarator-extension Function-declarator-extension Array-declarator-extension Ptr-operator Cv-qualifier Type-name Type-specifiers Abstract-declarator Argument-declaration-list Argument-declaration Argument-declarator Initialization Initializer Statement Label Label-id Unlabeled-statement Null-statement Compound-statement Compound-statement-body Expression-statement If-statement Switch-statement Else-statement While-statement Do-statement For-statement Jump-statement Declaration-or-function-definition Function-definition KR-parameter-decls Semi Program Preprocessor Filepath File-id Slash-fileid Slash Comment-NL Null-declaration Local-label Ptr-qualifier Restrict-qualifier Designator Array-designator Struct-or-union-designator Designator-assignment Extension-specifier Bit-qualifier Inline-qualifier Attributes-or-asm Attribute-spec Attribute-extension Tagged-attribute-id Tagged-attribute-number Attribute-near Attribute-far Attribute-visibility Visibility-type Attribute-nonnull Attribute-nothrow Attribute-may-alias Attribute-tls-model Tls-model-type Attribute-cleanup Attribute-dllexport Attribute-used Attribute-always-inline Attribute-noinline Attribute-vector-size Attribute-deprecated Attribute-mode Attribute-format Attribute-format-arg Attribute-aligned Attribute-weak Attribute-alias Attribute-no-check-mem Attribute-regparm Attribute-stdcall Attribute-cdecl Attribute-longcall Attribute-long-call Attribute-short-call Attribute-dllimport Attribute-exception Exception-function Exception-arg Attribute-funvector Attribute-interrupt Attribute-interrupt-handler Attribute-sp-switch Attribute-trap-exit Attribute-eightbit Attribute-tiny Attribute-signal Attribute-naked Attribute-model Attribute-model-name Attribute-nocommon Attribute-shared Attribute-malloc Format-archetype Attribute-noreturn Attribute-const Attribute-pure Attribute-trans-union Attribute-unused Attribute-packed Attribute-no-instrument Attribute-section Attribute-constructor Attribute-destructor Asm-statement Asm-spec Asm-or-cv Asm-template Asm-output-operands Asm-input-operands Asm-operand Asm-clobbered-registers Compound-statement-expression Compound-literal Compound-literal-array-type Compound-literal-array-declarator Typeof-expression Typeof-specifier Complex-specifier Simple-type-or-qualifier Gnu-long-int Gnu-long-int-string Gnu-long-int-charlit Hexfloat Argument-expression Alignof-expression Designated-initializer 
  context-free syntax
        Declaration-or-function-definition* -> C-compilation-unit

        Number -> Constant
        Float -> Constant
        Hex -> Constant
        Long -> Constant
        SP Dotfloat -> Constant
        Charlit -> Constant
        String -> Constant

        Gnu-long-int -> Constant
        Gnu-long-int-string+ -> Constant
        Hexfloat -> Constant

        Stringlit+ -> String

        Assignment-expression+ -> Expression

        Comment-NL* "..." -> Expression

        Conditional-expression -> Constant-expression

        Restrict-qualifier -> Constant-expression

        Conditional-expression Assignment-operation? -> Assignment-expression

        Conditional-expression -> Assignment-expression
        Conditional-expression Assignment-operation -> Assignment-expression

        Assignment-operator Assignment-expression -> Assignment-operation

        "=" -> Assignment-operator
        "*=" -> Assignment-operator
        "/=" -> Assignment-operator
        "%=" -> Assignment-operator
        "+=" -> Assignment-operator
        "-=" -> Assignment-operator
        ">>=" -> Assignment-operator
        "<<=" -> Assignment-operator
        "&=" -> Assignment-operator
        "^=" -> Assignment-operator
        "|=" -> Assignment-operator

        Binary-expression Conditional-operation? -> Conditional-expression

        Binary-expression Conditional-operation* -> Conditional-expression

        "?" Expression ":" Conditional-expression -> Conditional-operation

        "?" Expression? ":" Binary-expression -> Conditional-operation

        Unary-expression -> Binary-expression
        Binary-expression Binary-operator Unary-expression -> Binary-expression

        "+" -> Binary-operator
        "-" -> Binary-operator
        "*" -> Binary-operator
        "/" -> Binary-operator
        "%" -> Binary-operator
        "==" -> Binary-operator
        "!=" -> Binary-operator
        "<" -> Binary-operator
        ">" -> Binary-operator
        "<=" -> Binary-operator
        ">=" -> Binary-operator
        "||" -> Binary-operator
        "&&" -> Binary-operator
        "|" -> Binary-operator
        "^" -> Binary-operator
        "&" -> Binary-operator
        "<<" -> Binary-operator
        ">>" -> Binary-operator

        Postfix-expression -> Unary-expression
        Unary-operator SPOFF Unary-expression SPON -> Unary-expression
        "(" Type-name ")" Unary-expression -> Unary-expression
        Sizeof-expression -> Unary-expression

        Alignof-expression -> Unary-expression

        "sizeof" "(" Type-name ")" -> Sizeof-expression
        "sizeof" Unary-expression -> Sizeof-expression

        "sizeof" Unary-expression -> Sizeof-expression
        "sizeof" "(" Type-name ")" -> Sizeof-expression

        "*" -> Unary-operator
        "&" -> Unary-operator
        "+" -> Unary-operator
        "-" -> Unary-operator
        "!" -> Unary-operator
        "~" -> Unary-operator
        "++" -> Unary-operator
        "--" -> Unary-operator

        "&&" -> Unary-operator

        Reference -> Postfix-expression
        Nonreference -> Postfix-expression

        Reference-id -> Reference
        Reference-expression -> Reference

        Id -> Reference-id

        Unannotated-reference-base Postfix-extension* -> Reference-expression

        Reference-id -> Unannotated-reference-base
        Nonreferential-primary -> Unannotated-reference-base

        Nonreferential-primary Postfix-extension* -> Nonreference

        Constant -> Nonreferential-primary
        String -> Nonreferential-primary
        "(" Expression ")" -> Nonreferential-primary

        Constant -> Nonreferential-primary
        String -> Nonreferential-primary
        "(" Expression ")" -> Nonreferential-primary
        Compound-statement-expression -> Nonreferential-primary
        Compound-literal -> Nonreferential-primary
        Extension-specifier Compound-statement-expression -> Nonreferential-primary
        Extension-specifier "(" Expression ")" -> Nonreferential-primary

        "[" Expression "]" -> Postfix-extension
        "(" Expression? ")" -> Postfix-extension
        "." Id -> Postfix-extension
        "->" Id -> Postfix-extension
        "++" -> Postfix-extension
        "--" -> Postfix-extension

        "[" Expression "]" -> Postfix-extension
        "(" 
		Argument-expression
		","
	       ")" -> Postfix-extension
        "." Id -> Postfix-extension
        "->" Id -> Postfix-extension
        "++" -> Postfix-extension
        "--" -> Postfix-extension

        Declaration-body Semi -> Declaration
        Preprocessor -> Declaration

        Comment-NL -> Declaration

        Null-declaration -> Declaration
        Declaration-body Semi -> Declaration
        Preprocessor -> Declaration

        Decl-specifiers Init-declarator+ -> Declaration-body
        Enum-specifier -> Declaration-body
        Struct-or-union-specifier -> Declaration-body

        Decl-specifiers Init-declarator+ -> Declaration-body
        Decl-qualifier* Struct-or-union-specifier -> Declaration-body
        Decl-qualifier* Enum-specifier Attribute-spec* -> Declaration-body
        Local-label Declarator+ -> Declaration-body
        Asm-spec -> Declaration-body

        Decl-qualifier* Type-specifier? Decl-qualifier* -> Decl-specifiers

        Decl-qualifier* Type-specifier Decl-qualifier* -> Decl-specifiers
        Decl-qualifier* -> Decl-specifiers

        Struct-or-union Tagged-reference-id? "{" IN NL Member-declaration* EX "}" -> Struct-or-union-specifier
        Struct-or-union Tagged-reference-id -> Struct-or-union-specifier

        Struct-or-union Attribute-spec* Tagged-reference-id? "{" IN NL Member-declaration* EX "}" Attribute-spec* -> Struct-or-union-specifier
        Struct-or-union Attribute-spec* Tagged-reference-id -> Struct-or-union-specifier

        Reference-id -> Tagged-reference-id

        Decl-specifiers Member-declarator+ Semi -> Member-declaration
        Preprocessor -> Member-declaration

        Comment-NL -> Member-declaration

        Decl-specifiers Member-declarator+ Semi -> Member-declaration
        Decl-qualifier* Struct-or-union-specifier Semi -> Member-declaration
        Semi -> Member-declaration
        Preprocessor -> Member-declaration

        Declarator Bitfieldsize? -> Member-declarator
        Bitfieldsize -> Member-declarator

        Declarator Bitfieldsize? Attributes-or-asm* -> Member-declarator
        Bitfieldsize -> Member-declarator

        ":" Constant-expression -> Bitfieldsize

        Sc-specifier -> Decl-qualifier
        Cv-qualifier -> Decl-qualifier
        Type-qualifier -> Decl-qualifier

        Sc-specifier -> Decl-qualifier
        Type-qualifier -> Decl-qualifier
        Attribute-spec -> Decl-qualifier
        Extension-specifier -> Decl-qualifier

        "auto" -> Sc-specifier
        "register" -> Sc-specifier
        "static" -> Sc-specifier
        "extern" -> Sc-specifier
        "typedef" -> Sc-specifier

        Simple-type-name -> Type-specifier
        Enum-specifier -> Type-specifier
        Struct-or-union-specifier -> Type-specifier

        Typeof-expression -> Type-specifier
        Complex-specifier -> Type-specifier

        "long" -> Type-qualifier
        "short" -> Type-qualifier
        "signed" -> Type-qualifier
        "unsigned" -> Type-qualifier

        Bit-qualifier -> Type-qualifier
        Inline-qualifier -> Type-qualifier
        Cv-qualifier -> Type-qualifier
        Restrict-qualifier -> Type-qualifier

        "char" -> Simple-type-name
        "int" -> Simple-type-name
        "void" -> Simple-type-name
        "float" -> Simple-type-name
        "double" -> Simple-type-name
        Type-id -> Simple-type-name

        Reference-id -> Type-id

        "struct" -> Struct-or-union
        "union" -> Struct-or-union

        "enum" Tagged-reference-id? "{" 
		Enumerator
		","
	       "}" -> Enum-specifier
        "enum" Tagged-reference-id -> Enum-specifier

        "enum" Tagged-reference-id -> Enum-specifier
        "enum" Tagged-reference-id? "{" 
		Enumerator
		","
	       ","? "}" -> Enum-specifier

        Reference-id Enumerator-value? -> Enumerator

        "=" Constant-expression -> Enumerator-value

        Declarator Initialization? -> Init-declarator

        Declarator Initialization? Attributes-or-asm* -> Init-declarator

        Ptr-operator* Base-declarator SPON Declarator-extension* -> Declarator

        Attribute-spec* Ptr-operator* Base-declarator Declarator-extension* Attribute-spec* -> Declarator

        Reference-id -> Base-declarator
        "(" Declarator ")" -> Base-declarator

        Attribute-spec* Reference-id -> Base-declarator
        Attribute-spec* "(" Declarator ")" -> Base-declarator

        Function-declarator-extension -> Declarator-extension
        Array-declarator-extension -> Declarator-extension

        "(" Argument-declaration-list ")" Cv-qualifier* -> Function-declarator-extension

        "[" Constant-expression? "]" -> Array-declarator-extension

        "*" Cv-qualifier* SPOFF -> Ptr-operator

        "*" Ptr-qualifier* -> Ptr-operator

        "const" -> Cv-qualifier
        "volatile" -> Cv-qualifier

        "const" -> Cv-qualifier
        "volatile" -> Cv-qualifier
        "__const" -> Cv-qualifier
        "__const__" -> Cv-qualifier
        "const__" -> Cv-qualifier
        "__volatile__" -> Cv-qualifier
        "__volatile" -> Cv-qualifier
        "volatile__" -> Cv-qualifier

        Type-specifiers Abstract-declarator? -> Type-name

        Type-qualifier+ Type-specifier? Type-qualifier* -> Type-specifiers
        Type-specifier Type-qualifier* -> Type-specifiers

        Type-qualifier* Type-specifier Type-qualifier* -> Type-specifiers
        Type-qualifier* -> Type-specifiers

        Ptr-operator+ Declarator-extension* -> Abstract-declarator
        "(" Abstract-declarator ")" Declarator-extension* -> Abstract-declarator

        Ptr-operator+ Declarator-extension* -> Abstract-declarator
        Array-declarator-extension* -> Abstract-declarator
        "(" Abstract-declarator ")" Declarator-extension* -> Abstract-declarator

        
	Argument-declaration
	","
       -> Argument-declaration-list

        "..." Comment-NL* -> Argument-declaration-list

        Decl-specifiers Argument-declarator? -> Argument-declaration
        "..." -> Argument-declaration

        Comment-NL* "..." -> Argument-declaration

        "..." Comment-NL* -> Argument-declaration

        Declarator -> Argument-declarator
        Abstract-declarator -> Argument-declarator

        "=" Initializer -> Initialization
        "(" Constant-expression ")" -> Initialization

        Comment-NL* "..." -> Initialization

        Expression -> Initializer
        NL "{" IN 
		Initializer
		","
	       ","? EX "}" -> Initializer

        Comment-NL* "..." -> Initializer

        Assignment-expression -> Initializer
        NL "{" IN 
		Designated-initializer
		","
	       ","? EX "}" -> Initializer

        Label* Unlabeled-statement -> Statement
        Preprocessor -> Statement

        Comment-NL -> Statement

        Label -> Statement

        Label-id ":" -> Label
        EX SP SP "case" Constant-expression ":" IN NL -> Label
        EX SP SP "default" ":" IN NL -> Label

        Label-id ":" Attribute-spec* -> Label
        EX SP SP "case" Constant-expression ":" IN NL -> Label
        EX SP SP "case" Constant-expression SP "..." SP Constant-expression ":" IN NL -> Label
        EX SP SP "default" ":" IN NL -> Label

        Id -> Label-id

        Expression-statement -> Unlabeled-statement
        If-statement -> Unlabeled-statement
        For-statement -> Unlabeled-statement
        While-statement -> Unlabeled-statement
        Switch-statement -> Unlabeled-statement
        Do-statement -> Unlabeled-statement
        Null-statement -> Unlabeled-statement
        Jump-statement -> Unlabeled-statement
        Compound-statement -> Unlabeled-statement

        Asm-statement -> Unlabeled-statement

        Semi -> Null-statement

        "{" IN NL Compound-statement-body "}" ";"? NL -> Compound-statement

        Comment-NL* "..." -> Compound-statement

        "{" NL Compound-statement-body* "}" ";"? NL -> Compound-statement

        Statement* EX -> Compound-statement-body
        Declaration Compound-statement-body -> Compound-statement-body

        IN Declaration EX -> Compound-statement-body
        IN Function-definition EX -> Compound-statement-body
        IN Statement EX -> Compound-statement-body

        Expression Semi -> Expression-statement

        "if" "(" Expression ")" Statement Else-statement? -> If-statement

        "if" "(" Expression ")" Comment-NL* Statement Else-statement? -> If-statement

        "switch" "(" Expression ")" Statement -> Switch-statement

        "switch" "(" Expression ")" Comment-NL* Statement -> Switch-statement

        "else" Statement -> Else-statement

        "while" "(" Expression ")" Statement -> While-statement

        "do" Statement "while" "(" Expression ")" Semi -> Do-statement

        "for" "(" Expression? ";" Expression? ";" Expression? ")" Statement -> For-statement

        "for" "(" Declaration-body ";" Expression? ";" Expression? ")" Statement -> For-statement

        "goto" Label-id Semi -> Jump-statement
        "continue" Semi -> Jump-statement
        "break" Semi -> Jump-statement
        "return" Expression? Semi -> Jump-statement

        "goto" Ptr-operator Expression Semi -> Jump-statement

        Declaration -> Declaration-or-function-definition
        Function-definition -> Declaration-or-function-definition

        NL Decl-specifiers Declarator KR-parameter-decls? Compound-statement NL -> Function-definition

        NL IN Declaration+ EX -> KR-parameter-decls

        ";" NL -> Semi

        C-compilation-unit -> Program

        "#define" Id "(" Id+ ")" Expression NL -> Preprocessor
        "#define" Id Expression NL -> Preprocessor
        EX "#else" IN NL -> Preprocessor
        EX "#endif" NL NL -> Preprocessor
        NL "#if" Expression IN NL -> Preprocessor
        NL "#ifdef" Id IN NL -> Preprocessor
        NL "#ifndef" Id IN NL -> Preprocessor
        "#ident" Stringlit NL -> Preprocessor
        "#include" Stringlit NL -> Preprocessor
        "#include" "<" SPOFF Filepath ">" SPON NL -> Preprocessor
        "#line" Integernumber Stringlit? NL -> Preprocessor
        "#undef" Id NL -> Preprocessor
        "#LINK" Stringlit NL -> Preprocessor

        EX "#endif" Comment-NL? NL -> Preprocessor
        "..." -> Preprocessor

        "..." Comment-NL? -> Preprocessor

        "#" Integernumber String Integernumber* NL -> Preprocessor
        "#pragma" SPON Id* "(" 
		Id
		","
	       ")" NL -> Preprocessor

        File-id Slash-fileid* -> Filepath

        Id -> File-id
        Key -> File-id

        Slash File-id -> Slash-fileid

        "/" -> Slash
        "\" -> Slash
        "." -> Slash
        ":" -> Slash

        Comment NL -> Comment-NL

        Semi -> Null-declaration

        "__label__" -> Local-label

        Restrict-qualifier -> Ptr-qualifier
        Cv-qualifier -> Ptr-qualifier

        "__restrict" -> Restrict-qualifier
        "restrict__" -> Restrict-qualifier
        "restrict" -> Restrict-qualifier
        "__restrict__" -> Restrict-qualifier

        Array-designator -> Designator
        Struct-or-union-designator -> Designator

        "[" Constant-expression "]" Postfix-extension* -> Array-designator
        "[" Constant-expression SP "..." SP Constant-expression "]" Postfix-extension* -> Array-designator

        "."? Id Postfix-extension* -> Struct-or-union-designator

        ":" -> Designator-assignment
        "=" -> Designator-assignment

        "__extension__" -> Extension-specifier

        "long" -> Bit-qualifier
        "short" -> Bit-qualifier
        "signed" -> Bit-qualifier
        "unsigned" -> Bit-qualifier
        "__signed__" -> Bit-qualifier
        "__signed" -> Bit-qualifier

        "__inline" -> Inline-qualifier
        "__inline__" -> Inline-qualifier
        "inline__" -> Inline-qualifier
        "inline" -> Inline-qualifier

        Attribute-spec -> Attributes-or-asm
        Asm-spec -> Attributes-or-asm

        "__attribute__" "('(" 
	    Attribute-extension
	    ","
	   ")')" -> Attribute-spec

        Attribute-alias "(" String ")" -> Attribute-extension
        Attribute-aligned -> Attribute-extension
        Attribute-aligned "(" Tagged-attribute-number ")" -> Attribute-extension
        Attribute-aligned "(" Alignof-expression ")" -> Attribute-extension
        Attribute-always-inline -> Attribute-extension
        Attribute-cdecl -> Attribute-extension
        Attribute-cleanup "(" Tagged-attribute-id ")" -> Attribute-extension
        Attribute-const -> Attribute-extension
        Attribute-constructor -> Attribute-extension
        Attribute-deprecated -> Attribute-extension
        Attribute-destructor -> Attribute-extension
        Attribute-dllexport -> Attribute-extension
        Attribute-dllimport -> Attribute-extension
        Attribute-eightbit -> Attribute-extension
        Attribute-exception "(" Exception-function 
		Exception-arg
		","
	       ")" -> Attribute-extension
        Attribute-far -> Attribute-extension
        Attribute-funvector -> Attribute-extension
        Attribute-format "(" Format-archetype "," Tagged-attribute-number "," Tagged-attribute-number ")" -> Attribute-extension
        Attribute-format-arg "(" Tagged-attribute-number ")" -> Attribute-extension
        Attribute-interrupt -> Attribute-extension
        Attribute-interrupt "(" String ")" -> Attribute-extension
        Attribute-interrupt-handler -> Attribute-extension
        Attribute-interrupt-handler "(" String ")" -> Attribute-extension
        Attribute-longcall -> Attribute-extension
        Attribute-long-call -> Attribute-extension
        Attribute-malloc -> Attribute-extension
        Attribute-may-alias -> Attribute-extension
        Attribute-mode "(" Tagged-attribute-id ")" -> Attribute-extension
        Attribute-model "(" Attribute-model-name ")" -> Attribute-extension
        Attribute-naked -> Attribute-extension
        Attribute-near -> Attribute-extension
        Attribute-no-check-mem -> Attribute-extension
        Attribute-no-instrument -> Attribute-extension
        Attribute-nocommon -> Attribute-extension
        Attribute-noinline -> Attribute-extension
        Attribute-nonnull -> Attribute-extension
        Attribute-nonnull "(" Tagged-attribute-number+ ")" -> Attribute-extension
        Attribute-noreturn -> Attribute-extension
        Attribute-nothrow -> Attribute-extension
        Attribute-packed -> Attribute-extension
        Attribute-pure -> Attribute-extension
        Attribute-regparm "(" Tagged-attribute-number ")" -> Attribute-extension
        Attribute-section "(" String ")" -> Attribute-extension
        Attribute-shared -> Attribute-extension
        Attribute-short-call -> Attribute-extension
        Attribute-signal "(" String ")" -> Attribute-extension
        Attribute-sp-switch "(" String ")" -> Attribute-extension
        Attribute-stdcall -> Attribute-extension
        Attribute-tiny -> Attribute-extension
        Attribute-tls-model "(" Tls-model-type ")" -> Attribute-extension
        Attribute-trans-union -> Attribute-extension
        Attribute-trap-exit "(" Tagged-attribute-number ")" -> Attribute-extension
        Attribute-used -> Attribute-extension
        Attribute-unused -> Attribute-extension
        Attribute-vector-size "(" Tagged-attribute-number ")" -> Attribute-extension
        Attribute-visibility "(" Visibility-type ")" -> Attribute-extension
        Attribute-weak -> Attribute-extension

        Id -> Tagged-attribute-id

        Number -> Tagged-attribute-number

        "__near__" -> Attribute-near
        "__near" -> Attribute-near
        "near__" -> Attribute-near
        "near" -> Attribute-near

        "__far__" -> Attribute-far
        "__far" -> Attribute-far
        "far__" -> Attribute-far
        "far" -> Attribute-far

        "__visibility__" -> Attribute-visibility
        "__visibility" -> Attribute-visibility
        "visibility__" -> Attribute-visibility
        "visibility" -> Attribute-visibility

        ""default"" -> Visibility-type
        ""hidden"" -> Visibility-type
        ""protected"" -> Visibility-type
        ""internal"" -> Visibility-type

        "__nonnull__" -> Attribute-nonnull
        "__nonnull" -> Attribute-nonnull
        "nonnull__" -> Attribute-nonnull
        "nonnull" -> Attribute-nonnull

        "__nothrow__" -> Attribute-nothrow
        "__nothrow" -> Attribute-nothrow
        "nothrow__" -> Attribute-nothrow
        "nothrow" -> Attribute-nothrow

        "__may_alias__" -> Attribute-may-alias
        "__may_alias" -> Attribute-may-alias
        "may_alias__" -> Attribute-may-alias
        "may_alias" -> Attribute-may-alias

        "__tls_model__" -> Attribute-tls-model
        "__tls_model" -> Attribute-tls-model
        "tls_model__" -> Attribute-tls-model
        "tls_model" -> Attribute-tls-model

        ""global-dynamic"" -> Tls-model-type
        ""local-dynamic"" -> Tls-model-type
        ""initial-exec"" -> Tls-model-type
        ""local-exec"" -> Tls-model-type

        "__cleanup__" -> Attribute-cleanup
        "__cleanup" -> Attribute-cleanup
        "cleanup__" -> Attribute-cleanup
        "cleanup" -> Attribute-cleanup

        "__dllexport__" -> Attribute-dllexport
        "__dllexport" -> Attribute-dllexport
        "dllexport__" -> Attribute-dllexport
        "dllexport" -> Attribute-dllexport

        "__used__" -> Attribute-used
        "__used" -> Attribute-used
        "used__" -> Attribute-used
        "used" -> Attribute-used

        "__always_inline__" -> Attribute-always-inline
        "__always_inline" -> Attribute-always-inline
        "always_inline__" -> Attribute-always-inline
        "always_inline" -> Attribute-always-inline

        "__noinline__" -> Attribute-noinline
        "__noinline" -> Attribute-noinline
        "noinline__" -> Attribute-noinline
        "noinline" -> Attribute-noinline

        "__vector_size__" -> Attribute-vector-size
        "__vector_size" -> Attribute-vector-size
        "vector_size__" -> Attribute-vector-size
        "vector_size" -> Attribute-vector-size

        "__deprecated__" -> Attribute-deprecated
        "__deprecated" -> Attribute-deprecated
        "deprecated__" -> Attribute-deprecated
        "deprecated" -> Attribute-deprecated

        "__mode__" -> Attribute-mode
        "__mode" -> Attribute-mode
        "mode__" -> Attribute-mode
        "mode" -> Attribute-mode

        "__format__" -> Attribute-format
        "__format" -> Attribute-format
        "format__" -> Attribute-format
        "format" -> Attribute-format

        "__format_arg__" -> Attribute-format-arg
        "__format_arg" -> Attribute-format-arg
        "format_arg__" -> Attribute-format-arg
        "format_arg" -> Attribute-format-arg

        "__aligned__" -> Attribute-aligned
        "__aligned" -> Attribute-aligned
        "aligned__" -> Attribute-aligned
        "aligned" -> Attribute-aligned

        "weak" -> Attribute-weak
        "__weak__" -> Attribute-weak
        "__weak" -> Attribute-weak
        "weak__" -> Attribute-weak

        "alias" -> Attribute-alias
        "__alias__" -> Attribute-alias
        "__alias" -> Attribute-alias
        "alias__" -> Attribute-alias

        "no_check_memory_usage" -> Attribute-no-check-mem
        "__no_check_memory_usage__" -> Attribute-no-check-mem
        "__no_check_memory_usage" -> Attribute-no-check-mem
        "no_check_memory_usage__" -> Attribute-no-check-mem

        "regparm" -> Attribute-regparm
        "__regparm__" -> Attribute-regparm
        "__regparm" -> Attribute-regparm
        "regparm__" -> Attribute-regparm

        "stdcall" -> Attribute-stdcall
        "__stdcall__" -> Attribute-stdcall
        "__stdcall" -> Attribute-stdcall
        "stdcall__" -> Attribute-stdcall

        "cdecl" -> Attribute-cdecl
        "__cdecl__" -> Attribute-cdecl
        "__cdecl" -> Attribute-cdecl
        "cdecl__" -> Attribute-cdecl

        "longcall" -> Attribute-longcall
        "__longcall__" -> Attribute-longcall
        "__longcall" -> Attribute-longcall
        "longcall__" -> Attribute-longcall

        "long_call" -> Attribute-long-call
        "__long_call__" -> Attribute-long-call
        "__long_call" -> Attribute-long-call
        "long_call__" -> Attribute-long-call

        "short_call" -> Attribute-short-call
        "__short_call__" -> Attribute-short-call
        "__short_call" -> Attribute-short-call
        "short_call__" -> Attribute-short-call

        "dllimport" -> Attribute-dllimport
        "__dllimport__" -> Attribute-dllimport
        "__dllimport" -> Attribute-dllimport
        "dllimport__" -> Attribute-dllimport

        "exception" -> Attribute-exception
        "__exception__" -> Attribute-exception
        "__exception" -> Attribute-exception
        "exception__" -> Attribute-exception

        Stringlit* Stringlit -> Exception-function
        Tagged-attribute-id -> Exception-function

        Stringlit* Stringlit -> Exception-arg
        Tagged-attribute-id -> Exception-arg

        "function_vector" -> Attribute-funvector
        "__function_vector__" -> Attribute-funvector
        "__function_vector" -> Attribute-funvector
        "function_vector__" -> Attribute-funvector

        "interrupt" -> Attribute-interrupt
        "__interrupt__" -> Attribute-interrupt
        "__interrupt" -> Attribute-interrupt
        "interrupt__" -> Attribute-interrupt

        "interrupt_handler" -> Attribute-interrupt-handler
        "__interrupt_handler__" -> Attribute-interrupt-handler
        "__interrupt_handler" -> Attribute-interrupt-handler
        "interrupt_handler__" -> Attribute-interrupt-handler

        "sp_switch" -> Attribute-sp-switch
        "__sp_switch__" -> Attribute-sp-switch
        "__sp_switch" -> Attribute-sp-switch
        "sp_switch__" -> Attribute-sp-switch

        "trap_exit" -> Attribute-trap-exit
        "__trap_exit__" -> Attribute-trap-exit
        "__trap_exit" -> Attribute-trap-exit
        "trap_exit__" -> Attribute-trap-exit

        "eightbit_data" -> Attribute-eightbit
        "__eightbit_data__" -> Attribute-eightbit
        "__eightbit_data" -> Attribute-eightbit
        "eightbit_data__" -> Attribute-eightbit

        "tiny_data" -> Attribute-tiny
        "__tiny_data__" -> Attribute-tiny
        "__tiny_data" -> Attribute-tiny
        "tiny_data__" -> Attribute-tiny

        "signal" -> Attribute-signal
        "__signal__" -> Attribute-signal
        "__signal" -> Attribute-signal
        "signal__" -> Attribute-signal

        "naked" -> Attribute-naked
        "__naked__" -> Attribute-naked
        "__naked" -> Attribute-naked
        "naked__" -> Attribute-naked

        "model" -> Attribute-model
        "__model__" -> Attribute-model
        "__model" -> Attribute-model
        "model__" -> Attribute-model

        "small" -> Attribute-model-name
        "__small__" -> Attribute-model-name
        "__small" -> Attribute-model-name
        "small__" -> Attribute-model-name
        "medium" -> Attribute-model-name
        "__medium__" -> Attribute-model-name
        "__medium" -> Attribute-model-name
        "medium__" -> Attribute-model-name
        "large" -> Attribute-model-name
        "__large__" -> Attribute-model-name
        "__large" -> Attribute-model-name
        "large__" -> Attribute-model-name

        "nocommon" -> Attribute-nocommon
        "__nocommon__" -> Attribute-nocommon
        "nocommon__" -> Attribute-nocommon
        "__nocommon" -> Attribute-nocommon

        "shared" -> Attribute-shared
        "__shared__" -> Attribute-shared
        "__shared" -> Attribute-shared
        "shared__" -> Attribute-shared

        "malloc" -> Attribute-malloc
        "__malloc__" -> Attribute-malloc
        "__malloc" -> Attribute-malloc
        "malloc__" -> Attribute-malloc

        "printf" -> Format-archetype
        "__printf__" -> Format-archetype
        "__printf" -> Format-archetype
        "printf__" -> Format-archetype
        "scanf" -> Format-archetype
        "__scanf__" -> Format-archetype
        "__scanf" -> Format-archetype
        "scanf__" -> Format-archetype
        "strftime" -> Format-archetype
        "__strftime__" -> Format-archetype
        "__strftime" -> Format-archetype
        "strftime__" -> Format-archetype
        "strfmon" -> Format-archetype
        "__strfmon__" -> Format-archetype
        "__strfmon" -> Format-archetype
        "strfmon__" -> Format-archetype

        "__noreturn__" -> Attribute-noreturn
        "__noreturn" -> Attribute-noreturn
        "noreturn__" -> Attribute-noreturn
        "noreturn" -> Attribute-noreturn

        "__const__" -> Attribute-const
        "__const" -> Attribute-const
        "const__" -> Attribute-const
        "const" -> Attribute-const

        "__pure__" -> Attribute-pure
        "__pure" -> Attribute-pure
        "pure__" -> Attribute-pure
        "pure" -> Attribute-pure

        "__transparent_union__" -> Attribute-trans-union
        "__transparent_union" -> Attribute-trans-union
        "transparent_union__" -> Attribute-trans-union
        "transparent_union" -> Attribute-trans-union

        "__unused__" -> Attribute-unused
        "__unused" -> Attribute-unused
        "unused__" -> Attribute-unused
        "unused" -> Attribute-unused

        "__packed__" -> Attribute-packed
        "__packed" -> Attribute-packed
        "packed__" -> Attribute-packed
        "packed" -> Attribute-packed

        "no_instrument_function" -> Attribute-no-instrument
        "__no_instrument_function__" -> Attribute-no-instrument
        "__no_instrument_function" -> Attribute-no-instrument
        "no_instrument_function__" -> Attribute-no-instrument

        "section" -> Attribute-section
        "__section__" -> Attribute-section
        "__section" -> Attribute-section
        "section__" -> Attribute-section

        "constructor" -> Attribute-constructor
        "__constructor__" -> Attribute-constructor
        "__constructor" -> Attribute-constructor
        "constructor__" -> Attribute-constructor

        "destructor" -> Attribute-destructor
        "__destructor__" -> Attribute-destructor
        "__destructor" -> Attribute-destructor
        "destructor__" -> Attribute-destructor

        Asm-spec Semi -> Asm-statement

        Asm-or-cv+ "(" Asm-template Asm-output-operands? Asm-input-operands? Asm-clobbered-registers? ")" -> Asm-spec

        "__asm__" -> Asm-or-cv
        "asm" -> Asm-or-cv
        "asm__" -> Asm-or-cv
        "__asm" -> Asm-or-cv
        Cv-qualifier -> Asm-or-cv

        String -> Asm-template

        ":" 
	    Asm-operand
	    ","
	   -> Asm-output-operands

        ":" 
	    Asm-operand
	    ","
	   -> Asm-input-operands

        String "(" Expression ")" -> Asm-operand

        ":" 
	    String
	    ","
	   -> Asm-clobbered-registers

        "(" Compound-statement ")" -> Compound-statement-expression

        "(" Struct-or-union-specifier ")" "{" 
		Designated-initializer
		","
	       ","? "}" -> Compound-literal
        "(" Compound-literal-array-type ")" "{" 
		Designated-initializer
		","
	       ","? "}" -> Compound-literal
        "(" Compound-literal ")" -> Compound-literal

        Type-specifiers Compound-literal-array-declarator -> Compound-literal-array-type

        Ptr-operator* Array-declarator-extension* -> Compound-literal-array-declarator
        "(" Compound-literal-array-declarator ")" Array-declarator-extension* -> Compound-literal-array-declarator

        Typeof-specifier "(" Simple-type-name ")" -> Typeof-expression
        Typeof-specifier "(" Expression ")" -> Typeof-expression

        "__typeof" -> Typeof-specifier
        "typeof" -> Typeof-specifier
        "__typeof__" -> Typeof-specifier
        "typeof__" -> Typeof-specifier

        "_Complex" Simple-type-or-qualifier* -> Complex-specifier

        Simple-type-name -> Simple-type-or-qualifier
        Type-qualifier -> Simple-type-or-qualifier

        Gnu-long-int-string -> Gnu-long-int
        Gnu-long-int-charlit -> Gnu-long-int

        "L" SPOFF String SPON -> Gnu-long-int-string

        "L" SPOFF Charlit SPON -> Gnu-long-int-charlit

        Extension-specifier Hex -> Hexfloat

        Assignment-expression -> Argument-expression
        Type-name -> Argument-expression

        "__alignof__" "(" Unary-expression ")" -> Alignof-expression
        "__alignof" "(" Unary-expression ")" -> Alignof-expression
        "__alignof__" "(" Type-name ")" -> Alignof-expression
        "__alignof" "(" Type-name ")" -> Alignof-expression

        Assignment-expression -> Designated-initializer
        Designator* Designator-assignment? Assignment-expression -> Designated-initializer
        Designator* Designator-assignment? NL "{" IN 
		Designated-initializer
		","
	       ","? EX "}" -> Designated-initializer
