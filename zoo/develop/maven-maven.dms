Project = xmlns::Xmlns+ default::Goal path::Path properties::AntProperty+ taskdefs::AntTaskDef+ prePostGoals::PrePostGoal+ goals::Goal+ ;
Xmlns = name::String value::String ;
AntProperty = AntPropertyName ;
AntProperty = AntPropertyFile ;
AntProperty = AntPropertyEnv ;
AntPropertyName = AntPropertyValue ;
AntPropertyName = AntPropertyLocation ;
AntPropertyValue = value::String ;
AntPropertyLocation = location::String ;
AntPropertyFile = file::String ;
AntPropertyEnv = environment::String ;
JellyCommand = JellySet ;
JellyCommand = JellyForEach ;
JellySet = var::String value::String ;
JellyForEach = items::String var::String indexVar::String contents::ContentsGoal ;
AbstractGoal = PrePostGoal ;
AbstractGoal = Goal ;
ContentsGoal = AntProperty ;
ContentsGoal = JellyCommand ;
ContentsGoal = AttainGoal ;
ContentsGoal = Task ;
ContentsGoal = AntTaskDef ;
AttainGoal = attainGoal::Goal ;
PrePostGoal = PreGoal ;
PrePostGoal = PostGoal ;
PreGoal = centralGoal::Goal ;
PostGoal = centralGoal::Goal ;
Goal = name::String preGoal::PreGoal postGoal::PostGoal ;
Pattern = Basic ;
Pattern = Set ;
Basic = Mapper ;
Basic = InExcludes ;
Basic = FileList ;
Basic = Filter ;
Basic = FiltersFile ;
Basic = PathElement ;
Mapper = type::String classname::String classpath::String classpathref::String from::String to::String ;
InExcludes = Includes ;
InExcludes = Excludes ;
InExcludes = IncludesFile ;
InExcludes = ExcludesFile ;
Includes = name::String ifCondition::String unless::String ;
Excludes = name::String ifCondition::String unless::String ;
IncludesFile = name::String ifCondition::String unless::String ;
ExcludesFile = name::String ifCondition::String unless::String ;
FileList = dir::String files::String ;
Filter = token::String value::String ;
FiltersFile = file::String ;
PathElement = path::String location::String ;
Set = PatternSet ;
Set = FileSet ;
Set = FilterSet ;
Set = Path ;
Set = ClassPath ;
PatternSet = inexcludes::InExcludes+ ;
FileSet = dir::String patternset::PatternSet+ include::Includes+ exclude::Excludes+ ;
FilterSet = starttoken::String endtoken::String filter::Filter+ filtersfile::FiltersFile+ ;
Path = id::String refid::String path::Path pathElement::PathElement+ fileset::FileSet+ ;
ClassPath = refid::String pathElement::PathElement+ fileset::FileSet+ ;
Task = NewTask ;
Task = PreDefinedTask ;
AntTaskDef = name::String classname::String ;
NewTask = taskName::AntTaskDef attributes::Attribut+ ;
Attribut = name::String value::String ;
PreDefinedTask = ExecutionTask ;
PreDefinedTask = MiscellaneousTask ;
PreDefinedTask = CompileTask ;
PreDefinedTask = DocumentationTask ;
PreDefinedTask = ArchiveTask ;
PreDefinedTask = FileTask ;
ExecutionTask = Exec ;
ExecutionTask = Java ;
Exec = executable::String dir::String ;
Java = classname::String jar::String fork::String classPath::ClassPath ;
MiscellaneousTask = Echo ;
MiscellaneousTask = Tstamp ;
Echo = message::String file::String append::String ;
Tstamp = format::FormatTstamp+ ;
FormatTstamp = property::String pattern::String offset::String unit::String locale::String ;
CompileTask = Javac ;
Javac = srcdir::String destdir::String debug::String fork::String optimize::String deprecation::String inExcludes::InExcludes+ classPath::ClassPath ;
DocumentationTask = Javadoc ;
Javadoc = sourcepath::String destdir::String packagenames::String defaultexcludes::String author::String version::String use::String windowtitle::String ;
ArchiveTask = Jar ;
Jar = jarfile::String basedir::String compress::String encoding::String manifest::String ;
FileTask = Mkdir ;
FileTask = Copy ;
FileTask = Delete ;
Mkdir = dir::String ;
Copy = file::String presservelastmodified::String tofile::String todir::String overwrite::String filtering::String flatten::String includeEmptyDirs::String fileset::FileSet filterset::FilterSet mapper::Mapper ;
Delete = file::String dir::String verbose::String quiet::String failonerror::String includeEmptyDirs::String includes::String includesfile::String excludes::String excludesfile::String defaultexcludes::String ;
String = STR ;
