module Main

exports
  sorts
        ConstantExpression PrefixOp SwitchLabel VariableInitializer InterfaceMemberDecl FormalParameter TypeDeclaration MethodOrFieldDecl ConstantDeclaratorRest StatementExpression InterfaceDeclaration QualifiedIdentifierList Arguments Statement VariableDeclaratorId Type ArrayCreatorRest Modifier InterfaceMethodOrFieldDecl ImportDeclaration CompilationUnit BasicType CatchClause Selector ModifiersOpt ClassCreatorRest ConstantDeclarator ClassBodyDeclaration BlockStatements VoidInterfaceMethodDeclaratorRest LocalVariableDeclarationStatement Expression1 MemberDecl Expression3 Expression2 BracketsOpt MethodOrFieldRest MoreStatementExpressions SwitchBlockStatementGroups ArrayInitializer Catches InterfaceMethodOrFieldRest Expression1Rest Infixop MethodDeclaratorRest InterfaceBodyDeclaration QualifiedIdentifier ConstantDeclaratorsRest ClassOrInterfaceDeclaration SuperSuffix VariableDeclaratorRest BlockStatement InterfaceBody Literal Expression SwitchBlockStatementGroup Block PostfixOp InterfaceMethodDeclaratorRest IdentifierSuffix ForUpdate ForInit Creator AssignmentOperator ParExpression VariableDeclarators ClassBody Primary ConstructorDeclaratorRest FormalParameters TypeList MethodBody ClassDeclaration Expression2Rest InnerCreator VariableDeclarator ExpressionStatement 
  context-free syntax
        Expression -> ConstantExpression

        "++" -> PrefixOp

        "--" -> PrefixOp

        "!" -> PrefixOp

        "~" -> PrefixOp

        "+" -> PrefixOp

        "-" -> PrefixOp

        "case" ConstantExpression ":" -> SwitchLabel

        "default" ":" -> SwitchLabel

        ArrayInitializer -> VariableInitializer

        Expression -> VariableInitializer

        InterfaceMethodOrFieldDecl -> InterfaceMemberDecl

        "void" Identifier VoidInterfaceMethodDeclaratorRest -> InterfaceMemberDecl

        ClassOrInterfaceDeclaration -> InterfaceMemberDecl

        "final"? Type VariableDeclaratorId -> FormalParameter

        ClassOrInterfaceDeclaration -> TypeDeclaration

        ";" -> TypeDeclaration

        Type Identifier MethodOrFieldRest -> MethodOrFieldDecl

        BracketsOpt "=" VariableInitializer -> ConstantDeclaratorRest

        Expression -> StatementExpression

        "interface" Identifier ("extends" TypeList)? InterfaceBody -> InterfaceDeclaration

        QualifiedIdentifier ("," QualifiedIdentifier)* -> QualifiedIdentifierList

        "(" (Expression ("," Expression)*)? ")" -> Arguments

        Block -> Statement

        "if" ParExpression Statement ("else" Statement)? -> Statement

        "for" "(" ForInit? ";" Expression? ";" ForUpdate? ")" Statement -> Statement

        "while" ParExpression Statement -> Statement

        "do" Statement "while" ParExpression ";" -> Statement

        "try" Block (Catches | (Catches? "finally" Block)) -> Statement

        "switch" ParExpression "{" SwitchBlockStatementGroups "}" -> Statement

        "synchronized" ParExpression Block -> Statement

        "return" Expression? ";" -> Statement

        "throw" Expression ";" -> Statement

        "break" Identifier? ";" -> Statement

        "continue" Identifier? ";" -> Statement

        ";" -> Statement

        ExpressionStatement -> Statement

        Identifier ":" Statement -> Statement

        Identifier BracketsOpt -> VariableDeclaratorId

        Identifier ("." Identifier)* BracketsOpt -> Type

        BasicType -> Type

        "[" (("]" BracketsOpt ArrayInitializer) | (Expression "]" ("[" Expression "]")* BracketsOpt)) -> ArrayCreatorRest

        "public" -> Modifier

        "protected" -> Modifier

        "private" -> Modifier

        "static" -> Modifier

        "abstract" -> Modifier

        "final" -> Modifier

        "native" -> Modifier

        "synchronized" -> Modifier

        "transient" -> Modifier

        "volatile" -> Modifier

        "strictfp" -> Modifier

        Type Identifier InterfaceMethodOrFieldRest -> InterfaceMethodOrFieldDecl

        "import" Identifier ("." Identifier)* ("." "*")? ";" -> ImportDeclaration

        ("package" QualifiedIdentifier ";")? ImportDeclaration* TypeDeclaration* -> CompilationUnit

        "byte" -> BasicType

        "short" -> BasicType

        "char" -> BasicType

        "int" -> BasicType

        "long" -> BasicType

        "float" -> BasicType

        "double" -> BasicType

        "boolean" -> BasicType

        "catch" "(" FormalParameter ")" Block -> CatchClause

        "." Identifier Arguments? -> Selector

        "." "this" -> Selector

        "." "super" SuperSuffix -> Selector

        "." "new" InnerCreator -> Selector

        "[" Expression "]" -> Selector

        Modifier* -> ModifiersOpt

        Arguments ClassBody? -> ClassCreatorRest

        Identifier ConstantDeclaratorRest -> ConstantDeclarator

        ";" -> ClassBodyDeclaration

        "static"? Block -> ClassBodyDeclaration

        ModifiersOpt MemberDecl -> ClassBodyDeclaration

        BlockStatement* -> BlockStatements

        FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? ";" -> VoidInterfaceMethodDeclaratorRest

        "final"? Type VariableDeclarators ";" -> LocalVariableDeclarationStatement

        Expression2 Expression1Rest? -> Expression1

        MethodOrFieldDecl -> MemberDecl

        "void" Identifier MethodDeclaratorRest -> MemberDecl

        Identifier ConstructorDeclaratorRest -> MemberDecl

        ClassOrInterfaceDeclaration -> MemberDecl

        PrefixOp Expression3 -> Expression3

        "(" (Expression | Type) ")" Expression3 -> Expression3

        Primary Selector* PostfixOp* -> Expression3

        Expression3 Expression2Rest? -> Expression2

        ("[" "]")* -> BracketsOpt

        VariableDeclaratorRest -> MethodOrFieldRest

        MethodDeclaratorRest -> MethodOrFieldRest

        ("," StatementExpression)* -> MoreStatementExpressions

        SwitchBlockStatementGroup* -> SwitchBlockStatementGroups

        "{" (VariableInitializer ("," VariableInitializer)* ","?)? "}" -> ArrayInitializer

        CatchClause CatchClause* -> Catches

        ConstantDeclaratorsRest ";" -> InterfaceMethodOrFieldRest

        InterfaceMethodDeclaratorRest -> InterfaceMethodOrFieldRest

        ("?" Expression ":" Expression1)? -> Expression1Rest

        "||" -> Infixop

        "&&" -> Infixop

        "|" -> Infixop

        "^" -> Infixop

        "&" -> Infixop

        "==" -> Infixop

        "!=" -> Infixop

        "<" -> Infixop

        ">" -> Infixop

        "<=" -> Infixop

        ">=" -> Infixop

        "<<" -> Infixop

        ">>" -> Infixop

        ">>>" -> Infixop

        "+" -> Infixop

        "-" -> Infixop

        "*" -> Infixop

        "/" -> Infixop

        "%" -> Infixop

        FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? (MethodBody | ";") -> MethodDeclaratorRest

        ";" -> InterfaceBodyDeclaration

        ModifiersOpt InterfaceMemberDecl -> InterfaceBodyDeclaration

        Identifier ("." Identifier)* -> QualifiedIdentifier

        ConstantDeclaratorRest ("," ConstantDeclarator)* -> ConstantDeclaratorsRest

        ModifiersOpt (ClassDeclaration | InterfaceDeclaration) -> ClassOrInterfaceDeclaration

        Arguments -> SuperSuffix

        "." Identifier Arguments? -> SuperSuffix

        BracketsOpt ("=" VariableInitializer)? -> VariableDeclaratorRest

        LocalVariableDeclarationStatement -> BlockStatement

        ClassOrInterfaceDeclaration -> BlockStatement

        (Identifier ":")? Statement -> BlockStatement

        "{" InterfaceBodyDeclaration* "}" -> InterfaceBody

        IntegerLiteral -> Literal

        FloatingPointLiteral -> Literal

        CharacterLiteral -> Literal

        StringLiteral -> Literal

        BooleanLiteral -> Literal

        NullLiteral -> Literal

        Expression1 (AssignmentOperator Expression1)? -> Expression

        SwitchLabel BlockStatements -> SwitchBlockStatementGroup

        "{" BlockStatements "}" -> Block

        "++" -> PostfixOp

        "--" -> PostfixOp

        FormalParameters BracketsOpt ("throws" QualifiedIdentifierList)? ";" -> InterfaceMethodDeclaratorRest

        "[" (("]" BracketsOpt "." "class") | (Expression "]")) -> IdentifierSuffix

        Arguments -> IdentifierSuffix

        "." ("class" | "this" | ("super" Arguments) | ("new" InnerCreator)) -> IdentifierSuffix

        StatementExpression MoreStatementExpressions -> ForUpdate

        StatementExpression MoreStatementExpressions -> ForInit

        "final"? Type VariableDeclarators -> ForInit

        QualifiedIdentifier (ArrayCreatorRest | ClassCreatorRest) -> Creator

        "=" -> AssignmentOperator

        "+=" -> AssignmentOperator

        "-=" -> AssignmentOperator

        "*=" -> AssignmentOperator

        "/=" -> AssignmentOperator

        "&=" -> AssignmentOperator

        "|=" -> AssignmentOperator

        "^=" -> AssignmentOperator

        "%=" -> AssignmentOperator

        "<<=" -> AssignmentOperator

        ">>=" -> AssignmentOperator

        ">>>=" -> AssignmentOperator

        "(" Expression ")" -> ParExpression

        VariableDeclarator ("," VariableDeclarator)* -> VariableDeclarators

        "{" ClassBodyDeclaration* "}" -> ClassBody

        "(" Expression ")" -> Primary

        "this" Arguments? -> Primary

        "super" SuperSuffix -> Primary

        Literal -> Primary

        "new" Creator -> Primary

        Identifier ("." Identifier)* IdentifierSuffix? -> Primary

        BasicType BracketsOpt "." "class" -> Primary

        "void" "." "class" -> Primary

        FormalParameters ("throws" QualifiedIdentifierList)? MethodBody -> ConstructorDeclaratorRest

        "(" (FormalParameter ("," FormalParameter)*)? ")" -> FormalParameters

        Type ("," Type)* -> TypeList

        Block -> MethodBody

        "class" Identifier ("extends" Type)? ("implements" TypeList)? ClassBody -> ClassDeclaration

        (Infixop Expression3)* -> Expression2Rest

        "instanceof" Type -> Expression2Rest

        Identifier ClassCreatorRest -> InnerCreator

        Identifier VariableDeclaratorRest -> VariableDeclarator

        StatementExpression ";" -> ExpressionStatement
