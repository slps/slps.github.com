<?xml version="1.0" encoding="UTF-8"?>
<bgf:grammar xmlns:bgf="http://planet-sl.org/bgf"><bgf:production><label>localVarDec</label><nonterminal>LocalVarDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>VarDec</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeParams</label><nonterminal>TypeParams</nonterminal><bgf:expression><sequence><bgf:expression><terminal>&lt;</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>TypeParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression><bgf:expression><terminal>&gt;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>CharLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>BoolLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>ClassLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>FloatLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>StringLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>NullLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Literal</nonterminal><bgf:expression><nonterminal>IntLiteral</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>abstract</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>strictfp</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMod</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><label>classDecHead</label><nonterminal>ClassDecHead</nonterminal><bgf:expression><sequence><bgf:expression><terminal>class</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Super</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Interfaces</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ClassDec</nonterminal><bgf:expression><nonterminal>EnumDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>classDec</label><nonterminal>ClassDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>ClassDecHead</nonterminal></bgf:expression><bgf:expression><nonterminal>ClassBody</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>switchGroup</label><nonterminal>SwitchGroup</nonterminal><bgf:expression><sequence><bgf:expression><plus><bgf:expression><nonterminal>SwitchLabel</nonterminal></bgf:expression></plus></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>BlockStm</nonterminal></bgf:expression></plus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ClassBodyDec</nonterminal><bgf:expression><nonterminal>ClassMemberDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassBodyDec</nonterminal><bgf:expression><nonterminal>StaticInit</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassBodyDec</nonterminal><bgf:expression><nonterminal>ConstrDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassBodyDec</nonterminal><bgf:expression><nonterminal>InstanceInit</nonterminal></bgf:expression></bgf:production><bgf:production><label>double</label><nonterminal>FloatType</nonterminal><bgf:expression><terminal>double</terminal></bgf:expression></bgf:production><bgf:production><label>float</label><nonterminal>FloatType</nonterminal><bgf:expression><terminal>float</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMemberDec</nonterminal><bgf:expression><nonterminal>ClassDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMemberDec</nonterminal><bgf:expression><nonterminal>MethodDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMemberDec</nonterminal><bgf:expression><nonterminal>FieldDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>semicolon</label><nonterminal>ClassMemberDec</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ClassMemberDec</nonterminal><bgf:expression><nonterminal>InterfaceDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ConstantMod</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ConstantMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ConstantMod</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><label>constantDec</label><nonterminal>ConstantDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>VarDec</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>switchBlock</label><nonterminal>SwitchBlock</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>SwitchGroup</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>SwitchLabel</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>CondMid</nonterminal><bgf:expression><sequence><bgf:expression><terminal>?</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>wildcardUpperBound</label><nonterminal>WildcardBound</nonterminal><bgf:expression><sequence><bgf:expression><terminal>extends</terminal></bgf:expression><bgf:expression><nonterminal>RefType</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>wildcardLowerBound</label><nonterminal>WildcardBound</nonterminal><bgf:expression><sequence><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><nonterminal>RefType</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>enumDecHead</label><nonterminal>EnumDecHead</nonterminal><bgf:expression><sequence><bgf:expression><terminal>enum</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Interfaces</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>packageOrTypeName</label><nonterminal>PackageOrTypeName</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><label>packageOrTypeName</label><nonterminal>PackageOrTypeName</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>PackageOrTypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>interfaceDecHead</label><nonterminal>InterfaceDecHead</nonterminal><bgf:expression><sequence><bgf:expression><terminal>interface</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>ExtendsInterfaces</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>int</label><nonterminal>IntType</nonterminal><bgf:expression><terminal>int</terminal></bgf:expression></bgf:production><bgf:production><label>byte</label><nonterminal>IntType</nonterminal><bgf:expression><terminal>byte</terminal></bgf:expression></bgf:production><bgf:production><label>long</label><nonterminal>IntType</nonterminal><bgf:expression><terminal>long</terminal></bgf:expression></bgf:production><bgf:production><label>short</label><nonterminal>IntType</nonterminal><bgf:expression><terminal>short</terminal></bgf:expression></bgf:production><bgf:production><label>char</label><nonterminal>IntType</nonterminal><bgf:expression><terminal>char</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>VarInit</nonterminal><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>VarInit</nonterminal><bgf:expression><nonterminal>ArrayInit</nonterminal></bgf:expression></bgf:production><bgf:production><label>enumBodyDecs</label><nonterminal>EnumBodyDecs</nonterminal><bgf:expression><sequence><bgf:expression><terminal>;</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>ClassBodyDec</nonterminal></bgf:expression></star></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>classType</label><nonterminal>ClassType</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeDecSpec</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>extendsInterfaces</label><nonterminal>ExtendsInterfaces</nonterminal><bgf:expression><sequence><bgf:expression><terminal>extends</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>InterfaceType</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>staticInit</label><nonterminal>StaticInit</nonterminal><bgf:expression><sequence><bgf:expression><terminal>static</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>varArityParam</label><nonterminal>FormalParam</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><terminal>...</terminal></bgf:expression><bgf:expression><nonterminal>VarDecId</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>param</label><nonterminal>FormalParam</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><nonterminal>VarDecId</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>EnumConstArgs</nonterminal><bgf:expression><sequence><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>localVarDecStm</label><nonterminal>LocalVarDecStm</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LocalVarDec</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>compilationUnit</label><nonterminal>CompilationUnit</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>PackageDec</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>ImportDec</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>TypeDec</nonterminal></bgf:expression></star></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>enumConst</label><nonterminal>EnumConst</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>EnumConstArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>ClassBody</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>NumType</nonterminal><bgf:expression><nonterminal>FloatType</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>NumType</nonterminal><bgf:expression><nonterminal>IntType</nonterminal></bgf:expression></bgf:production><bgf:production><label>deprMethodDecHead</label><nonterminal>MethodDecHead</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>ResultType</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>Dim</nonterminal></bgf:expression></plus></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Throws</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>methodDecHead</label><nonterminal>MethodDecHead</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>ResultType</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Throws</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>singleElemAnno</label><nonterminal>Anno</nonterminal><bgf:expression><sequence><bgf:expression><terminal>@</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>anno</label><nonterminal>Anno</nonterminal><bgf:expression><sequence><bgf:expression><terminal>@</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>ElemValPair</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>markerAnno</label><nonterminal>Anno</nonterminal><bgf:expression><sequence><bgf:expression><terminal>@</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>fieldDec</label><nonterminal>FieldDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>VarDec</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>transient</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>volatile</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>FieldMod</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ArraySubscript</nonterminal><bgf:expression><sequence><bgf:expression><terminal>[</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>]</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>float</label><nonterminal>FloatLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>constrBody</label><nonterminal>ConstrBody</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>ConstrInv</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>BlockStm</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>packageName</label><nonterminal>PackageName</nonterminal><bgf:expression><seplistplus><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression></seplistplus></bgf:expression></bgf:production><bgf:production><label>qSuperField</label><nonterminal>FieldAccess</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>field</label><nonterminal>FieldAccess</nonterminal><bgf:expression><sequence><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>superField</label><nonterminal>FieldAccess</nonterminal><bgf:expression><sequence><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>qSuperConstrInv</label><nonterminal>ConstrInv</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>superConstrInv</label><nonterminal>ConstrInv</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>altConstrInv</label><nonterminal>ConstrInv</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>this</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>octa</label><nonterminal>IntLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>hexa</label><nonterminal>IntLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>deci</label><nonterminal>IntLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>semicolon</label><nonterminal>InterfaceMemberDec</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMemberDec</nonterminal><bgf:expression><nonterminal>InterfaceDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMemberDec</nonterminal><bgf:expression><nonterminal>AbstractMethodDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMemberDec</nonterminal><bgf:expression><nonterminal>ClassDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMemberDec</nonterminal><bgf:expression><nonterminal>ConstantDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>elemValPair</label><nonterminal>ElemValPair</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>=</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>catch</label><nonterminal>CatchClause</nonterminal><bgf:expression><sequence><bgf:expression><terminal>catch</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>arrayInit</label><nonterminal>ArrayInit</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>VarInit</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>arrayInit</label><nonterminal>ArrayInit</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>VarInit</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>VarDecId</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><label>arrayVarDecId</label><nonterminal>VarDecId</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>Dim</nonterminal></bgf:expression></plus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>volatile</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>synchronized</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>strictfp</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>transient</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>abstract</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>native</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>Modifier</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><label>elemValArrayInit</label><nonterminal>ElemVal</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>ElemVal</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ElemVal</nonterminal><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ElemVal</nonterminal><bgf:expression><nonterminal>Anno</nonterminal></bgf:expression></bgf:production><bgf:production><label>elemValArrayInit</label><nonterminal>ElemVal</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>ElemVal</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>constrDec</label><nonterminal>ConstrDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>ConstrHead</nonterminal></bgf:expression><bgf:expression><nonterminal>ConstrBody</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ConstrMod</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ConstrMod</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ConstrMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><label>interfaceType</label><nonterminal>InterfaceType</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeDecSpec</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>packageDec</label><nonterminal>PackageDec</nonterminal><bgf:expression><sequence><bgf:expression><star><bgf:expression><nonterminal>Anno</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>package</terminal></bgf:expression><bgf:expression><nonterminal>PackageName</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>arrayAccess</label><nonterminal>ArrayAccess</nonterminal><bgf:expression><nonterminal>ArraySubscript</nonterminal></bgf:expression></bgf:production><bgf:production><label>typeImportOnDemandDec</label><nonterminal>ImportDec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>import</terminal></bgf:expression><bgf:expression><nonterminal>PackageName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>*</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeImportDec</label><nonterminal>ImportDec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>import</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>staticImportDec</label><nonterminal>ImportDec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>import</terminal></bgf:expression><bgf:expression><terminal>static</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>staticImportOnDemandDec</label><nonterminal>ImportDec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>import</terminal></bgf:expression><bgf:expression><terminal>static</terminal></bgf:expression><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>*</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ArrayBaseType</nonterminal><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ArrayBaseType</nonterminal><bgf:expression><nonterminal>PrimType</nonterminal></bgf:expression></bgf:production><bgf:production><label>unboundWld</label><nonterminal>ArrayBaseType</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>&lt;</terminal></bgf:expression><bgf:expression><terminal>?</terminal></bgf:expression><bgf:expression><terminal>&gt;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeName</label><nonterminal>TypeName</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>PackageOrTypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeName</label><nonterminal>TypeName</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><label>case</label><nonterminal>SwitchLabel</nonterminal><bgf:expression><sequence><bgf:expression><terminal>case</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>default</label><nonterminal>SwitchLabel</nonterminal><bgf:expression><sequence><bgf:expression><terminal>default</terminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>constrDecHead</label><nonterminal>ConstrHead</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Throws</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>synchronized</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>synchronized</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>exprStm</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>for</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>for</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>for</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>for</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>LocalVarDec</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>Stm</nonterminal><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></bgf:production><bgf:production><label>continue</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>continue</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>try</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>try</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>CatchClause</nonterminal></bgf:expression></plus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>throw</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>throw</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>switch</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>switch</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>SwitchBlock</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>if</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>if</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>break</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>break</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>empty</label><nonterminal>Stm</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><label>labeled</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assertStm</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>assert</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>forEach</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>for</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>:</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assertStm</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>assert</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>try</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>try</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>CatchClause</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>finally</terminal></bgf:expression><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>return</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>return</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>doWhile</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>do</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression><bgf:expression><terminal>while</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>while</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>while</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>if</label><nonterminal>Stm</nonterminal><bgf:expression><sequence><bgf:expression><terminal>if</terminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression><bgf:expression><terminal>else</terminal></bgf:expression><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>null</label><nonterminal>NullLiteral</nonterminal><bgf:expression><terminal>null</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>ExceptionType</nonterminal><bgf:expression><nonterminal>ClassType</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>ResultType</nonterminal><bgf:expression><nonterminal>Type</nonterminal></bgf:expression></bgf:production><bgf:production><label>void</label><nonterminal>ResultType</nonterminal><bgf:expression><terminal>void</terminal></bgf:expression></bgf:production><bgf:production><label>postDecr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>--</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>postIncr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>++</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>castPrim</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>PrimType</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>castRef</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>RefType</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>minus</label><nonterminal>Expr</nonterminal><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></bgf:production><bgf:production><label>preIncr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>++</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>plus</label><nonterminal>Expr</nonterminal><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></bgf:production><bgf:production><label>preDecr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>--</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>this</label><nonterminal>Expr</nonterminal><bgf:expression><terminal>this</terminal></bgf:expression></bgf:production><bgf:production><label>mul</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>*</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>div</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>remain</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>%</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>qThis</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>this</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>complement</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>~</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>not</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>!</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>plus</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>minus</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>uRightShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&gt;&gt;&gt;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>rightShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&gt;&gt;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>leftShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&lt;&lt;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>ltEq</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&lt;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>lt</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&lt;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>gtEq</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&gt;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>instanceOf</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>instanceof</terminal></bgf:expression><bgf:expression><nonterminal>RefType</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>gt</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&gt;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>eq</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>==</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>notEq</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>!=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>and</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&amp;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>excOr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>^</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>or</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>|</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>lazyAnd</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>&amp;&amp;</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>lazyOr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>||</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>cond</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><nonterminal>CondMid</nonterminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignMinus</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>-=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignExcOr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>^=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignPlus</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>+=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignURightShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>&gt;&gt;&gt;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignAnd</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>&amp;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignDiv</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>/=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignMul</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>*=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignRemain</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>%=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignLeftShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>&lt;&lt;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignRightShift</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>&gt;&gt;=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assignOr</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>|=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>assign</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>LHS</nonterminal></bgf:expression><bgf:expression><terminal>=</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>qNewInstance</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>new</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>ClassBody</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>lit</label><nonterminal>Expr</nonterminal><bgf:expression><nonterminal>Literal</nonterminal></bgf:expression></bgf:production><bgf:production><label>newInstance</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>new</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>ClassOrInterfaceType</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>ClassBody</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>exprName</label><nonterminal>Expr</nonterminal><bgf:expression><nonterminal>ExprName</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Expr</nonterminal><bgf:expression><nonterminal>ArrayCreationExpr</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>Expr</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>invoke</label><nonterminal>Expr</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>MethodSpec</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>arrayType</label><nonterminal>ArrayType</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><terminal>[</terminal></bgf:expression><bgf:expression><terminal>]</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>classBody</label><nonterminal>ClassBody</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>ClassBodyDec</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>TypeDecSpec</nonterminal><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression></bgf:production><bgf:production><label>member</label><nonterminal>TypeDecSpec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeDecSpec</nonterminal></bgf:expression><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>PrimType</nonterminal><bgf:expression><nonterminal>NumType</nonterminal></bgf:expression></bgf:production><bgf:production><label>boolean</label><nonterminal>PrimType</nonterminal><bgf:expression><terminal>boolean</terminal></bgf:expression></bgf:production><bgf:production><label>enumDec</label><nonterminal>EnumDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>EnumDecHead</nonterminal></bgf:expression><bgf:expression><nonterminal>EnumBody</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>ActualTypeArg</nonterminal><bgf:expression><nonterminal>Type</nonterminal></bgf:expression></bgf:production><bgf:production><label>wildcard</label><nonterminal>ActualTypeArg</nonterminal><bgf:expression><sequence><bgf:expression><terminal>?</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>WildcardBound</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>methodName</label><nonterminal>MethodName</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>AmbName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>methodName</label><nonterminal>MethodName</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>InterfaceDecHead</nonterminal></bgf:expression><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>InterfaceMemberDec</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>AnnoDecHead</nonterminal></bgf:expression><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>AnnoElemDec</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>abstract</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>strictfp</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>InterfaceMod</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><label>voidClass</label><nonterminal>ClassLiteral</nonterminal><bgf:expression><sequence><bgf:expression><terminal>void</terminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>class</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>class</label><nonterminal>ClassLiteral</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>class</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>StringLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><nonterminal>AbstractMethodMod</nonterminal><bgf:expression><terminal>abstract</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>AbstractMethodMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><label>abstractMethodDec</label><nonterminal>AbstractMethodDec</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>ResultType</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Throws</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>deprAbstractMethodDec</label><nonterminal>AbstractMethodDec</nonterminal><bgf:expression><sequence><bgf:expression><optional><bgf:expression><nonterminal>TypeParams</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>ResultType</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>FormalParam</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>Dim</nonterminal></bgf:expression></plus></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>Throws</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>id</label><nonterminal>Id</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>typeBound</label><nonterminal>TypeBound</nonterminal><bgf:expression><sequence><bgf:expression><terminal>extends</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>ClassOrInterfaceType</nonterminal></bgf:expression><bgf:expression><terminal>&amp;</terminal></bgf:expression></seplistplus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>AnnoElemDec</nonterminal><bgf:expression><nonterminal>EnumDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>semicolon</label><nonterminal>AnnoElemDec</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>AnnoElemDec</nonterminal><bgf:expression><nonterminal>ClassDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>AnnoElemDec</nonterminal><bgf:expression><nonterminal>ConstantDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>AnnoElemDec</nonterminal><bgf:expression><nonterminal>InterfaceDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>annoMethodDec</label><nonterminal>AnnoElemDec</nonterminal><bgf:expression><sequence><bgf:expression><star><bgf:expression><nonterminal>AbstractMethodMod</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><nonterminal>Type</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression><bgf:expression><terminal>(</terminal></bgf:expression><bgf:expression><terminal>)</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>DefaultVal</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>false</label><nonterminal>BoolLiteral</nonterminal><bgf:expression><terminal>false</terminal></bgf:expression></bgf:production><bgf:production><label>true</label><nonterminal>BoolLiteral</nonterminal><bgf:expression><terminal>true</terminal></bgf:expression></bgf:production><bgf:production><label>noMethodBody</label><nonterminal>MethodBody</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodBody</nonterminal><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></bgf:production><bgf:production><label>exprName</label><nonterminal>ExprName</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><label>exprName</label><nonterminal>ExprName</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>AmbName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>defaultVal</label><nonterminal>DefaultVal</nonterminal><bgf:expression><terminal>default</terminal></bgf:expression></bgf:production><bgf:production><label>methodDec</label><nonterminal>MethodDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>MethodDecHead</nonterminal></bgf:expression><bgf:expression><nonterminal>MethodBody</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>ambName</label><nonterminal>AmbName</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>AmbName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>ambName</label><nonterminal>AmbName</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>strictfp</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>synchronized</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>protected</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>private</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>static</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>public</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>abstract</terminal></bgf:expression></bgf:production><bgf:production><nonterminal>MethodMod</nonterminal><bgf:expression><terminal>native</terminal></bgf:expression></bgf:production><bgf:production><label>newArray</label><nonterminal>ArrayCreationExpr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>new</terminal></bgf:expression><bgf:expression><nonterminal>ArrayBaseType</nonterminal></bgf:expression><bgf:expression><plus><bgf:expression><nonterminal>DimExpr</nonterminal></bgf:expression></plus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>newArray</label><nonterminal>ArrayCreationExpr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>new</terminal></bgf:expression><bgf:expression><nonterminal>ArrayBaseType</nonterminal></bgf:expression><bgf:expression><nonterminal>ArrayInit</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>RefType</nonterminal><bgf:expression><nonterminal>ClassOrInterfaceType</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>RefType</nonterminal><bgf:expression><nonterminal>ArrayType</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>TypeDec</nonterminal><bgf:expression><nonterminal>InterfaceDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>TypeDec</nonterminal><bgf:expression><nonterminal>ClassDec</nonterminal></bgf:expression></bgf:production><bgf:production><label>semicolon</label><nonterminal>TypeDec</nonterminal><bgf:expression><terminal>;</terminal></bgf:expression></bgf:production><bgf:production><label>typeArgs</label><nonterminal>TypeArgs</nonterminal><bgf:expression><sequence><bgf:expression><terminal>&lt;</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>ActualTypeArg</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression><bgf:expression><terminal>&gt;</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>LHS</nonterminal><bgf:expression><nonterminal>ExprName</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>LHS</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>annoDecHead</label><nonterminal>AnnoDecHead</nonterminal><bgf:expression><sequence><bgf:expression><terminal>@</terminal></bgf:expression><bgf:expression><terminal>interface</terminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeParam</label><nonterminal>TypeParam</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeVarId</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeBound</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>method</label><nonterminal>MethodSpec</nonterminal><bgf:expression><nonterminal>MethodName</nonterminal></bgf:expression></bgf:production><bgf:production><label>superMethod</label><nonterminal>MethodSpec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>genericMethod</label><nonterminal>MethodSpec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>AmbName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>qSuperMethod</label><nonterminal>MethodSpec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeName</nonterminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><terminal>super</terminal></bgf:expression><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>method</label><nonterminal>MethodSpec</nonterminal><bgf:expression><sequence><bgf:expression><terminal>.</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>Type</nonterminal><bgf:expression><nonterminal>RefType</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>Type</nonterminal><bgf:expression><nonterminal>PrimType</nonterminal></bgf:expression></bgf:production><bgf:production><label>superDec</label><nonterminal>Super</nonterminal><bgf:expression><sequence><bgf:expression><terminal>extends</terminal></bgf:expression><bgf:expression><nonterminal>ClassType</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>CharLiteral</nonterminal><bgf:expression><epsilon /></bgf:expression></bgf:production><bgf:production><label>instanceInit</label><nonterminal>InstanceInit</nonterminal><bgf:expression><nonterminal>Block</nonterminal></bgf:expression></bgf:production><bgf:production><label>enumBody</label><nonterminal>EnumBody</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>EnumConst</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>EnumBodyDecs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>enumBody</label><nonterminal>EnumBody</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><sepliststar><bgf:expression><nonterminal>EnumConst</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></sepliststar></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>EnumBodyDecs</nonterminal></bgf:expression></optional></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>throwsDec</label><nonterminal>Throws</nonterminal><bgf:expression><sequence><bgf:expression><terminal>throws</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>ExceptionType</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>block</label><nonterminal>Block</nonterminal><bgf:expression><sequence><bgf:expression><terminal>{</terminal></bgf:expression><bgf:expression><star><bgf:expression><nonterminal>BlockStm</nonterminal></bgf:expression></star></bgf:expression><bgf:expression><terminal>}</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>typeVar</label><nonterminal>TypeVar</nonterminal><bgf:expression><nonterminal>TypeVarId</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>TypeVarId</nonterminal><bgf:expression><nonterminal>Id</nonterminal></bgf:expression></bgf:production><bgf:production><label>dim</label><nonterminal>Dim</nonterminal><bgf:expression><sequence><bgf:expression><terminal>[</terminal></bgf:expression><bgf:expression><terminal>]</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>BlockStm</nonterminal><bgf:expression><nonterminal>Stm</nonterminal></bgf:expression></bgf:production><bgf:production><label>classDecStm</label><nonterminal>BlockStm</nonterminal><bgf:expression><nonterminal>ClassDec</nonterminal></bgf:expression></bgf:production><bgf:production><nonterminal>BlockStm</nonterminal><bgf:expression><nonterminal>LocalVarDecStm</nonterminal></bgf:expression></bgf:production><bgf:production><label>dim</label><nonterminal>DimExpr</nonterminal><bgf:expression><sequence><bgf:expression><terminal>[</terminal></bgf:expression><bgf:expression><nonterminal>Expr</nonterminal></bgf:expression><bgf:expression><terminal>]</terminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>implementsDec</label><nonterminal>Interfaces</nonterminal><bgf:expression><sequence><bgf:expression><terminal>implements</terminal></bgf:expression><bgf:expression><seplistplus><bgf:expression><nonterminal>InterfaceType</nonterminal></bgf:expression><bgf:expression><terminal>,</terminal></bgf:expression></seplistplus></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><nonterminal>VarMod</nonterminal><bgf:expression><terminal>final</terminal></bgf:expression></bgf:production><bgf:production><label>varDec</label><nonterminal>VarDec</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>VarDecId</nonterminal></bgf:expression><bgf:expression><terminal>=</terminal></bgf:expression><bgf:expression><nonterminal>VarInit</nonterminal></bgf:expression></sequence></bgf:expression></bgf:production><bgf:production><label>varDec</label><nonterminal>VarDec</nonterminal><bgf:expression><nonterminal>VarDecId</nonterminal></bgf:expression></bgf:production><bgf:production><label>classOrInterfaceType</label><nonterminal>ClassOrInterfaceType</nonterminal><bgf:expression><sequence><bgf:expression><nonterminal>TypeDecSpec</nonterminal></bgf:expression><bgf:expression><optional><bgf:expression><nonterminal>TypeArgs</nonterminal></bgf:expression></optional></bgf:expression></sequence></bgf:expression></bgf:production></bgf:grammar>
