mml.Content:
        mml.ctoken
        mml.cspecial
        mml.cother
        mml.csemantics
        mml.c0ary
        mml.cconstructor
        mml.cquantifier
        mml.cop1ary
        mml.cop2ary
        mml.copnary
        mml.copmisc
        mml.crel2ary
        mml.crelnary
mml.ContInPres:
        mml.ci.qname
        mml.csymbol.qname
        mml.cn.qname
        mml.c0ary
        mml.apply.qname
        mml.fn.qname
        mml.lambda.qname
        mml.reln.qname
        mml.cconstructor
        mml.semantics.qname
        mml.declare.qname
mml.att-base:
        (base::mml.number.datatype)?
mml.att-closure:
        (closure::("open" | "closed" | "open-closed" | "closed-open"))?
mml.att-definition:
        (definitionURL::mml.uri.datatype)?
mml.att-encoding:
        (encoding::STR)?
mml.att-nargs:
        (nargs::("nary" | mml.number.datatype))?
mml.att-occurrence:
        (occurrence::("prefix" | "infix" | "function-model"))?
mml.att-order:
        (order::("lexicographic" | "numeric"))?
mml.att-scope:
        (scope::("local" | "global"))?
mml.att-type:
        (type::("e-notation" | "integer" | "rational" | "real" | "float" | "complex-polar" | "complex-cartesian" | "constant"))?
mml.cconstructor:
        mml.interval.qname
        mml.list.qname
        mml.matrix.qname
        mml.matrixrow.qname
        mml.set.qname
        mml.vector.qname
        mml.piecewise.qname
mml.interval.qname:
        interval::(mml.ContentExpression mml.Common.attrib mml.att-closure)
mml.set.qname:
        set::(mml.ContentExpression mml.Common.attrib mml.att-type)
mml.list.qname:
        list::(mml.ContentExpression mml.Common.attrib mml.att-order)
mml.vector.qname:
        vector::(mml.ContentExpression mml.Common.attrib)
mml.matrix.qname:
        matrix::(mml.ContentExpression mml.Common.attrib)
mml.matrixrow.qname:
        matrixrow::(mml.ContentExpression mml.Common.attrib)
mml.piecewise.qname:
        piecewise::(mml.piece.qname* mml.otherwise.qname? mml.Common.attrib)
mml.piece.qname:
        piece::(mml.ContentExpression mml.Common.attrib)
mml.otherwise.qname:
        otherwise::(mml.ContentExpression mml.Common.attrib)
mml.ctoken:
        mml.csymbol.qname
        mml.ci.qname
        mml.cn.qname
mml.ci.qname:
        ci::((mml.MathMLCharacters | mml.PresInCont)* mml.Common.attrib mml.att-type mml.att-definition mml.att-encoding)
mml.csymbol.qname:
        csymbol::((mml.MathMLCharacters | mml.PresInCont)* mml.Common.attrib mml.att-type mml.att-definition mml.att-encoding)
mml.cn.qname:
        cn::((mml.MathMLCharacters | mml.PresInCont | mml.sep.qname)* mml.Common.attrib mml.att-type mml.att-base mml.att-definition mml.att-encoding)
mml.operators.common.attrib:
        mml.Common.attrib mml.att-definition mml.att-encoding
mml.cfuncop1ary:
        mml.inverse.qname
        mml.ident.qname
        mml.domain.qname
        mml.codomain.qname
        mml.image.qname
mml.inverse.qname:
        inverse::(EPSILON mml.operators.common.attrib)
mml.domain.qname:
        domain::(EPSILON mml.operators.common.attrib)
mml.codomain.qname:
        codomain::(EPSILON mml.operators.common.attrib)
mml.image.qname:
        image::(EPSILON mml.operators.common.attrib)
mml.cfuncopnary:
        mml.fn.qname
        mml.compose.qname
mml.fn.qname:
        fn::(mml.ContentExpression mml.operators.common.attrib)
mml.ident.qname:
        ident::(EPSILON mml.operators.common.attrib)
mml.compose.qname:
        compose::(EPSILON mml.operators.common.attrib)
mml.carithop1ary:
        mml.abs.qname
        mml.conjugate.qname
        mml.exp.qname
        mml.factorial.qname
        mml.arg.qname
        mml.real.qname
        mml.imaginary.qname
        mml.floor.qname
        mml.ceiling.qname
mml.exp.qname:
        exp::(EPSILON mml.operators.common.attrib)
mml.abs.qname:
        abs::(EPSILON mml.operators.common.attrib)
mml.arg.qname:
        arg::(EPSILON mml.operators.common.attrib)
mml.real.qname:
        real::(EPSILON mml.operators.common.attrib)
mml.imaginary.qname:
        imaginary::(EPSILON mml.operators.common.attrib)
mml.conjugate.qname:
        conjugate::(EPSILON mml.operators.common.attrib)
mml.factorial.qname:
        factorial::(EPSILON mml.operators.common.attrib)
mml.floor.qname:
        floor::(EPSILON mml.operators.common.attrib)
mml.ceiling.qname:
        ceiling::(EPSILON mml.operators.common.attrib)
mml.carithop1or2ary:
        mml.minus.qname
mml.minus.qname:
        minus::(EPSILON mml.operators.common.attrib)
mml.carithop2ary:
        mml.quotient.qname
        mml.divide.qname
        mml.power.qname
        mml.rem.qname
mml.quotient.qname:
        quotient::(EPSILON mml.operators.common.attrib)
mml.divide.qname:
        divide::(EPSILON mml.operators.common.attrib)
mml.power.qname:
        power::(EPSILON mml.operators.common.attrib)
mml.rem.qname:
        rem::(EPSILON mml.operators.common.attrib)
mml.carithopnary:
        mml.plus.qname
        mml.times.qname
        mml.max.qname
        mml.min.qname
        mml.gcd.qname
        mml.lcm.qname
mml.plus.qname:
        plus::(EPSILON mml.operators.common.attrib)
mml.max.qname:
        max::(EPSILON mml.operators.common.attrib)
mml.min.qname:
        min::(EPSILON mml.operators.common.attrib)
mml.times.qname:
        times::(EPSILON mml.operators.common.attrib)
mml.gcd.qname:
        gcd::(EPSILON mml.operators.common.attrib)
mml.lcm.qname:
        lcm::(EPSILON mml.operators.common.attrib)
mml.carithoproot:
        mml.root.qname
mml.root.qname:
        root::(EPSILON mml.operators.common.attrib)
mml.clogicopquant:
        mml.exists.qname
        mml.forall.qname
mml.exists.qname:
        exists::(EPSILON mml.operators.common.attrib)
mml.forall.qname:
        forall::(EPSILON mml.operators.common.attrib)
mml.clogicopnary:
        mml.and.qname
        mml.or.qname
        mml.xor.qname
mml.and.qname:
        and::(EPSILON mml.operators.common.attrib)
mml.or.qname:
        or::(EPSILON mml.operators.common.attrib)
mml.xor.qname:
        xor::(EPSILON mml.operators.common.attrib)
mml.clogicop1ary:
        mml.not.qname
mml.not.qname:
        not::(EPSILON mml.operators.common.attrib)
mml.clogicop2ary:
        mml.implies.qname
mml.implies.qname:
        implies::(EPSILON mml.operators.common.attrib)
mml.ccalcop:
        mml.log.qname
        mml.int.qname
        mml.diff.qname
        mml.partialdiff.qname
        mml.divergence.qname
        mml.grad.qname
        mml.curl.qname
        mml.laplacian.qname
mml.divergence.qname:
        divergence::(EPSILON mml.operators.common.attrib)
mml.grad.qname:
        grad::(EPSILON mml.operators.common.attrib)
mml.curl.qname:
        curl::(EPSILON mml.operators.common.attrib)
mml.laplacian.qname:
        laplacian::(EPSILON mml.operators.common.attrib)
mml.log.qname:
        log::(EPSILON mml.operators.common.attrib)
mml.int.qname:
        int::(EPSILON mml.operators.common.attrib)
mml.diff.qname:
        diff::(EPSILON mml.operators.common.attrib)
mml.partialdiff.qname:
        partialdiff::(EPSILON mml.operators.common.attrib)
mml.ccalcop1ary:
        mml.ln.qname
mml.ln.qname:
        ln::(EPSILON mml.operators.common.attrib)
mml.csetop1ary:
        mml.card.qname
mml.card.qname:
        card::(EPSILON mml.operators.common.attrib)
mml.csetop2ary:
        mml.setdiff.qname
mml.setdiff.qname:
        setdiff::(EPSILON mml.operators.common.attrib)
mml.csetopnary:
        mml.union.qname
        mml.intersect.qname
        mml.cartesianproduct.qname
mml.union.qname:
        union::(EPSILON mml.operators.common.attrib)
mml.intersect.qname:
        intersect::(EPSILON mml.operators.common.attrib)
mml.cartesianproduct.qname:
        cartesianproduct::(EPSILON mml.operators.common.attrib)
mml.cseqop:
        mml.sum.qname
        mml.product.qname
        mml.limit.qname
mml.sum.qname:
        sum::(EPSILON mml.operators.common.attrib)
mml.product.qname:
        product::(EPSILON mml.operators.common.attrib)
mml.limit.qname:
        limit::(EPSILON mml.operators.common.attrib)
mml.ctrigop:
        mml.sin.qname
        mml.cos.qname
        mml.tan.qname
        mml.sec.qname
        mml.csc.qname
        mml.cot.qname
        mml.sinh.qname
        mml.cosh.qname
        mml.tanh.qname
        mml.sech.qname
        mml.csch.qname
        mml.coth.qname
        mml.arcsin.qname
        mml.arccos.qname
        mml.arctan.qname
        mml.arccosh.qname
        mml.arccot.qname
        mml.arccoth.qname
        mml.arccsc.qname
        mml.arccsch.qname
        mml.arcsec.qname
        mml.arcsech.qname
        mml.arcsinh.qname
        mml.arctanh.qname
mml.sin.qname:
        sin::(EPSILON mml.operators.common.attrib)
mml.cos.qname:
        cos::(EPSILON mml.operators.common.attrib)
mml.tan.qname:
        tan::(EPSILON mml.operators.common.attrib)
mml.sec.qname:
        sec::(EPSILON mml.operators.common.attrib)
mml.csc.qname:
        csc::(EPSILON mml.operators.common.attrib)
mml.cot.qname:
        cot::(EPSILON mml.operators.common.attrib)
mml.sinh.qname:
        sinh::(EPSILON mml.operators.common.attrib)
mml.cosh.qname:
        cosh::(EPSILON mml.operators.common.attrib)
mml.tanh.qname:
        tanh::(EPSILON mml.operators.common.attrib)
mml.sech.qname:
        sech::(EPSILON mml.operators.common.attrib)
mml.csch.qname:
        csch::(EPSILON mml.operators.common.attrib)
mml.coth.qname:
        coth::(EPSILON mml.operators.common.attrib)
mml.arcsin.qname:
        arcsin::(EPSILON mml.operators.common.attrib)
mml.arccos.qname:
        arccos::(EPSILON mml.operators.common.attrib)
mml.arctan.qname:
        arctan::(EPSILON mml.operators.common.attrib)
mml.arccosh.qname:
        arccosh::(EPSILON mml.operators.common.attrib)
mml.arccot.qname:
        arccot::(EPSILON mml.operators.common.attrib)
mml.arccoth.qname:
        arccoth::(EPSILON mml.operators.common.attrib)
mml.arccsc.qname:
        arccsc::(EPSILON mml.operators.common.attrib)
mml.arccsch.qname:
        arccsch::(EPSILON mml.operators.common.attrib)
mml.arcsec.qname:
        arcsec::(EPSILON mml.operators.common.attrib)
mml.arcsech.qname:
        arcsech::(EPSILON mml.operators.common.attrib)
mml.arcsinh.qname:
        arcsinh::(EPSILON mml.operators.common.attrib)
mml.arctanh.qname:
        arctanh::(EPSILON mml.operators.common.attrib)
mml.cstatopnary:
        mml.mean.qname
        mml.sdev.qname
        mml.variance.qname
        mml.median.qname
        mml.mode.qname
mml.mean.qname:
        mean::(EPSILON mml.operators.common.attrib)
mml.sdev.qname:
        sdev::(EPSILON mml.operators.common.attrib)
mml.variance.qname:
        variance::(EPSILON mml.operators.common.attrib)
mml.median.qname:
        median::(EPSILON mml.operators.common.attrib)
mml.mode.qname:
        mode::(EPSILON mml.operators.common.attrib)
mml.cstatopmoment:
        mml.moment.qname
mml.moment.qname:
        moment::(EPSILON mml.operators.common.attrib)
mml.clalgop1ary:
        mml.determinant.qname
        mml.transpose.qname
mml.determinant.qname:
        determinant::(EPSILON mml.operators.common.attrib)
mml.transpose.qname:
        transpose::(EPSILON mml.operators.common.attrib)
mml.clalgop2ary:
        mml.vectorproduct.qname
        mml.scalarproduct.qname
        mml.outerproduct.qname
mml.vectorproduct.qname:
        vectorproduct::(EPSILON mml.operators.common.attrib)
mml.scalarproduct.qname:
        scalarproduct::(EPSILON mml.operators.common.attrib)
mml.outerproduct.qname:
        outerproduct::(EPSILON mml.operators.common.attrib)
mml.clalgopnary:
        mml.selector.qname
mml.selector.qname:
        selector::(EPSILON mml.operators.common.attrib)
mml.cop1ary:
        mml.cfuncop1ary
        mml.carithop1ary
        mml.clogicop1ary
        mml.ccalcop1ary
        mml.ctrigop
        mml.clalgop1ary
        mml.csetop1ary
mml.cop2ary:
        mml.carithop2ary
        mml.clogicop2ary
        mml.clalgop2ary
        mml.csetop2ary
mml.copnary:
        mml.cfuncopnary
        mml.carithopnary
        mml.clogicopnary
        mml.csetopnary
        mml.cstatopnary
        mml.clalgopnary
mml.copmisc:
        mml.carithoproot
        mml.carithop1or2ary
        mml.ccalcop
        mml.cseqop
        mml.cstatopmoment
        mml.clogicopquant
mml.cother:
        mml.condition.qname
        mml.declare.qname
        mml.sep.qname
mml.condition.qname:
        condition::(mml.ContentExpression mml.Common.attrib)
mml.declare.qname:
        declare::(mml.ContentExpression mml.Common.attrib mml.att-type mml.att-scope mml.att-nargs mml.att-occurrence mml.att-definition mml.att-encoding)
mml.sep.qname:
        sep::EPSILON
mml.cquantifier:
        mml.lowlimit.qname
        mml.uplimit.qname
        mml.bvar.qname
        mml.degree.qname
        mml.logbase.qname
        mml.momentabout.qname
        mml.domainofapplication.qname
mml.lowlimit.qname:
        lowlimit::(mml.ContentExpression mml.Common.attrib)
mml.uplimit.qname:
        uplimit::(mml.ContentExpression mml.Common.attrib)
mml.bvar.qname:
        bvar::(mml.ContentExpression mml.Common.attrib)
mml.degree.qname:
        degree::(mml.ContentExpression mml.Common.attrib)
mml.logbase.qname:
        logbase::(mml.ContentExpression mml.Common.attrib)
mml.momentabout.qname:
        momentabout::(mml.ContentExpression mml.Common.attrib)
mml.domainofapplication.qname:
        domainofapplication::(mml.ContentExpression mml.Common.attrib)
mml.cgenrel2ary:
        mml.neq.qname
        mml.factorof.qname
mml.neq.qname:
        neq::(EPSILON mml.operators.common.attrib)
mml.factorof.qname:
        factorof::(EPSILON mml.operators.common.attrib)
mml.cgenrelnary:
        mml.eq.qname
        mml.leq.qname
        mml.lt.qname
        mml.geq.qname
        mml.gt.qname
        mml.equivalent.qname
        mml.approx.qname
mml.eq.qname:
        eq::(EPSILON mml.operators.common.attrib)
mml.equivalent.qname:
        equivalent::(EPSILON mml.operators.common.attrib)
mml.approx.qname:
        approx::(EPSILON mml.operators.common.attrib)
mml.gt.qname:
        gt::(EPSILON mml.operators.common.attrib)
mml.lt.qname:
        lt::(EPSILON mml.operators.common.attrib)
mml.geq.qname:
        geq::(EPSILON mml.operators.common.attrib)
mml.leq.qname:
        leq::(EPSILON mml.operators.common.attrib)
mml.csetrel2ary:
        mml.in.qname
        mml.notin.qname
        mml.notsubset.qname
        mml.notprsubset.qname
mml.in.qname:
        in::(EPSILON mml.operators.common.attrib)
mml.notin.qname:
        notin::(EPSILON mml.operators.common.attrib)
mml.notsubset.qname:
        notsubset::(EPSILON mml.operators.common.attrib)
mml.notprsubset.qname:
        notprsubset::(EPSILON mml.operators.common.attrib)
mml.csetrelnary:
        mml.subset.qname
        mml.prsubset.qname
mml.subset.qname:
        subset::(EPSILON mml.operators.common.attrib)
mml.prsubset.qname:
        prsubset::(EPSILON mml.operators.common.attrib)
mml.cseqrel2ary:
        mml.tendsto.qname
mml.tendsto.qname:
        tendsto::(EPSILON mml.operators.common.attrib mml.att-type)
mml.crel2ary:
        mml.cgenrel2ary
        mml.csetrel2ary
        mml.cseqrel2ary
mml.crelnary:
        mml.cgenrelnary
        mml.csetrelnary
mml.csemantics:
        mml.semantics.qname
        mml.annotation.qname
        mml.annotation-xml.qname
mml.semantics.qname:
        semantics::(mml.ContentExpression mml.Common.attrib mml.att-definition mml.att-encoding)
mml.annotation.qname:
        annotation::(mml.Annotation.datatype mml.Common.attrib mml.att-encoding)
mml.annotation-xml.qname:
        annotation-xml::(mml.Annotation-xml.datatype mml.Common.attrib mml.att-encoding)
mml.cspecial:
        mml.apply.qname
        mml.reln.qname
        mml.lambda.qname
mml.apply.qname:
        apply::(mml.ContentExpression mml.Common.attrib)
mml.reln.qname:
        reln::(mml.ContentExpression mml.Common.attrib)
mml.lambda.qname:
        lambda::(mml.ContentExpression mml.Common.attrib)
mml.c0ary:
        mml.integers.qname
        mml.reals.qname
        mml.rationals.qname
        mml.naturalnumbers.qname
        mml.complexes.qname
        mml.primes.qname
        mml.exponentiale.qname
        mml.imaginaryi.qname
        mml.notanumber.qname
        mml.true.qname
        mml.false.qname
        mml.emptyset.qname
        mml.eulergamma.qname
        mml.infinity.qname
mml.integers.qname:
        integers::(EPSILON mml.operators.common.attrib)
mml.reals.qname:
        reals::(EPSILON mml.operators.common.attrib)
mml.rationals.qname:
        rationals::(EPSILON mml.operators.common.attrib)
mml.naturalnumbers.qname:
        naturalnumbers::(EPSILON mml.operators.common.attrib)
mml.complexes.qname:
        complexes::(EPSILON mml.operators.common.attrib)
mml.primes.qname:
        primes::(EPSILON mml.operators.common.attrib)
mml.exponentiale.qname:
        exponentiale::(EPSILON mml.operators.common.attrib)
mml.imaginaryi.qname:
        imaginaryi::(EPSILON mml.operators.common.attrib)
mml.notanumber.qname:
        notanumber::(EPSILON mml.operators.common.attrib)
mml.true.qname:
        true::(EPSILON mml.operators.common.attrib)
mml.false.qname:
        false::(EPSILON mml.operators.common.attrib)
mml.emptyset.qname:
        emptyset::(EPSILON mml.operators.common.attrib)
mml.pi.qname:
        pi::(EPSILON mml.operators.common.attrib)
mml.eulergamma.qname:
        eulergamma::(EPSILON mml.operators.common.attrib)
mml.infinity.qname:
        infinity::(EPSILON mml.operators.common.attrib)
mml.id.datatype:
        STR
mml.idref.datatype:
        STR
mml.number.datatype:
        INT
mml.positiveinteger.datatype:
        INT
mml.uri.datatype:
        STR
mml.nonnegativefloat.datatype:
        STR
mml.length.datatype:
        STR
mml.color.datatype:
        STR
        STR
        "transparent"
mml.Annotation.datatype:
        STR
mml.Annotation-xml.datatype:
        (STR | (STR* mml.Annotation-xml.datatype))*
mml.namedspace.datatype:
        STR
        "veryverythinmathspace"
        "verythinmathspace"
        "thinmathspace"
        "mediummathspace"
        "thickmathspace"
        "verythickmathspace"
        "veryverythickmathspace"
mml.align.datatype:
        ("top" | "bottom" | "center" | "baseline" | "axis") INT?
mml.rowalign.datatype:
        ("top" | "bottom" | "center" | "baseline" | "axis")+
mml.columnalign.datatype:
        ("left" | "center" | "right")+
mml.columnwidth.datatype:
        ("auto" | STR | (STR | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace") | "fit")+
mml.columnspan.datatype:
        mml.positiveinteger.datatype
mml.groupalign.datatype:
        STR
mml.alignmentscope.datatype:
        ("true" | "false")+
mml.rowspacing.datatype:
        STR+
mml.columnspacing.datatype:
        (STR (STR | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace"))+
mml.lines.datatype:
        ("none" | "solid" | "dashed")+
mml.framespacing.datatype:
        (STR | (STR | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace")) (STR | (STR | "veryverythinmathspace" | "verythinmathspace" | "thinmathspace" | "mediummathspace" | "thickmathspace" | "verythickmathspace" | "veryverythickmathspace"))
mml.ContentExpression:
        (mml.Content | mml.PresInCont)*
mml.PresExpression:
        (mml.Presentation | mml.ContInPres)*
mml.MathExpression:
        (mml.PresInCont | mml.ContInPres)*
mml.MathMLCharacters:
        mml.mglyph.qname
        STR
mml.Common.attrib:
        (xlink:href::mml.uri.datatype)? (class::STR)? (style::STR)? (id::mml.id.datatype)? (xref::mml.idref.datatype)? (other::STR)?
mml.att-macros:
        (macros::STR)?
mml.att-mode:
        (mode::STR)?
mml.att-display:
        (display::STR)?
mml.att-topinfo:
        mml.Common.attrib mml.att-macros mml.att-mode mml.att-display
mml.att-baseline:
        (baseline::STR)?
mml.att-overflow:
        (overflow::("scroll" | "elide" | "truncate" | "scale"))?
mml.att-altimg:
        (altimg::mml.uri.datatype)?
mml.att-alttext:
        (alttext::STR)?
mml.att-browif:
        mml.att-type mml.att-name mml.att-height mml.att-width mml.att-baseline mml.att-overflow mml.att-altimg mml.att-alttext
mml.math.qname:
        math::(mml.MathExpression mml.att-topinfo mml.att-browif)
mml.pactions:
        mml.maction.qname
mml.maction.qname:
        maction::(mml.PresExpression mml.Common.attrib mml.att-actiontype)
mml.PresInCont:
        mml.ptoken
        mml.petoken
        mml.plschema
        mml.peschema
        mml.pactions
mml.Presentation:
        mml.ptoken
        mml.petoken
        mml.pscreschema
        mml.plschema
        mml.peschema
        mml.pactions
mml.att-fontsize:
        (fontsize::mml.length.datatype)?
mml.att-fontweight:
        (fontweight::("normal" | "bold"))?
mml.att-fontstyle:
        (fontstyle::("normal" | "italic"))?
mml.att-fontfamily:
        (fontfamily::STR)?
mml.att-color:
        (color::mml.color.datatype)?
mml.att-mathvariant:
        (mathvariant::("normal" | "bold" | "italic" | "bold-italic" | "double-struck" | "bold-fraktur" | "script" | "bold-script" | "fraktur" | "sans-serif" | "bold-sans-serif" | "sans-serif-italic" | "sans-serif-bold-italic" | "monospace"))?
mml.att-mathsize:
        (mathsize::("small" | "normal" | "big" | mml.length.datatype))?
mml.att-mathcolor:
        (mathcolor::mml.color.datatype)?
mml.att-mathbackground:
        (mathbackground::mml.color.datatype)?
mml.att-fontinfo:
        mml.att-fontsize mml.att-fontweight mml.att-fontstyle mml.att-fontfamily mml.att-color mml.att-mathvariant mml.att-mathsize mml.att-mathcolor mml.att-mathbackground
mml.att-form:
        (form::("prefix" | "infix" | "postfix"))?
mml.att-fence:
        (fence::("true" | "false"))?
mml.att-separator:
        (separator::("true" | "false"))?
mml.att-lspace:
        (lspace::mml.namedspace.datatype)?
mml.att-rspace:
        (rspace::mml.namedspace.datatype)?
mml.att-stretchy:
        (stretchy::("true" | "false"))?
mml.att-symmetric:
        (symmetric::("true" | "false"))?
mml.att-maxsize:
        (maxsize::(mml.namedspace.datatype | "infinity"))?
mml.att-minsize:
        (minsize::mml.namedspace.datatype)?
mml.att-largeop:
        (largeop::("true" | "false"))?
mml.att-movablelimits:
        (movablelimits::("true" | "false"))?
mml.att-accent:
        (accent::("true" | "false"))?
mml.att-opinfo:
        mml.att-form mml.att-fence mml.att-separator mml.att-lspace mml.att-rspace mml.att-stretchy mml.att-symmetric mml.att-maxsize mml.att-minsize mml.att-largeop mml.att-movablelimits mml.att-accent
mml.att-width:
        (width::mml.namedspace.datatype)?
mml.att-height:
        (height::mml.length.datatype)?
mml.att-depth:
        (depth::mml.length.datatype)?
mml.att-linebreak:
        (linebreak::("auto" | "newline" | "indentingnewline" | "nobreak" | "goodbreak" | "badbreak"))?
mml.att-sizeinfo:
        mml.att-width mml.att-height mml.att-depth
mml.att-lquote:
        (lquote::STR)?
mml.att-rquote:
        (rquote::STR)?
mml.att-linethickness:
        (linethickness::(mml.length.datatype | "thin" | "medium" | "thick"))?
mml.att-scriptlevel:
        (scriptlevel::mml.number.datatype)?
mml.att-displaystyle:
        (displaystyle::("true" | "false"))?
mml.att-scriptsizemultiplier:
        (scriptsizemultiplier::mml.nonnegativefloat.datatype)?
mml.att-scriptminsize:
        (scriptminsize::mml.length.datatype)?
mml.att-background:
        (background::mml.color.datatype)?
mml.att-veryverythinmathspace:
        (veryverythinmathspace::mml.length.datatype)?
mml.att-verythinmathspace:
        (verythinmathspace::mml.length.datatype)?
mml.att-thinmathspace:
        (thinmathspace::mml.length.datatype)?
mml.att-mediummathspace:
        (mediummathspace::mml.length.datatype)?
mml.att-thickmathspace:
        (thickmathspace::mml.length.datatype)?
mml.att-verythickmathspace:
        (verythickmathspace::mml.length.datatype)?
mml.att-veryverythickmathspace:
        (veryverythickmathspace::mml.length.datatype)?
mml.att-open:
        (open::STR)?
mml.att-close:
        (close::STR)?
mml.att-separators:
        (separators::STR)?
mml.att-subscriptshift:
        (subscriptshift::mml.length.datatype)?
mml.att-superscriptshift:
        (superscriptshift::mml.length.datatype)?
mml.att-accentunder:
        (accentunder::("true" | "false"))?
mml.att-align:
        (align::mml.align.datatype)?
mml.att-rowalign:
        (rowalign::mml.rowalign.datatype)?
mml.att-columnalign:
        (columnalign::mml.columnalign.datatype)?
mml.att-columnwidth:
        (columnwidth::mml.columnwidth.datatype)?
mml.att-groupalign:
        (groupalign::mml.groupalign.datatype)?
mml.att-alignmentscope:
        (alignmentscope::mml.alignmentscope.datatype)?
mml.att-rowspacing:
        (rowspacing::mml.rowspacing.datatype)?
mml.att-columnspacing:
        (columnspacing::mml.columnspacing.datatype)?
mml.att-rowlines:
        (rowlines::mml.lines.datatype)?
mml.att-columnlines:
        (columnlines::mml.lines.datatype)?
mml.att-frame:
        (frame::("none" | "solid" | "dashed"))?
mml.att-framespacing:
        (framespacing::mml.framespacing.datatype)?
mml.att-equalrows:
        (equalrows::("true" | "false"))?
mml.att-equalcolumns:
        (equalcolumns::("true" | "false"))?
mml.att-tableinfo:
        mml.att-align mml.att-rowalign mml.att-columnalign mml.att-columnwidth mml.att-groupalign mml.att-alignmentscope mml.att-rowspacing mml.att-columnspacing mml.att-rowlines mml.att-columnlines mml.att-frame mml.att-framespacing mml.att-equalrows mml.att-equalcolumns mml.att-displaystyle
mml.att-rowspan:
        (rowspan::("top" | "bottom" | "center" | "baseline" | "axis "))?
mml.att-columnspan:
        (columnspan::mml.columnspan.datatype)?
mml.att-edge:
        (edge::("left" | "right"))?
mml.att-actiontype:
        ((actiontype::"toggle" selection::mml.positiveinteger.datatype) | actiontype::"statusline" | actiontype::"tooltip" | (actiontype::"highlight" mml.color.datatype*) | (actiontype::"menu" selection::mml.positiveinteger.datatype))?
mml.att-name:
        (name::STR)?
mml.att-alt:
        (alt::STR)?
mml.att-index:
        (index::mml.number.datatype)?
mml.att-bevelled:
        (bevelled::("true" | "false"))?
mml.ptoken:
        mml.mi.qname
        mml.mn.qname
        mml.mo.qname
        mml.mtext.qname
        mml.ms.qname
mml.mi.qname:
        mi::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo)
mml.mn.qname:
        mn::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo)
mml.mo.qname:
        mo::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo mml.att-opinfo)
mml.mtext.qname:
        mtext::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo)
mml.ms.qname:
        ms::((mml.MathMLCharacters | mml.malignmark.qname)* mml.Common.attrib mml.att-fontinfo mml.att-lquote mml.att-rquote)
mml.petoken:
        mml.mspace.qname
mml.mspace.qname:
        mspace::(EPSILON mml.Common.attrib mml.att-sizeinfo mml.att-linebreak)
mml.peschema:
        mml.maligngroup.qname
        mml.malignmark.qname
mml.malignmark.qname:
        malignmark::(EPSILON mml.att-edge)
mml.maligngroup.qname:
        maligngroup::(EPSILON mml.Common.attrib mml.att-groupalign)
mml.mglyph.qname:
        mglyph::(EPSILON mml.att-alt mml.att-fontfamily mml.att-index)
mml.pgenschema:
        mml.mrow.qname
        mml.mfrac.qname
        mml.msqrt.qname
        mml.mroot.qname
        mml.menclose.qname
        mml.mstyle.qname
        mml.merror.qname
        mml.mpadded.qname
        mml.mphantom.qname
        mml.mfenced.qname
mml.mrow.qname:
        mrow::(mml.PresExpression mml.Common.attrib)
mml.mfrac.qname:
        mfrac::(mml.PresExpression mml.Common.attrib mml.att-bevelled mml.att-linethickness)
mml.msqrt.qname:
        msqrt::(mml.PresExpression mml.Common.attrib)
mml.menclose.qname:
        menclose::(mml.PresExpression mml.Common.attrib (notation::("longdiv" | "actuarial" | "radical"))?)
mml.mroot.qname:
        mroot::(mml.PresExpression mml.Common.attrib)
mml.mstyle.qname:
        mstyle::(mml.PresExpression mml.Common.attrib mml.att-fontinfo mml.att-opinfo mml.att-lquote mml.att-rquote mml.att-linethickness mml.att-scriptlevel mml.att-scriptsizemultiplier mml.att-scriptminsize mml.att-background mml.att-veryverythinmathspace mml.att-verythinmathspace mml.att-thinmathspace mml.att-mediummathspace mml.att-thickmathspace mml.att-verythickmathspace mml.att-veryverythickmathspace mml.att-open mml.att-close mml.att-separators mml.att-subscriptshift mml.att-superscriptshift mml.att-accentunder mml.att-tableinfo mml.att-rowspan mml.att-columnspan mml.att-edge mml.att-actiontype)
mml.merror.qname:
        merror::(mml.PresExpression mml.Common.attrib)
mml.mpadded.qname:
        mpadded::(mml.PresExpression mml.Common.attrib mml.att-sizeinfo mml.att-lspace)
mml.mphantom.qname:
        mphantom::(mml.PresExpression mml.Common.attrib)
mml.mfenced.qname:
        mfenced::(mml.PresExpression mml.Common.attrib mml.att-open mml.att-close mml.att-separators)
mml.pscreschema:
        mml.mprescripts.qname
        mml.none.qname
mml.mprescripts.qname:
        mprescripts::EPSILON
mml.none.qname:
        none::EPSILON
mml.pscrschema:
        mml.msub.qname
        mml.msup.qname
        mml.msubsup.qname
        mml.munder.qname
        mml.mover.qname
        mml.munderover.qname
        mml.mmultiscripts.qname
mml.msub.qname:
        msub::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift)
mml.msup.qname:
        msup::(mml.PresExpression mml.Common.attrib mml.att-superscriptshift)
mml.msubsup.qname:
        msubsup::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift mml.att-superscriptshift)
mml.munder.qname:
        munder::(mml.PresExpression mml.Common.attrib mml.att-accentunder)
mml.mover.qname:
        mover::(mml.PresExpression mml.Common.attrib mml.att-accent)
mml.munderover.qname:
        munderover::(mml.PresExpression mml.Common.attrib mml.att-accent mml.att-accentunder)
mml.mmultiscripts.qname:
        mmultiscripts::(mml.PresExpression mml.Common.attrib mml.att-subscriptshift mml.att-superscriptshift)
mml.ptabschema:
        mml.mtable.qname
        mml.mtr.qname
        mml.mlabeledtr.qname
        mml.mtd.qname
mml.mtable.qname:
        mtable::(mml.PresExpression mml.Common.attrib mml.att-tableinfo)
mml.mtr.qname:
        mtr::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign)
mml.mlabeledtr.qname:
        mlabeledtr::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign)
mml.mtd.qname:
        mtd::(mml.PresExpression mml.Common.attrib mml.att-rowalign mml.att-columnalign mml.att-groupalign mml.att-rowspan mml.att-columnspan)
mml.plschema:
        mml.pgenschema
        mml.pscrschema
        mml.ptabschema
