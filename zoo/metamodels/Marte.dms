ConstraintKind = required:: ;
ConstraintKind = offered:: ;
ConstraintKind = constraint:: ;
NFP = base_Property::Property ;
Unit = convFactor::MARTE_PrimitivesTypes/Real convOffset::MARTE_PrimitivesTypes/Real baseUnit::MARTE_Foundations/NFPs/Unit base_EnumerationLiteral::EnumerationLiteral ;
NfpConstraint = kind::MARTE_Foundations/NFPs/ConstraintKind base_Constraint::Constraint ;
NfpType = valueAttrib::Property unitAttrib::Property exprAttrib::Property ;
Allocated = base_NamedElement::NamedElement ;
ApplicationAllocationEnd = allocatedTo::MARTE_Foundations/Alloc/ExecutionPlatformAllocationEnd+ ;
ExecutionPlatformAllocationEnd = allocatedFrom::MARTE_Foundations/Alloc/ApplicationAllocationEnd+ ;
AllocationNature = spatialDistribution:: ;
AllocationNature = timeScheduling:: ;
AllocationKind = structural:: ;
AllocationKind = behavioral:: ;
AllocationKind = hybrid:: ;
AllocateActivityGroup = isUnique::MARTE_PrimitivesTypes/Boolean base_ActivityPartition::ActivityPartition ;
ClockRefine = base_Dependency::Dependency constraint::MARTE_Foundations/Time/ClockConstraint+ ;
Allocate = kind::MARTE_Foundations/Alloc/AllocationKind nature::MARTE_Foundations/Alloc/AllocationNature base_Abstraction::Abstraction impliedConstraint::MARTE_Foundations/NFPs/NfpConstraint+ ;
TimedDomain = base_Package::Package ;
Clock = standard::TimeLibrary/TimeStandardKind base_InstanceSpecification::InstanceSpecification type::MARTE_Foundations/Time/ClockType unit::MARTE_Foundations/NFPs/Unit ;
ClockType = nature::TimeTypesLibrary/TimeNatureKind unitType::Enumeration isLogical::MARTE_PrimitivesTypes/Boolean resolAttrib::Property maxValAttrib::Property offsetAttrib::Property getTime::Operation setTime::Operation indexToValue::Operation base_Class::Class ;
TimedElement = on::MARTE_Foundations/Time/Clock+ ;
TimedValueSpecification = interpretation::TimeTypesLibrary/TimeInterpretationKind base_ValueSpecification::ValueSpecification ;
TimedConstraint = interpretation::TimeTypesLibrary/TimeInterpretationKind ;
TimedObservation = ;
TimedInstantObservation = obsKind::TimeLibrary/EventKind base_TimeObservation::TimeObservation ;
TimedDurationObservation = obsKind::TimeLibrary/EventKind base_DurationObservation::DurationObservation ;
TimedEvent = repetition::MARTE_PrimitivesTypes/Integer base_TimeEvent::TimeEvent every::ValueSpecification ;
TimedProcessing = base_Action::Action base_Behavior::Behavior base_Message::Message duration::ValueSpecification start::Event stop::Event ;
ClockConstraint = ;
Resource = resMult::MARTE_PrimitivesTypes/Integer isProtected::MARTE_PrimitivesTypes/Boolean isActive::MARTE_PrimitivesTypes/Boolean base_Property::Property base_InstanceSpecification::InstanceSpecification base_Classifier::Classifier base_Lifeline::Lifeline base_ConnectableElement::ConnectableElement ;
StorageResource = elementSize::MARTE_PrimitivesTypes/Integer ;
CommunicationEndPoint = packetSize::MARTE_PrimitivesTypes/Integer ;
SynchronizationResource = ;
ConcurrencyResource = ;
Scheduler = isPreemptible::MARTE_PrimitivesTypes/Boolean schedPolicy::GRM_BasicTypes/SchedPolicyKind otherSchedPolicy::MARTE_PrimitivesTypes/String schedule::OpaqueExpression processingUnit::MARTE_Foundations/GRM/ProcessingResource+ host::MARTE_Foundations/GRM/ComputingResource ;
ProcessingResource = speedFactor::MARTE_PrimitivesTypes/Real scheduler::MARTE_Foundations/GRM/Scheduler ;
ComputingResource = ;
MutualExclusionResource = protectKind::GRM_BasicTypes/ProtectProtocolKind ceiling::MARTE_PrimitivesTypes/Integer otherProtectProtocol::MARTE_PrimitivesTypes/String ;
SecondaryScheduler = ;
SchedulableResource = schedParams::GRM_BasicTypes/SchedParameters+ ;
CommunicationMedia = elementSize::MARTE_PrimitivesTypes/Integer base_Connector::Connector ;
DeviceResource = ;
TimingResource = ;
ClockResource = ;
TimerResource = duration::BasicNFP_Types/NFP_Duration isPeriodic::MARTE_PrimitivesTypes/Boolean ;
GRService = owner::MARTE_Foundations/GRM/Resource base_ExecutionSpecification::ExecutionSpecification base_BehavioralFeature::BehavioralFeature base_Behavior::Behavior base_Collaboration::Collaboration base_CollaborationUse::CollaborationUse ;
Release = ;
Acquire = isBlocking::MARTE_PrimitivesTypes/Boolean ;
ResourceUsage = execTime::BasicNFP_Types/NFP_Duration+ msgSize::BasicNFP_Types/NFP_DataSize+ allocatedMemory::BasicNFP_Types/NFP_DataSize+ usedMemory::BasicNFP_Types/NFP_DataSize+ powerPeak::BasicNFP_Types/NFP_Power+ energy::BasicNFP_Types/NFP_Energy+ base_NamedElement::NamedElement usedResources::MARTE_Foundations/GRM/Resource+ subUsage::MARTE_Foundations/GRM/ResourceUsage+ ;
FlowProperty = direction::MARTE_Foundations/GCM/DirectionKind base_Property::Property ;
DirectionKind = in:: ;
DirectionKind = out:: ;
DirectionKind = inout:: ;
FlowPort = isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind base_Port::Port ;
MessagePort = base_Port::Port isAtomic::MARTE_PrimitivesTypes/Boolean isConjugated::MARTE_PrimitivesTypes/Boolean direction::MARTE_Foundations/GCM/DirectionKind ;
SendFlowAction = base_InvocationAction::InvocationAction ;
FlowSpecification = direction::MARTE_Foundations/GCM/DirectionKind base_Interface::Interface ;
SignalSpecification = kind::MARTE_Foundations/GCM/BFeatureKind base_Interface::Interface ;
BFeatureKind = in:: ;
BFeatureKind = out:: ;
BFeatureKind = inout:: ;
BFeatureKind = required:: ;
BFeatureKind = provided:: ;
BFeatureKind = reqpro:: ;
FlowBFeature = kind::MARTE_Foundations/GCM/BFeatureKind base_BehavioralFeature::BehavioralFeature ;
DefaultLink = ;
InterRepetition = repetitionShapeDependence::MARTE_DataTypes/IntegerVector isModulo::MARTE_PrimitivesTypes/Boolean ;
Distribute = patternShape::RS_Library/ShapeSpecification repetitionSpace::RS_Library/ShapeSpecification fromTiler::RS_Library/TilerSpecification toTiler::RS_Library/TilerSpecification ;
Reshape = patternShape::RS_Library/ShapeSpecification repetitonShape::RS_Library/ShapeSpecification srcTiler::MARTE_Annexes/RSM/Tiler targetTiler::MARTE_Annexes/RSM/Tiler ;
Tiler = origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerMatrix tiler::RS_Library/TilerSpecification ;
VariableDirectionKind = in:: ;
VariableDirectionKind = out:: ;
VariableDirectionKind = inout:: ;
Var = dir::MARTE_Annexes/VSL/Variables/VariableDirectionKind base_Property::Property ;
ExpressionContext = base_NamedElement::NamedElement ;
BoundedSubtype = baseType::DataType minValue::MARTE_PrimitivesTypes/String maxValue::MARTE_PrimitivesTypes/String isMinOpen::MARTE_PrimitivesTypes/Boolean isMaxOpen::MARTE_PrimitivesTypes/Boolean base_DataType::DataType ;
IntervalType = intervalAttrib::Property base_DataType::DataType ;
CollectionType = collectionAttrib::Property base_DataType::DataType ;
ChoiceType = choiceAttrib::Property+ defaultAttrib::Property base_DataType::DataType ;
TupleType = tupleAttrib::Property+ base_DataType::DataType ;
RtUnit = isDynamic::MARTE_PrimitivesTypes/Boolean isMain::MARTE_PrimitivesTypes/Boolean poolSize::MARTE_PrimitivesTypes/Integer poolPolicy::MARTE_DesignModel/RTEMoCC/PoolMgtPolicyKind poolWaitingTime::BasicNFP_Types/NFP_Duration operationalMode::Behavior main::Operation memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
PoolMgtPolicyKind = infiniteWait:: ;
PoolMgtPolicyKind = timedWait:: ;
PoolMgtPolicyKind = dynamic:: ;
PoolMgtPolicyKind = exception:: ;
PoolMgtPolicyKind = other:: ;
PpUnit = concPolicy::MARTE_DesignModel/RTEMoCC/CallConcurrencyKind memorySize::BasicNFP_Types/NFP_DataSize base_BehavioredClassifier::BehavioredClassifier ;
CallConcurrencyKind = sequential:: ;
CallConcurrencyKind = guarded:: ;
CallConcurrencyKind = concurrent:: ;
RtBehavior = queueSchedPolicy::GRM_BasicTypes/SchedPolicyKind queueSize::MARTE_PrimitivesTypes/Integer msgMaxSize::BasicNFP_Types/NFP_DataSize base_Behavior::Behavior ;
rtf = base_BehavioralFeature::BehavioralFeature base_Action::Action base_Message::Message base_Signal::Signal utility::MARTE_DataTypes/UtilityType occKind::BasicNFP_Types/ArrivalPattern tRef::MARTE_Foundations/Time/TimedInstantObservation relDl::BasicNFP_Types/NFP_Duration absDl::BasicNFP_Types/NFP_DateTime boundDl::BasicNFP_Types/NFP_BoundedDuration rdTime::BasicNFP_Types/NFP_Duration miss::BasicNFP_Types/NFP_Percentage priority::BasicNFP_Types/NFP_Integer ;
SynchronizationKind = synchronous:: ;
SynchronizationKind = asynchronous:: ;
SynchronizationKind = delayedSynchronous:: ;
SynchronizationKind = rendezVous:: ;
SynchronizationKind = other:: ;
RtAction = isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind msgSize::BasicNFP_Types/NFP_DataSize base_BehavioralFeature::BehavioralFeature base_InvocationAction::InvocationAction ;
ExecutionKind = deferred:: ;
ExecutionKind = remoteImmediate:: ;
ExecutionKind = localImmediate:: ;
ConcurrencyKind = reader:: ;
ConcurrencyKind = writer:: ;
ConcurrencyKind = parallel:: ;
RtService = concPolicy::MARTE_DesignModel/RTEMoCC/ConcurrencyKind exeKind::MARTE_DesignModel/RTEMoCC/ExecutionKind isAtomic::MARTE_PrimitivesTypes/Boolean synchKind::MARTE_DesignModel/RTEMoCC/SynchronizationKind base_BehavioralFeature::BehavioralFeature ;
RteConnector = bandwidth::BasicNFP_Types/NFP_DataTxRate packetT::BasicNFP_Types/NFP_Duration blockT::BasicNFP_Types/NFP_Duration transmMode::MARTE_DataTypes/TransmModeKind base_Connector::Connector ;
HwResource = description::BasicNFP_Types/NFP_String p_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService+ r_HW_Services::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService+ ownedHW::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResource+ endPoints::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwEndPoint+ ;
HwResourceService = ;
HwCommunicationResource = ;
HwArbiter = controlledMedias::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia+ ;
HwMedia = bandWidth::BasicNFP_Types/NFP_DataTxRate base_Association::Association arbiters::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwArbiter+ ;
HwBus = adressWidth::BasicNFP_Types/NFP_DataSize wordWidth::BasicNFP_Types/NFP_DataSize isSynchronous::MARTE_PrimitivesTypes/Boolean isSerial::MARTE_PrimitivesTypes/Boolean ;
HwBridge = sides::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia+ ;
HwEndPoint = base_Port::Port connectedTo::MARTE_DesignModel/HRM/HwLogical/HwCommunication/HwMedia+ ;
ISA_Type = RISC:: ;
ISA_Type = CISC:: ;
ISA_Type = VLIW:: ;
ISA_Type = SIMD:: ;
ISA_Type = Other:: ;
ISA_Type = Undef:: ;
PLD_Technology = SRAM:: ;
PLD_Technology = Antifuse:: ;
PLD_Technology = Flash:: ;
PLD_Technology = Other:: ;
PLD_Technology = Undef:: ;
PLD_Class = SymetricalArray:: ;
PLD_Class = RowBased:: ;
PLD_Class = SeaOfGates:: ;
PLD_Class = HierarchicalPLD:: ;
PLD_Class = Other:: ;
PLD_Class = Undef:: ;
PLD_Organization = nbRows::BasicNFP_Types/NFP_Integer nbColumns::BasicNFP_Types/NFP_Natural class::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Class ;
HwProcessor = architecture::BasicNFP_Types/NFP_DataSize mips::BasicNFP_Types/NFP_Natural ipc::BasicNFP_Types/NFP_Real nbCores::BasicNFP_Types/NFP_Natural nbPipelines::BasicNFP_Types/NFP_Natural nbStages::BasicNFP_Types/NFP_Natural nbALUs::BasicNFP_Types/NFP_Natural nbFBUs::BasicNFP_Types/NFP_Natural ownedISAs::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwISA+ predictors::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwBranchPredictor+ caches::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache+ ownedMMUs::MARTE_DesignModel/HRM/HwLogical/HwStorageManager/HwMMU+ ;
HwComputingResource = op_Frequencies::MARTE_DataTypes/NFP_FrequencyInterval ;
HwISA = family::BasicNFP_Types/NFP_String inst_Width::BasicNFP_Types/NFP_DataSize type::MARTE_DesignModel/HRM/HwLogical/HwComputing/ISA_Type ;
HwBranchPredictor = ;
HwASIC = ;
HwPLD = technology::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Technology organization::MARTE_DesignModel/HRM/HwLogical/HwComputing/PLD_Organization nbLUTs::BasicNFP_Types/NFP_Natural ndLUT_Inputs::BasicNFP_Types/NFP_Natural nbFlipFlops::BasicNFP_Types/NFP_Natural blocksRAM::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM+ ;
HwMemory = memorySize::BasicNFP_Types/NFP_DataSize adressSize::BasicNFP_Types/NFP_DataSize timings::MARTE_DesignModel/HRM/HwLogical/HwMemory/Timing+ ;
Timing = notation::BasicNFP_Types/NFP_String description::BasicNFP_Types/NFP_String value::BasicNFP_Types/NFP_Duration ;
Repl_Policy = LRU:: ;
Repl_Policy = NFU:: ;
Repl_Policy = FIFO:: ;
Repl_Policy = Random:: ;
Repl_Policy = Other:: ;
Repl_Policy = Undef:: ;
WritePolicy = WriteBack:: ;
WritePolicy = WriteThrough:: ;
WritePolicy = Other:: ;
WritePolicy = Undef:: ;
CacheType = Data:: ;
CacheType = Instruction:: ;
CacheType = Unified:: ;
CacheType = Other:: ;
CacheType = Undef:: ;
ROM_Type = MaskedROM:: ;
ROM_Type = EPROM:: ;
ROM_Type = OTP_EPROM:: ;
ROM_Type = EEPROM:: ;
ROM_Type = Flash:: ;
ROM_Type = Other:: ;
ROM_Type = Undef:: ;
CacheStructure = nsSets::BasicNFP_Types/NFP_Natural blockSize::BasicNFP_Types/NFP_Natural associativity::BasicNFP_Types/NFP_Natural ;
MemoryOrganization = nbRows::BasicNFP_Types/NFP_Natural nbColumns::BasicNFP_Types/NFP_Natural nbBanks::BasicNFP_Types/NFP_Natural wordSize::BasicNFP_Types/NFP_DataSize ;
HwRAM = organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization isSynchronous::BasicNFP_Types/NFP_Boolean isStatic::BasicNFP_Types/NFP_Boolean isNonVolatile::BasicNFP_Types/NFP_Boolean repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
HwROM = type::MARTE_DesignModel/HRM/HwLogical/HwMemory/ROM_Type organization::MARTE_DesignModel/HRM/HwLogical/HwMemory/MemoryOrganization ;
HwDrive = sectorSize::BasicNFP_Types/NFP_DataSize buffer::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwRAM ;
HWCache = level::BasicNFP_Types/NFP_Natural type::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheType structure::MARTE_DesignModel/HRM/HwLogical/HwMemory/CacheStructure repl_Policy::MARTE_DesignModel/HRM/HwLogical/HwMemory/Repl_Policy writePolicy::MARTE_DesignModel/HRM/HwLogical/HwMemory/WritePolicy ;
HwStorageManager = managedMemories::MARTE_DesignModel/HRM/HwLogical/HwMemory/HwMemory+ ;
HwDMA = nbChannels::BasicNFP_Types/NFP_Natural transferWidth::BasicNFP_Types/NFP_DataSize drivenBy::MARTE_DesignModel/HRM/HwLogical/HwComputing/HwProcessor+ ;
HwMMU = virtualAddrSpace::BasicNFP_Types/NFP_DataSize physicalAddrSpace::BasicNFP_Types/NFP_DataSize memoryProtection::BasicNFP_Types/NFP_Natural nbEntries::BasicNFP_Types/NFP_Boolean ownedTLBs::MARTE_DesignModel/HRM/HwLogical/HwMemory/HWCache+ ;
HwTimingResource = ;
HwClock = frequency::BasicNFP_Types/NFP_Frequency ;
HwTimer = nbCounter::BasicNFP_Types/NFP_Natural counterWidth::BasicNFP_Types/NFP_DataSize inputClock::MARTE_DesignModel/HRM/HwLogical/HwTiming/HwClock ;
HwDevice = ;
HwI_O = ;
HwSupport = ;
HwComponent = kind::MARTE_DesignModel/HRM/HwPhysical/HwLayout/ComponentKind dimenssions::BasicNFP_Types/NFP_Length area::BasicNFP_Types/NFP_Area position::MARTE_DataTypes/NFP_NaturalInterval grid::BasicNFP_Types/NFP_Natural nbPins::BasicNFP_Types/NFP_Natural weight::BasicNFP_Types/NFP_Real price::BasicNFP_Types/NFP_String r_Conditions::MARTE_DesignModel/HRM/HwPhysical/HwLayout/Env_Condition+ poweredServices::MARTE_DesignModel/HRM/HwLogical/HwGeneral/HwResourceService+ staticConsumption::BasicNFP_Types/NFP_Power staticDissipation::BasicNFP_Types/NFP_Power ;
ComponentKind = Card:: ;
ComponentKind = Channel:: ;
ComponentKind = Chip:: ;
ComponentKind = Port:: ;
ComponentKind = Unit:: ;
ComponentKind = Other:: ;
ComponentKind = Undef:: ;
Env_Condition = type::MARTE_DesignModel/HRM/HwPhysical/HwLayout/ConditionType status::MARTE_DesignModel/HRM/HwPhysical/HwLayout/CompnentState description::BasicNFP_Types/NFP_String range::MARTE_DataTypes/Realnterval ;
ConditionType = Temperature:: ;
ConditionType = Humidity:: ;
ConditionType = Altitude:: ;
ConditionType = Vibration:: ;
ConditionType = Shock:: ;
ConditionType = Other:: ;
ConditionType = Undef:: ;
CompnentState = Operating:: ;
CompnentState = Storage:: ;
CompnentState = Other:: ;
CompnentState = Undef:: ;
HwPowerSupply = suppliedPower::BasicNFP_Types/NFP_Power capacity::BasicNFP_Types/NFP_Energy ;
HwCoolingSupply = coolingPower::BasicNFP_Types/NFP_Power ;
SwResource = identifierElements::TypedElement+ stateElements::TypedElement+ memorySizeFootprint::TypedElement createServices::BehavioralFeature+ deleteServices::BehavioralFeature+ initializeServices::BehavioralFeature+ ;
SwAccessService = isModifier::MARTE_PrimitivesTypes/Boolean accessedElement::Property ;
InterruptKind = HardwareInterruption:: ;
InterruptKind = ProcessorDetectedException:: ;
InterruptKind = ProgrammedException:: ;
InterruptKind = Undef:: ;
InterruptKind = Other:: ;
EntryPoint = isReentrant::MARTE_PrimitivesTypes/Boolean routine::BehavioralFeature base_BehavioralFeature::BehavioralFeature base_Dependency::Dependency ;
InterruptResource = kind::MARTE_DesignModel/SRM/SW_Concurrency/InterruptKind isMaskable::MARTE_PrimitivesTypes/Boolean vectorElements::TypedElement+ maskElements::TypedElement+ routineConnectServices::BehavioralFeature+ routineDisconnectServices::BehavioralFeature+ ;
SwSchedulableResource = isStaticSchedulingFeature::MARTE_PrimitivesTypes/Boolean isPreemptable::MARTE_PrimitivesTypes/Boolean schedulers::NamedElement deadlineElements::TypedElement+ deadlineTypeElements::TypedElement+ timeScliceElements::TypedElement+ delayServices::BehavioralFeature+ joinServices::BehavioralFeature+ yieldServices::BehavioralFeature+ ;
SwTimerResource = durationElements::TypedElement ;
MemoryPartition = concurrentResources::TypedElement+ memorySpaces::TypedElement+ fork::BehavioralFeature+ exit::BehavioralFeature+ base_Namespace::Namespace ;
Alarm = isWatchdog::MARTE_PrimitivesTypes/Boolean timers::TypedElement+ ;
AccessPolicyKind = Read:: ;
AccessPolicyKind = Write:: ;
AccessPolicyKind = ReadWrite:: ;
AccessPolicyKind = Undef:: ;
AccessPolicyKind = Other:: ;
DeviceBroker = accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind isBuffered::MARTE_PrimitivesTypes/Boolean devices::TypedElement+ closeServices::BehavioralFeature+ controlServices::BehavioralFeature+ openServices::BehavioralFeature+ readServices::BehavioralFeature+ writeServices::BehavioralFeature+ ;
MemoryBroker = accessPolicy::MARTE_DesignModel/SRM/SW_Brokering/AccessPolicyKind memories::TypedElement+ memoryBlockAdressSelements::TypedElement+ memoryBlockSizeElements::TypedElement+ lockServices::BehavioralFeature+ unlockServices::BehavioralFeature+ mapServices::BehavioralFeature+ unMapServices::BehavioralFeature+ ;
QueuePolicyKind = FIFO:: ;
QueuePolicyKind = LIFO:: ;
QueuePolicyKind = Priority:: ;
QueuePolicyKind = Undef:: ;
QueuePolicyKind = Other:: ;
MessageResourceKind = MessageQueue:: ;
MessageResourceKind = Pipe:: ;
MessageResourceKind = Blackboard:: ;
MessageResourceKind = Undef:: ;
MessageResourceKind = Other:: ;
NotificationKind = Memorized:: ;
NotificationKind = Bounded:: ;
NotificationKind = Memoryless:: ;
NotificationKind = Undef:: ;
NotificationKind = Other:: ;
NotificationResourceKind = Event:: ;
NotificationResourceKind = Barrier:: ;
NotificationResourceKind = Undef:: ;
NotificationResourceKind = Other:: ;
MutualExclusionResourceKind = BooleanSemaphore:: ;
MutualExclusionResourceKind = CountSemaphore:: ;
MutualExclusionResourceKind = Mutex:: ;
MutualExclusionResourceKind = Undef:: ;
MutualExclusionResourceKind = Other:: ;
ConcurrentAccessProtocolKind = PIP:: ;
ConcurrentAccessProtocolKind = PCP:: ;
ConcurrentAccessProtocolKind = NoPreemption:: ;
ConcurrentAccessProtocolKind = Undef:: ;
ConcurrentAccessProtocolKind = Other:: ;
SwSynchronizationResource = ;
SharedDataComResource = readServices::BehavioralFeature+ writeServices::BehavioralFeature+ ;
MessageComResource = isFixedMessageSize::MARTE_PrimitivesTypes/Boolean meachnism::MARTE_DesignModel/SRM/SW_Interaction/MessageResourceKind messageSizeElements::TypedElement+ messageQueueCapacityElements::TypedElement+ messageQueuePolicy::MARTE_DesignModel/SRM/SW_Interaction/QueuePolicyKind sendServices::BehavioralFeature+ receiveServices::BehavioralFeature+ ;
NotificationResource = occurence::MARTE_DesignModel/SRM/SW_Interaction/NotificationKind mechanism::MARTE_DesignModel/SRM/SW_Interaction/NotificationResourceKind occurenceCountElements::TypedElement+ maskElements::TypedElement+ flushServices::BehavioralFeature+ signalServices::BehavioralFeature+ waitServices::BehavioralFeature+ clearServices::BehavioralFeature+ ;
SwMutualExclusionResource = mechanism::MARTE_DesignModel/SRM/SW_Interaction/MutualExclusionResourceKind concurrentAccessProtocol::MARTE_DesignModel/SRM/SW_Interaction/ConcurrentAccessProtocolKind accessTokenElements::TypedElement+ releaseServices::BehavioralFeature+ acquireServices::BehavioralFeature+ ;
GaWorkloadGenerator = pop::BasicNFP_Types/NFP_Integer base_Behavior::Behavior ;
GaEventTrace = content::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String base_NamedElement::NamedElement ;
GaWorkloadEvent = pattern::BasicNFP_Types/ArrivalPattern generator::MARTE_AnalysisModel/GQAM/GaWorkloadGenerator trace::MARTE_AnalysisModel/GQAM/GaEventTrace effect::MARTE_AnalysisModel/GQAM/GaScenario timedEvent::TimeEvent base_NamedElement::NamedElement ;
GaScenario = cause::MARTE_AnalysisModel/GQAM/GaWorkloadEvent hostDemand::BasicNFP_Types/NFP_Duration+ hostDemandOps::BasicNFP_Types/NFP_Real+ interOccT::BasicNFP_Types/NFP_Duration+ throughput::BasicNFP_Types/NFP_Frequency+ respT::BasicNFP_Types/NFP_Duration utilization::BasicNFP_Types/NFP_Real+ utilizationHost::BasicNFP_Types/NFP_Real+ root::MARTE_AnalysisModel/GQAM/GaStep timing::MARTE_AnalysisModel/GQAM/GaTimingObs+ behavior::MARTE_AnalysisModel/GQAM/GaScenario ;
GaStep = isAtomic::BasicNFP_Types/NFP_Boolean blockT::BasicNFP_Types/NFP_Duration rep::BasicNFP_Types/NFP_Real prob::BasicNFP_Types/NFP_Real priority::BasicNFP_Types/NFP_Integer concurRes::MARTE_Foundations/GRM/SchedulableResource host::MARTE_AnalysisModel/GQAM/GaExecHost serDemand::MARTE_AnalysisModel/GQAM/GaRequestedService+ servCount::BasicNFP_Types/NFP_Real+ ;
GaExecHost = commTxOch::BasicNFP_Types/NFP_Duration commRcvOvh::BasicNFP_Types/NFP_Duration cntxtSwt::BasicNFP_Types/NFP_Duration clockOvh::BasicNFP_Types/NFP_Duration schedPriRange::MARTE_DataTypes/IntegerInterval memSize::BasicNFP_Types/NFP_DataSize utilization::BasicNFP_Types/NFP_Real+ throughput::BasicNFP_Types/NFP_Frequency+ ;
GaRequestedService = base_Operation::Operation ;
GaTimingObs = laxity::MARTE_AnalysisModel/GQAM/LaxityKind startObs::TimeObservation stopObs::TimeObservation ;
LaxityKind = hard:: ;
LaxityKind = soft:: ;
LaxityKind = other:: ;
GaCommStep = ;
GaAcqStep = acqRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
GaRelStep = relRes::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
GaLatencyObs = latency::BasicNFP_Types/NFP_Duration+ miss::BasicNFP_Types/NFP_Real+ utility::MARTE_DataTypes/UtilityType+ maxJitter::BasicNFP_Types/NFP_Duration+ ;
GaCommHost = capacity::BasicNFP_Types/NFP_DataTxRate+ packetT::BasicNFP_Types/NFP_Duration+ blockT::BasicNFP_Types/NFP_Duration+ transmMode::MARTE_DataTypes/TransmModeKind utilization::BasicNFP_Types/NFP_Real+ throughput::BasicNFP_Types/NFP_Frequency+ ;
GaCommChannel = packetSize::BasicNFP_Types/NFP_DataSize utlization::BasicNFP_Types/NFP_Real+ ;
GaWorkloadBehavior = behavior::MARTE_AnalysisModel/GQAM/GaScenario+ demand::MARTE_AnalysisModel/GQAM/GaWorkloadEvent+ base_NamedElement::NamedElement ;
GaAnalysisContext = context::BasicNFP_Types/NFP_String+ workload::MARTE_AnalysisModel/GQAM/GaWorkloadBehavior+ platform::MARTE_AnalysisModel/GQAM/GaResourcesPlatform+ ;
GaResourcesPlatform = resources::MARTE_Foundations/GRM/Resource+ base_Classifier::Classifier ;
OptimallityCriterionKind = meetHardDeadlines:: ;
OptimallityCriterionKind = minimizeMissedDeadlines:: ;
OptimallityCriterionKind = minimizedMeanTardiness:: ;
OptimallityCriterionKind = undef:: ;
OptimallityCriterionKind = other:: ;
SaAnalysisContext = isSched::BasicNFP_Types/NFP_Boolean optCriterion::MARTE_AnalysisModel/SAM/OptimallityCriterionKind ;
SaEnd2EndFlow = isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real end2EndT::BasicNFP_Types/NFP_Duration+ end2EndD::BasicNFP_Types/NFP_Duration+ timing::MARTE_AnalysisModel/GQAM/GaTimingObs+ base_NamedElement::NamedElement ;
SaCommStep = deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real base_BehavioralFeature::BehavioralFeature ;
SaExecStep = base_BehavioralFeature::BehavioralFeature deadline::BasicNFP_Types/NFP_Duration spareCap::BasicNFP_Types/NFP_Duration schSlack::BasicNFP_Types/NFP_Real preemptT::BasicNFP_Types/NFP_Duration readyT::BasicNFP_Types/NFP_Duration delayT::BasicNFP_Types/NFP_Duration ;
SaSchedObs = suspentions::BasicNFP_Types/NFP_Integer+ blockT::BasicNFP_Types/NFP_Duration+ overlaps::BasicNFP_Types/NFP_Integer+ ;
SaSharedResource = capacity::BasicNFP_Types/NFP_Integer isPreemp::BasicNFP_Types/NFP_Boolean isConsum::BasicNFP_Types/NFP_Boolean acquisT::BasicNFP_Types/NFP_Duration+ releaseT::BasicNFP_Types/NFP_Duration+ ;
SaCommHost = isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real ;
SaExecHost = isSched::BasicNFP_Types/NFP_Boolean schSlack::BasicNFP_Types/NFP_Real schedUtiliz::BasicNFP_Types/NFP_Real ISRswitchT::BasicNFP_Types/NFP_Duration ISRprioRange::MARTE_DataTypes/IntegerInterval schedPolicy::GRM_BasicTypes/SchedPolicyKind isPreempible::BasicNFP_Types/NFP_Boolean ;
PaStep = noSynch::BasicNFP_Types/NFP_Boolean extOpDemand::MARTE_PrimitivesTypes/String+ extOpCount::BasicNFP_Types/NFP_Real+ behavDemand::MARTE_AnalysisModel/GQAM/GaScenario+ behavCount::BasicNFP_Types/NFP_Real+ ;
PaRequestedStep = ;
PaCommStep = ;
PaResPassStep = resource::MARTE_Foundations/GRM/Resource resUnits::BasicNFP_Types/NFP_Integer ;
PaLogicalResource = utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency poolSize::BasicNFP_Types/NFP_Integer ;
PaRunTInstance = poolSize::BasicNFP_Types/NFP_Integer unbddPool::MARTE_PrimitivesTypes/Boolean instance::MARTE_Foundations/GRM/Resource host::MARTE_Foundations/GRM/SchedulableResource utilization::BasicNFP_Types/NFP_Real throughput::BasicNFP_Types/NFP_Frequency base_NamedElement::NamedElement ;
TimeUnitKind = s:: ;
TimeUnitKind = tick:: ;
TimeUnitKind = ms:: ;
TimeUnitKind = us:: ;
TimeUnitKind = min:: ;
TimeUnitKind = hrs:: ;
TimeUnitKind = dys:: ;
PowerUnitKind = W:: ;
PowerUnitKind = mW:: ;
PowerUnitKind = KW:: ;
FrequencyUnitKind = Hz:: ;
FrequencyUnitKind = KHz:: ;
FrequencyUnitKind = MHz:: ;
FrequencyUnitKind = GHz:: ;
FrequencyUnitKind = rpm:: ;
DataSizeUnitKind = bits:: ;
DataSizeUnitKind = Bytes:: ;
DataSizeUnitKind = KB:: ;
DataSizeUnitKind = MB:: ;
DataSizeUnitKind = GB:: ;
DataTxRateUnitKind = b_per_s:: ;
DataTxRateUnitKind = Kb_per_s:: ;
DataTxRateUnitKind = Mb_per_s:: ;
EnergyUnitKind = J:: ;
EnergyUnitKind = KJ:: ;
EnergyUnitKind = Wh:: ;
EnergyUnitKind = KWh:: ;
EnergyUnitKind = mWh:: ;
LengthUnitKind = m:: ;
LengthUnitKind = cm:: ;
LengthUnitKind = mm:: ;
AreaUnitKind = mm2:: ;
AreaUnitKind = um2:: ;
EDFParameters = deadline::BasicNFP_Types/NFP_Duration ;
SchedPolicyKind = EarliestDeadlineFirst:: ;
SchedPolicyKind = FIFO:: ;
SchedPolicyKind = FixedPriority:: ;
SchedPolicyKind = LeastLaxityFirst:: ;
SchedPolicyKind = RoundRobin:: ;
SchedPolicyKind = TimeTableDriven:: ;
SchedPolicyKind = Undef:: ;
SchedPolicyKind = Other:: ;
ProtectProtocolKind = FIFO:: ;
ProtectProtocolKind = NoPreemption:: ;
ProtectProtocolKind = PriorityCeiling:: ;
ProtectProtocolKind = PriorityInheritance:: ;
ProtectProtocolKind = StackBased:: ;
ProtectProtocolKind = Undef:: ;
ProtectProtocolKind = Other:: ;
PeriodicServerKind = Sporadic:: ;
PeriodicServerKind = Deferrable:: ;
PeriodicServerKind = Undef:: ;
PeriodicServerKind = Other:: ;
SchedParameters = edf::GRM_BasicTypes/EDFParameters fp::GRM_BasicTypes/FixedPriorityParameters pooling::GRM_BasicTypes/PoolingParameters server::GRM_BasicTypes/PeriodicServerParameters ;
FixedPriorityParameters = priority::MARTE_PrimitivesTypes/Integer ;
PoolingParameters = period::BasicNFP_Types/NFP_Duration overhead::BasicNFP_Types/NFP_Duration+ ;
PeriodicServerParameters = kind::GRM_BasicTypes/PeriodicServerKind backgroundPriority::MARTE_PrimitivesTypes/Integer initialBudget::BasicNFP_Types/NFP_Duration replenishPeriod::BasicNFP_Types/NFP_Duration maxPendingReplenish::MARTE_PrimitivesTypes/Integer ;
SourceKind = est:: ;
SourceKind = meas:: ;
SourceKind = calc:: ;
SourceKind = req:: ;
BasicNFP_Types_DirectionKind = incr:: ;
BasicNFP_Types_DirectionKind = decr:: ;
StatisticalQualifierKind = max:: ;
StatisticalQualifierKind = min:: ;
StatisticalQualifierKind = mean:: ;
StatisticalQualifierKind = range:: ;
StatisticalQualifierKind = percent:: ;
StatisticalQualifierKind = distrib:: ;
StatisticalQualifierKind = determ:: ;
StatisticalQualifierKind = other:: ;
NFP_CommonType = expr::MARTE_DataTypes/VSL_Expression source::BasicNFP_Types/SourceKind statQ::BasicNFP_Types/StatisticalQualifierKind dir::BasicNFP_Types/BasicNFP_Types_DirectionKind ;
NFP_Frequency = unit::MeasurementUnits/FrequencyUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Real = value::MARTE_PrimitivesTypes/Real ;
NFP_Natural = value::MARTE_PrimitivesTypes/UnlimitedNatural ;
NFP_Boolean = value::MARTE_PrimitivesTypes/Boolean ;
NFP_String = value::MARTE_PrimitivesTypes/String ;
NFP_Integer = value::MARTE_PrimitivesTypes/Integer ;
NFP_DateTime = value::MARTE_PrimitivesTypes/DateTime ;
NFP_DataTxRate = unit::MeasurementUnits/DataTxRateUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Power = unit::MeasurementUnits/PowerUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_DataSize = unit::MeasurementUnits/DataSizeUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Energy = unit::MeasurementUnits/EnergyUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Length = unit::MeasurementUnits/LengthUnitKind precision::MARTE_PrimitivesTypes/Real ;
NFP_Area = unit::MeasurementUnits/AreaUnitKind precision::MARTE_PrimitivesTypes/Real ;
ArrivalPattern = periodic::BasicNFP_Types/PeriodicPattern aperiodic::BasicNFP_Types/AperiodicPattern burst::BasicNFP_Types/BurstPattern irregular::BasicNFP_Types/IrregularPattern closed::BasicNFP_Types/ClosedPattern sporadic::BasicNFP_Types/SporadicPattern ;
PeriodicPattern = period::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration phase::BasicNFP_Types/NFP_Duration ;
AperiodicPattern = distribution::BasicNFP_Types/NFP_CommonType ;
BurstPattern = minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration minEventInterval::BasicNFP_Types/NFP_Duration maxEventInterval::BasicNFP_Types/NFP_Duration burstSize::BasicNFP_Types/NFP_Integer ;
IrregularPattern = phase::BasicNFP_Types/NFP_Duration interarrivals::BasicNFP_Types/NFP_Duration+ ;
ClosedPattern = population::BasicNFP_Types/NFP_Integer extDelay::BasicNFP_Types/NFP_Duration ;
SporadicPattern = minInterarrival::BasicNFP_Types/NFP_Duration maxInterarrival::BasicNFP_Types/NFP_Duration jitter::BasicNFP_Types/NFP_Duration ;
NFP_BoundedDuration = values::MARTE_PrimitivesTypes/Real unit::MeasurementUnits/TimeUnitKind clock::MARTE_PrimitivesTypes/String precision::MARTE_PrimitivesTypes/Real ;
NFP_Percentage = unit::MARTE_PrimitivesTypes/String ;
NFP_Duration = unit::MeasurementUnits/TimeUnitKind clock::MARTE_PrimitivesTypes/String precision::MARTE_PrimitivesTypes/Real ;
IntegerVector = vectorElem::MARTE_PrimitivesTypes/Integer+ ;
IntegerMatrix = matrixElem::MARTE_DataTypes/IntegerVector+ ;
IntegerInterval = bound::MARTE_PrimitivesTypes/Integer ;
TransmModeKind = simplex:: ;
TransmModeKind = halfDuplex:: ;
TransmModeKind = fullDuplex:: ;
UtilityType = ;
Array = ;
Realnterval = bound::MARTE_PrimitivesTypes/Real ;
NFP_FrequencyInterval = bound::BasicNFP_Types/NFP_Frequency ;
MARTE_DataTypes_Interval = ;
NFP_NaturalInterval = bound::BasicNFP_Types/NFP_Natural ;
TimeNatureKind = discrete:: ;
TimeNatureKind = dense:: ;
TimeInterpretationKind = duration:: ;
TimeInterpretationKind = instant:: ;
TimedValueType = unit::TimeLibrary/TUK value::MARTE_PrimitivesTypes/Real expr::TimeLibrary/ClockedValueSpecification onClock::MARTE_PrimitivesTypes/String ;
TUK = ;
TimeLibrary_TimeUnitKind = s:: ;
TimeLibrary_TimeUnitKind = ms:: ;
TimeLibrary_TimeUnitKind = us:: ;
TimeLibrary_TimeUnitKind = ns:: ;
TimeLibrary_TimeUnitKind = min:: ;
TimeLibrary_TimeUnitKind = hrs:: ;
TimeLibrary_TimeUnitKind = dys:: ;
TimeStandardKind = TAI:: ;
TimeStandardKind = UT0:: ;
TimeStandardKind = UT1:: ;
TimeStandardKind = UTC:: ;
TimeStandardKind = Local:: ;
TimeStandardKind = TT:: ;
TimeStandardKind = TBD:: ;
TimeStandardKind = TCG:: ;
TimeStandardKind = TCB:: ;
TimeStandardKind = Sidereal:: ;
TimeStandardKind = GPS:: ;
LogicalTimeUnit = tick:: ;
EventKind = start:: ;
EventKind = finish:: ;
EventKind = send:: ;
EventKind = receive:: ;
EventKind = consume:: ;
IdealClock = ;
TilerSpecification = origin::MARTE_DataTypes/IntegerVector paving::MARTE_DataTypes/IntegerMatrix fitting::MARTE_DataTypes/IntegerVector ;
ShapeSpecification = size::MARTE_PrimitivesTypes/UnlimitedNatural+ ;
Integer = INT ;
Boolean = 'true' ;
Boolean = 'false' ;
String = STR ;
Element = Comment ;
Element = NamedElement ;
Element = TemplateableElement ;
Element = Relationship ;
Element = TemplateSignature ;
Element = TemplateParameter ;
Element = ParameterableElement ;
Element = TemplateParameterSubstitution ;
Element = MultiplicityElement ;
Element = Image ;
Element = ActivityGroup ;
Element = Slot ;
Element = ExceptionHandler ;
Comment = body::MARTE_PrimitivesTypes/String annotatedElement::Element+ ;
Package = Profile ;
Package = ownedType::Type+ packageMerge::PackageMerge+ packagedElement::PackageableElement+ nestedPackage::Package+ nestingPackage::Package profileApplication::ProfileApplication+ ;
NamedElement = Namespace ;
NamedElement = TypedElement ;
NamedElement = RedefinableElement ;
NamedElement = DeploymentTarget ;
NamedElement = CollaborationUse ;
NamedElement = Message ;
NamedElement = Lifeline ;
NamedElement = Trigger ;
NamedElement = Vertex ;
NamedElement = ParameterSet ;
NamedElement = DeployedArtifact ;
NamedElement = MessageEnd ;
NamedElement = InteractionFragment ;
NamedElement = GeneralOrdering ;
NamedElement = PackageableElement ;
NamedElement = ActivityPartition ;
NamedElement = Include ;
NamedElement = Extend ;
StructuralFeature = Property ;
ConnectableElement = Parameter ;
ConnectableElement = Variable ;
TemplateableElement = StringExpression ;
Property = Port ;
Property = class::Class datatype::DataType owningAssociation::Association association::Association isDerived::MARTE_PrimitivesTypes/Boolean isDerivedUnion::MARTE_PrimitivesTypes/Boolean default::MARTE_PrimitivesTypes/String aggregation::AggregationKind isComposite::MARTE_PrimitivesTypes/Boolean redefinedProperty::Property+ defaultValue::ValueSpecification opposite::Property subsettedProperty::Property+ qualifier::Property+ associationEnd::Property ;
VisibilityKind = public:: ;
VisibilityKind = private:: ;
VisibilityKind = protected:: ;
VisibilityKind = package:: ;
Dependency = Abstraction ;
Dependency = Deployment ;
Dependency = supplier::NamedElement+ client::NamedElement+ ;
DirectedRelationship = ElementImport ;
DirectedRelationship = PackageImport ;
DirectedRelationship = TemplateBinding ;
DirectedRelationship = Generalization ;
DirectedRelationship = PackageMerge ;
DirectedRelationship = ProfileApplication ;
DirectedRelationship = ProtocolConformance ;
DirectedRelationship = Dependency ;
DirectedRelationship = Include ;
DirectedRelationship = Extend ;
Relationship = DirectedRelationship ;
Relationship = Association ;
Namespace = Package ;
Namespace = Classifier ;
Namespace = BehavioralFeature ;
Namespace = Region ;
Namespace = Transition ;
Namespace = State ;
Namespace = InteractionOperand ;
ElementImport = visibility::VisibilityKind alias::MARTE_PrimitivesTypes/String importedElement::PackageableElement importingNamespace::Namespace ;
PackageImport = visibility::VisibilityKind importedPackage::Package importingNamespace::Namespace ;
Constraint = IntervalConstraint ;
Constraint = InteractionConstraint ;
Constraint = constrainedElement::Element+ specification::ValueSpecification context::Namespace ;
TypedElement = ConnectableElement ;
TypedElement = ValueSpecification ;
TypedElement = ObjectNode ;
Association = Extension ;
Association = isDerived::MARTE_PrimitivesTypes/Boolean ownedEnd::Property+ endType::Type+ memberEnd::Property navigableOwnedEnd::Property+ ;
Classifier = BehavioredClassifier ;
Classifier = DataType ;
Classifier = Signal ;
Classifier = Interface ;
Classifier = StructuredClassifier ;
Classifier = Association ;
Classifier = Artifact ;
RedefinableElement = Feature ;
RedefinableElement = ExtensionPoint ;
RedefinableElement = ActivityNode ;
RedefinableElement = ActivityEdge ;
RedefinableElement = Region ;
RedefinableElement = Transition ;
TemplateBinding = signature::TemplateSignature parameterSubstitution::TemplateParameterSubstitution+ boundElement::TemplateableElement ;
TemplateSignature = parameter::TemplateParameter+ ownedParameter::TemplateParameter+ template::TemplateableElement ;
TemplateParameter = signature::TemplateSignature parameteredElement::ParameterableElement ownedParameteredElement::ParameterableElement default::ParameterableElement ownedDefault::ParameterableElement ;
ParameterableElement = ConnectableElement ;
ParameterableElement = PackageableElement ;
TemplateParameterSubstitution = formal::TemplateParameter actual::ParameterableElement+ ownedActual::ParameterableElement+ templateBinding::TemplateBinding ;
Generalization = isSubstitutable::MARTE_PrimitivesTypes/Boolean general::Classifier generalizationSet::GeneralizationSet+ specific::Classifier ;
GeneralizationSet = isCovering::MARTE_PrimitivesTypes/Boolean isDisjoint::MARTE_PrimitivesTypes/Boolean powertype::Classifier generalization::Generalization+ ;
Feature = Connector ;
Feature = StructuralFeature ;
Feature = BehavioralFeature ;
Substitution = contract::Classifier substitutingClassifier::Classifier ;
PackageableElement = Constraint ;
PackageableElement = Type ;
PackageableElement = GeneralizationSet ;
PackageableElement = Observation ;
PackageableElement = Event ;
PackageableElement = Dependency ;
PackageableElement = ValueSpecification ;
PackageMerge = mergedPackage::Package receivingPackage::Package ;
ProfileApplication = appliedProfile::Profile isStrict::MARTE_PrimitivesTypes/Boolean applyingPackage::Package ;
Profile = ownedStereotype::Stereotype+ metaclassReference::ElementImport+ metamodelReference::PackageImport+ ;
Stereotype = icon::Image+ ;
Class = Stereotype ;
Class = Behavior ;
Class = nestedClassifier::Classifier+ ownedOperation::Operation+ superClass::Class+ isActive::MARTE_PrimitivesTypes/Boolean ownedReception::Reception+ extension::Extension+ ;
StringExpression = subExpression::StringExpression+ owningExpression::StringExpression ;
Expression = StringExpression ;
Expression = symbol::MARTE_PrimitivesTypes/String operand::ValueSpecification+ ;
ValueSpecification = Expression ;
ValueSpecification = OpaqueExpression ;
ValueSpecification = TimeExpression ;
ValueSpecification = Duration ;
ValueSpecification = Interval ;
BehavioredClassifier = UseCase ;
BehavioredClassifier = Collaboration ;
BehavioredClassifier = Class ;
Behavior = StateMachine ;
Behavior = Activity ;
Behavior = Interaction ;
MultiplicityElement = ConnectorEnd ;
MultiplicityElement = Parameter ;
MultiplicityElement = Pin ;
MultiplicityElement = Variable ;
DeploymentTarget = InstanceSpecification ;
DataType = Enumeration ;
DataType = ownedAttribute::Property+ ownedOperation::Operation+ ;
AggregationKind = none:: ;
AggregationKind = shared:: ;
AggregationKind = composite:: ;
CollaborationUse = type::Collaboration roleBinding::Dependency+ ;
UseCase = include::Include+ extend::Extend+ extensionPoint::ExtensionPoint+ subject::Classifier+ ;
Realization = Substitution ;
Realization = InterfaceRealization ;
Realization = Substitution ;
Realization = InterfaceRealization ;
Abstraction = Realization ;
Abstraction = Manifestation ;
Abstraction = mapping::OpaqueExpression ;
Image = content::MARTE_PrimitivesTypes/String location::MARTE_PrimitivesTypes/String format::MARTE_PrimitivesTypes/String ;
OpaqueExpression = body::MARTE_PrimitivesTypes/String+ language::MARTE_PrimitivesTypes/String+ result::Parameter behavior::Behavior ;
Parameter = direction::ParameterDirectionKind default::MARTE_PrimitivesTypes/String defaultValue::ValueSpecification operation::Operation parameterSet::ParameterSet+ isException::MARTE_PrimitivesTypes/Boolean isStream::MARTE_PrimitivesTypes/Boolean effect::ParameterEffectKind ;
EncapsulatedClassifier = Class ;
Operation = interface::Interface class::Class isQuery::MARTE_PrimitivesTypes/Boolean isOrdered::MARTE_PrimitivesTypes/Boolean isUnique::MARTE_PrimitivesTypes/Boolean lower::MARTE_PrimitivesTypes/Integer upper::MARTE_PrimitivesTypes/UnlimitedNatural precondition::Constraint+ postcondition::Constraint+ redefinedOperation::Operation+ datatype::DataType bodyCondition::Constraint type::Type ;
Reception = signal::Signal ;
Extension = isRequired::MARTE_PrimitivesTypes/Boolean metaclass::Class ;
EnumerationLiteral = enumeration::Enumeration ;
ActivityPartition = isDimension::MARTE_PrimitivesTypes/Boolean isExternal::MARTE_PrimitivesTypes/Boolean node::ActivityNode+ subpartition::ActivityPartition+ superPartition::ActivityPartition represents::Element edge::ActivityEdge+ ;
Enumeration = ownedLiteral::EnumerationLiteral+ ;
InstanceSpecification = EnumerationLiteral ;
InstanceSpecification = classifier::Classifier+ slot::Slot+ specification::ValueSpecification ;
BehavioralFeature = Reception ;
BehavioralFeature = Operation ;
Signal = ownedAttribute::Property+ ;
TimeExpression = expr::ValueSpecification observation::Observation+ ;
Observation = TimeObservation ;
Observation = DurationObservation ;
Duration = expr::ValueSpecification observation::Observation+ ;
DurationInterval = min::ValueSpecification max::ValueSpecification ;
Interval = DurationInterval ;
Interval = TimeInterval ;
Interval = min::ValueSpecification max::ValueSpecification ;
TimeConstraint = firstEvent::MARTE_PrimitivesTypes/Boolean ;
IntervalConstraint = TimeConstraint ;
IntervalConstraint = DurationConstraint ;
IntervalConstraint = TimeConstraint ;
IntervalConstraint = DurationConstraint ;
TimeInterval = min::ValueSpecification max::ValueSpecification ;
DurationConstraint = firstEvent::MARTE_PrimitivesTypes/Boolean ;
TimeObservation = event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
DurationObservation = event::NamedElement firstEvent::MARTE_PrimitivesTypes/Boolean ;
ConnectorEnd = definingEnd::Property partWithPort::Property role::ConnectableElement ;
TimeEvent = isRelative::MARTE_PrimitivesTypes/Boolean when::ValueSpecification ;
Event = TimeEvent ;
Port = isBehavior::MARTE_PrimitivesTypes/Boolean isService::MARTE_PrimitivesTypes/Boolean required::Interface+ redefinedPort::Port+ provided::Interface+ protocol::ProtocolStateMachine ;
Action = InvocationAction ;
Action = StructuredActivityNode ;
Message = messageKind::MessageKind messageSort::MessageSort receiveEvent::MessageEnd sendEvent::MessageEnd connector::Connector interaction::Interaction argument::ValueSpecification+ signature::NamedElement ;
Lifeline = represents::ConnectableElement interaction::Interaction selector::ValueSpecification decomposedAs::PartDecomposition coveredBy::InteractionFragment+ ;
Connector = type::Association redefinedConnector::Connector+ end::ConnectorEnd kind::ConnectorKind contract::Behavior+ ;
Collaboration = collaborationRole::ConnectableElement+ ;
Interface = ownedAttribute::Property+ ownedOperation::Operation+ nestedClassifier::Classifier+ redefinedInterface::Interface+ ownedReception::Reception+ protocol::ProtocolStateMachine ;
InterfaceRealization = contract::Interface implementingClassifier::BehavioredClassifier ;
Trigger = event::Event port::Port+ ;
ProtocolStateMachine = conformance::ProtocolConformance+ ;
StateMachine = ProtocolStateMachine ;
StateMachine = region::Region+ submachineState::State+ connectionPoint::Pseudostate+ extendedStateMachine::StateMachine+ ;
ProtocolConformance = generalMachine::ProtocolStateMachine specificMachine::ProtocolStateMachine ;
Deployment = deployedArtifact::DeployedArtifact+ configuration::DeploymentSpecification+ location::DeploymentTarget ;
Include = addition::UseCase includingCase::UseCase ;
Extend = extendedCase::UseCase condition::Constraint extensionLocation::ExtensionPoint+ extension::UseCase ;
ExtensionPoint = useCase::UseCase ;
Region = subvertex::Vertex+ transition::Transition+ state::State extendedRegion::Region stateMachine::StateMachine ;
StructuredClassifier = EncapsulatedClassifier ;
StructuredClassifier = Collaboration ;
Vertex = Pseudostate ;
Vertex = ConnectionPointReference ;
Transition = kind::TransitionKind container::Region redefinedTransition::Transition guard::Constraint effect::Behavior trigger::Trigger+ target::Vertex source::Vertex ;
TransitionKind = internal:: ;
TransitionKind = local:: ;
TransitionKind = external:: ;
State = isComposite::MARTE_PrimitivesTypes/Boolean isOrthogonal::MARTE_PrimitivesTypes/Boolean isSimple::MARTE_PrimitivesTypes/Boolean isSubmachineState::MARTE_PrimitivesTypes/Boolean submachine::StateMachine connection::ConnectionPointReference+ connectionPoint::Pseudostate+ redefinedState::State stateInvariant::Constraint entry::Behavior exit::Behavior doActivity::Behavior deferrableTrigger::Trigger+ region::Region+ ;
ParameterSet = parameter::Parameter+ condition::Constraint+ ;
ActivityNode = ExecutableNode ;
ActivityNode = ObjectNode ;
ActivityGroup = InterruptibleActivityRegion ;
ActivityGroup = ActivityPartition ;
ParameterDirectionKind = in:: ;
ParameterDirectionKind = inout:: ;
ParameterDirectionKind = out:: ;
ParameterDirectionKind = return:: ;
ParameterEffectKind = create:: ;
ParameterEffectKind = read:: ;
ParameterEffectKind = update:: ;
ParameterEffectKind = delete:: ;
InterruptibleActivityRegion = node::ActivityNode+ interruptingEdge::ActivityEdge+ ;
DeployedArtifact = Artifact ;
Slot = definingFeature::StructuralFeature value::ValueSpecification+ owningInstance::InstanceSpecification ;
ExecutableNode = Action ;
OutputPin = isControl::MARTE_PrimitivesTypes/Boolean ;
Pin = OutputPin ;
Pin = InputPin ;
Pin = isControl::MARTE_PrimitivesTypes/Boolean ;
InputPin = isControl::MARTE_PrimitivesTypes/Boolean ;
MessageKind = complete:: ;
MessageKind = lost:: ;
MessageKind = found:: ;
MessageKind = unknown:: ;
ExceptionHandler = handlerBody::ExecutableNode exceptionInput::ObjectNode exceptionType::Classifier+ protectedNode::ExecutableNode ;
ObjectNode = Pin ;
ObjectNodeOrderingKind = unordered:: ;
ObjectNodeOrderingKind = ordered:: ;
ObjectNodeOrderingKind = LIFO:: ;
ObjectNodeOrderingKind = FIFO:: ;
MessageEnd = Gate ;
MessageSort = synchCall:: ;
MessageSort = asynchCall:: ;
MessageSort = asynchSignal:: ;
MessageSort = createMessage:: ;
MessageSort = deleteMessage:: ;
MessageSort = reply:: ;
Interaction = lifeline::Lifeline+ fragment::InteractionFragment+ action::Action+ formalGate::Gate+ message::Message+ ;
PartDecomposition = refersTo::Interaction actualGate::Gate+ argument::Action+ ;
InteractionUse = PartDecomposition ;
InteractionUse = refersTo::Interaction actualGate::Gate+ argument::Action+ ;
InteractionFragment = ExecutionSpecification ;
InteractionFragment = InteractionUse ;
InteractionFragment = OccurrenceSpecification ;
InteractionFragment = Interaction ;
InteractionFragment = InteractionOperand ;
ConnectorKind = assembly:: ;
ConnectorKind = delegation:: ;
Pseudostate = kind::PseudostateKind stateMachine::StateMachine state::State ;
PseudostateKind = initial:: ;
PseudostateKind = deepHistory:: ;
PseudostateKind = shallowHistory:: ;
PseudostateKind = join:: ;
PseudostateKind = fork:: ;
PseudostateKind = junction:: ;
PseudostateKind = choice:: ;
PseudostateKind = entryPoint:: ;
PseudostateKind = exitPoint:: ;
PseudostateKind = terminate:: ;
ConnectionPointReference = entry::Pseudostate+ exit::Pseudostate+ state::State ;
StructuredActivityNode = variable::Variable+ edge::ActivityEdge+ mustIsolate::MARTE_PrimitivesTypes/Boolean node::ActivityNode+ ;
Variable = scope::StructuredActivityNode activityScope::Activity ;
Activity = structuredNode::StructuredActivityNode+ variable::Variable+ node::ActivityNode+ isReadOnly::MARTE_PrimitivesTypes/Boolean edge::ActivityEdge+ partition::ActivityPartition+ isSingleExecution::MARTE_PrimitivesTypes/Boolean group::ActivityGroup+ ;
OccurrenceSpecification = toBefore::GeneralOrdering+ event::Event toAfter::GeneralOrdering+ ;
DeploymentSpecification = deploymentLocation::MARTE_PrimitivesTypes/String executionLocation::MARTE_PrimitivesTypes/String deployment::Deployment ;
Gate = message::Message ;
Artifact = DeploymentSpecification ;
Artifact = fileName::MARTE_PrimitivesTypes/String nestedArtifact::Artifact+ manifestation::Manifestation+ ownedOperation::Operation+ ownedAttribute::Property+ ;
GeneralOrdering = before::OccurrenceSpecification after::OccurrenceSpecification ;
Manifestation = utilizedElement::PackageableElement ;
InteractionOperand = guard::InteractionConstraint fragment::InteractionFragment+ ;
InteractionConstraint = minint::ValueSpecification maxint::ValueSpecification ;
