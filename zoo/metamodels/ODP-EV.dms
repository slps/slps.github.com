EnterpriseObject = ODPSystem ;
EnterpriseObject = Party ;
EnterpriseObject = CommunityObject ;
EnterpriseObject = eoConfigurations::Community+ eoRoles::Role+ eoArtefactActions::Action+ eoResourceActions::Action+ eoActorActions::Action+ eoPolicy::Policy+ eoEOAR::EO_A_R+ eoEOPD::EO_P_D ;
ODPSystem = odpBehaviour::Scope odpObjectives::Objective+ odpSpecifier::EnterpriseSpecification ;
Party = ptyAccountableAction::AccountableAction+ ptyEOPD::EO_P_D ;
Objective = objFulfiller::ODPSystem objSpecifier::Contract objRefiners::Objective+ objRefinement::Objective objAchievers::Process+ objFulfillers::Behaviour+ ;
Scope = scOdpSystem::ODPSystem ;
EnterpriseSpecification = esDescribedSystems::ODPSystem+ esContext::FieldOfApplication ;
FieldOfApplication = faEnterpriseSpecifications::EnterpriseSpecification ;
Policy = PolicyEnvelope ;
Policy = PolicyValue ;
Policy = AssigmentPolicy ;
Policy = poSpecifier::Contract poOwner::Community poProcess::Process+ poBehaviour::Behaviour+ poChanger::Behaviour+ poRole::Role+ poEnterpriseObject::EnterpriseObject+ ;
PolicyEnvelope = pePolicySetter::Behaviour peBehaviour::Behaviour peValues::PolicyValue+ peCurrentValue::PolicyValue ;
PolicyValue = pvValue::PolicyEnvelope ;
AssigmentPolicy = apEOAR::EO_A_R+ ;
Contract = ctPolicies::Policy ctObjective::Objective ctBehaviours::Behaviour+ ;
Process = prObjectives::Objective+ prDetails::Step+ prRefinement::Step prConstrainer::Policy+ ;
Step = Action ;
Step = stGraphs::Process+ stAbstraction::Process ;
Action = AccountableAction ;
Action = actBehaviours::Behaviour+ actArtefactRoleFillers::EnterpriseObject+ actResourceRoleFillers::EnterpriseObject+ actActorRoleFillers::EnterpriseObject+ ;
AccountableAction = Prescription ;
AccountableAction = Commitment ;
AccountableAction = Declaration ;
AccountableAction = Evaluation ;
AccountableAction = Delegation ;
Prescription = aaAccountableParty::Party+ ;
Commitment = aaAccountableParty::Party+ ;
Declaration = aaAccountableParty::Party+ ;
Evaluation = aaAccountableParty::Party+ ;
Delegation = dlgEOPD::EO_P_D ;
Behaviour = Violation ;
Behaviour = beObjectives::Objective+ beSpecifiers::Contract+ beActions::Action+ beIdentifier::Role bePolicyEnvelope::PolicyEnvelope beConstrainer::PolicyEnvelope bePolicyConstrainer::Policy+ bePolicy::Policy+ ;
Community = coAbstraction::CommunityObject coMembers::EnterpriseObject+ coCommunityRoles::Role+ coPolicy::Policy+ ;
CommunityObject = cobjRefinement::Community ;
Role = InterfaceRole ;
Role = roleBehaviour::Behaviour roleSpecifier::Community rolefillers::EnterpriseObject+ roleConstrainer::Policy+ roleEOAR::EO_A_R+ ;
InterfaceRole = roleBehaviour::Behaviour roleSpecifier::Community rolefillers::EnterpriseObject+ roleConstrainer::Policy+ roleEOAR::EO_A_R+ ;
Violation = vioProhibitor::Rule ;
Rule = Obligation ;
Rule = Authorisation ;
Rule = Permission ;
Rule = Prohibition ;
Obligation = ruViolation::Violation+ ;
Authorisation = ruViolation::Violation+ ;
Permission = ruViolation::Violation+ ;
Prohibition = ruViolation::Violation+ ;
EO_A_R = eoarSubject::EnterpriseObject+ eoarSubjectRole::Role+ eoarGovernor::AssigmentPolicy+ ;
EO_P_D = eopdAgent::EnterpriseObject eopdPrincipal::Party eopdAction::Delegation ;
