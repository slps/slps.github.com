UEMLObject:
        UEMLModel
UEMLObject:
        Port
UEMLObject:
        Flow
UEMLObject:
        Activity
UEMLObject:
        Object
UEMLObject:
        has::Geometry model::UEMLModel
UEMLModel:
        contains::UEMLObject+
Geometry:
        object::UEMLObject
Port:
        ResourceRole
Port:
        Anchor
Port:
        ResourceRole
        Anchor
Flow:
        ResourceFlow
Flow:
        IOFlow
Flow:
        ControlFlow
Flow:
        associationConnector::AssociationConnector
Activity:
        Process
Activity:
        Task
Activity:
        resourceRole::ResourceRole+ parent::Process hasOutput::OutputPort
Object:
        InformationObject
Object:
        Resource
Object:
        ioFlow::IOFlow
InformationObject:
        controlFlow::ControlFlow
Resource:
        MaterialResource
Resource:
        HumanResource
Resource:
        Service
Resource:
        Agent
Resource:
        carries::ResourceFlow plays::ResourceRole+
MaterialResource:
        carries::ResourceFlow plays::ResourceRole+
HumanResource:
        carries::ResourceFlow plays::ResourceRole+
ResourceFlow:
        resourceCarries::Resource+
IOFlow:
        carries::Object+
ControlFlow:
        TriggerFlow
ControlFlow:
        ConstraintFlow
ControlFlow:
        carries::InformationObject+
TriggerFlow:
        carries::InformationObject+
ConstraintFlow:
        carries::InformationObject+
ResourceRole:
        resourcePlays::Resource+ roleQualifier::RoleType in::Activity
RoleType:
        EPSILON
Anchor:
        OutputPort
Anchor:
        InputPort
Anchor:
        ConnectionOperator
Anchor:
        target::AssociationConnector origin::AssociationConnector
OutputPort:
        activity::Activity
InputPort:
        target::AssociationConnector origin::AssociationConnector
ConnectionOperator:
        target::AssociationConnector origin::AssociationConnector
AssociationConnector:
        origin::Anchor+ target::Anchor+ classAssociation::Flow
Process:
        child::Activity fulfills::Contract+ realises::Service
Service:
        process::Process
Agent:
        obliger::Commitment claimer::Commitment has_parties::Contract
Contract:
        process::Process+ agent::Agent collection_of::Commitment+
Task:
        fulfills::Commitment+
Commitment:
        task::Task agentO::Agent agentC::Agent contract::Contract
