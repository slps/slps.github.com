module Main

exports
  sorts
        Tree Attributes Attrs Attr Associativity Symbol Symbols CharRanges CharRange Args Production 
  context-free syntax
        Tree Annotation -> Tree

        "no-attrs" -> Attributes

        "attrs" "(" attributes::Attrs ")" -> Attributes

        "[" (Attr ("," Attr)*) "]" -> Attrs

        "assoc" "(" associativity::Associativity ")" -> Attr

        "term" "(" aterm::ATerm ")" -> Attr

        "id" "(" module-name::StrCon ")" -> Attr

        "bracket" -> Attr

        "reject" -> Attr

        "prefer" -> Attr

        "avoid" -> Attr

        "left" -> Associativity

        "right" -> Associativity

        "assoc" -> Associativity

        "non-assoc" -> Associativity

        "empty" -> Symbol

        "iter-sep-n" "(" symbol::Symbol comma1::"," separator::Symbol comma2::"," number::NatCon ")" -> Symbol

        "layout" -> Symbol

        "[" (Symbol ("," Symbol)*)? "]" -> Symbols

        "[" (CharRange ("," CharRange)*)? "]" -> CharRanges

        integer::NatCon -> CharRange

        character::NatCon -> Tree

        "[" (Tree ("," Tree)*)? "]" -> Args

        "prod" "(" lhs::Symbols comma1::"," rhs::Symbol comma2::"," attributes::Attributes ")" -> Production
