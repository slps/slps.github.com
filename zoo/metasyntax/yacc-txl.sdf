module Main

exports
  sorts
        Yac-id Dot-id Yac-tokenDefinition Yac-tokdef EndSection Yac-literal Bar-yac-literals ProductionDefinition LiteralsAndTypes BarLiteralsAndTypes LiteralOrType Prec Ccode Ccode-or-token Type PlusOrStar Yac-idOrQuotedLiteral Literal QuotedLiteral UnquotedLiteral Program Yacc-Txl-Grammar Cdefinitions TokenDefinitions TokenDefinition ProductionDefinitions 
  context-free syntax
        Id Dot-id* -> Yac-id

        "." Id -> Dot-id

        Yac-keyword Yac-tokdef+ NL -> Yac-tokenDefinition

        Id -> Yac-tokdef
        Charlit -> Yac-tokdef

        "%%" NL NL -> EndSection

        Yac-id -> Yac-literal
        Charlit -> Yac-literal

        "|" SP Yac-literal* NL -> Bar-yac-literals

        Yac-id ":" NL IN SP SP LiteralsAndTypes BarLiteralsAndTypes* ";"? NL EX -> ProductionDefinition
        "define" Yac-id NL IN SP SP LiteralsAndTypes NL BarLiteralsAndTypes* EX "end" "define" NL NL -> ProductionDefinition

        LiteralOrType* -> LiteralsAndTypes

        "|" SP LiteralsAndTypes NL -> BarLiteralsAndTypes
        SP Bar-yac-literals NL -> BarLiteralsAndTypes

        Literal -> LiteralOrType
        Type -> LiteralOrType
        Prec -> LiteralOrType
        Ccode -> LiteralOrType

        Yac-keyword Yac-id -> Prec

        "{" Ccode-or-token* "}" -> Ccode

        Ccode -> Ccode-or-token
        Token -> Ccode-or-token

        SP "[" Yac-id "]" -> Type
        SP "[" "opt" Yac-idOrQuotedLiteral "]" -> Type
        SP "[" "repeat" Yac-idOrQuotedLiteral PlusOrStar? "]" -> Type
        SP "[" "list" Yac-idOrQuotedLiteral PlusOrStar? "]" -> Type

        "+" -> PlusOrStar
        "*" -> PlusOrStar

        Yac-id -> Yac-idOrQuotedLiteral
        QuotedLiteral -> Yac-idOrQuotedLiteral

        QuotedLiteral -> Literal
        UnquotedLiteral -> Literal

        SP "'" UnquotedLiteral SP -> QuotedLiteral

        Yac-id -> UnquotedLiteral
        Charlit -> UnquotedLiteral
        Stringlit -> UnquotedLiteral
        Number -> UnquotedLiteral
        Key -> UnquotedLiteral

        Yacc-Txl-Grammar -> Program

        TokenDefinitions ProductionDefinitions Cdefinitions -> Yacc-Txl-Grammar

        EndSection Token* -> Cdefinitions

        TokenDefinition* EndSection? -> TokenDefinitions

        Yac-tokenDefinition -> TokenDefinition
        "define" Yac-id NL IN Yac-tokenDefinition EX "end" "define" NL NL -> TokenDefinition

        ProductionDefinition* -> ProductionDefinitions
