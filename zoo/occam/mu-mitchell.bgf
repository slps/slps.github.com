<?xml version="1.0" encoding="UTF-8"?>

<xns1:grammar xmlns:xns1="http://planet-sl.org/bgf">
  <xns1:production>
    <nonterminal>translation-unit</nonterminal>
    <xns1:expression>
      <optional>
	<xns1:expression>
	  <nonterminal>declaration-seq</nonterminal>
	</xns1:expression>
      </optional>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>primary-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>literal</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>this</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>id-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>unqualified-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>qualified-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unqualified-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>operator-function-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>conversion-function-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>qualified-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unqualified-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>operator-function-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>nested-name-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-or-namespace-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-or-namespace-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>class-or-namespace-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>postfix-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>primary-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>simple-type-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>.</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>.</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pseudo-destructor-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pseudo-destructor-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>++</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>--</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>dynamic_cast</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>static_cast</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>reinterpret_cast</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>const_cast</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typeid</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typeid</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>expression-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>pseudo-destructor-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unary-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>postfix-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>++</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>--</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unary-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>sizeof</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unary-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>sizeof</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>new-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>delete-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unary-operator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>!</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>new-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>new</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-placement</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>new-type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>new</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-placement</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>new-placement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>new-type-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>new-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>ptr-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>new-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-new-declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>direct-new-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-new-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>new-initializer</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>delete-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>delete</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>delete</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>cast-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>unary-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>pm-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>.*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-&gt;*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cast-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>multiplicative-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>/</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>%</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>pm-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>additive-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>multiplicative-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>shift-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>additive-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>relational-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>shift-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>equality-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>equality-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>==</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>equality-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>!=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>relational-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>and-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>equality-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>and-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>equality-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exclusive-or-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>and-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>exclusive-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>^</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>and-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>inclusive-or-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>exclusive-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>inclusive-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>|</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>exclusive-or-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>logical-and-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>inclusive-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>logical-and-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>inclusive-or-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>logical-or-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>logical-and-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>logical-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>||</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>logical-and-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>conditional-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>logical-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>logical-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>?</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>assignment-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>conditional-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>logical-or-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>throw-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>assignment-operator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>/=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>%=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;&gt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;&lt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>^=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>|=</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>constant-expression</nonterminal>
    <xns1:expression>
      <nonterminal>conditional-expression</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>labeled-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>selection-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>iteration-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>jump-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>try-block</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>labeled-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>case</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>default</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>expression-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>compound-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>statement-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>statement-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>selection-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>if</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>condition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>if</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>condition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>else</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>switch</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>condition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>condition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>iteration-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>while</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>condition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>do</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>while</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>for</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>for-init-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>condition</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>for-init-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>expression-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>simple-declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>jump-statement</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>break</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>continue</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>return</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>goto</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration-statement</nonterminal>
    <xns1:expression>
      <nonterminal>block-declaration</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>block-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>explicit-instantiation</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>explicit-specialization</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>linkage-specification</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-definition</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>block-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>simple-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>asm-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-alias-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>using-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>using-directive</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>simple-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>decl-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>init-declarator-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>decl-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>storage-class-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>friend</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typedef</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>decl-specifier-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>decl-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>decl-specifier</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>storage-class-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>auto</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>register</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>static</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>extern</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>mutable</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>inline</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>virtual</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>explicit</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>typedef-name</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>simple-type-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enum-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>elaborated-type-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>cv-qualifier</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>simple-type-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>char</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>wchar_t</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>bool</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>short</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>int</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>long</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>signed</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>unsigned</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>float</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>double</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>void</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enum-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>typedef-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>elaborated-type-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-key</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>enum</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enum-name</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enum-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>enum</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>enumerator-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enumerator-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>enumerator-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enumerator-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enumerator-definition</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enumerator-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>enumerator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>enumerator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>enumerator</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>namespace-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>original-namespace-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-alias</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>original-namespace-name</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>namespace-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>named-namespace-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unnamed-namespace-definition</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>named-namespace-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>original-namespace-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>extension-namespace-definition</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>original-namespace-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>namespace</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-body</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>extension-namespace-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>namespace</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>original-namespace-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-body</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>unnamed-namespace-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>namespace</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-body</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>namespace-body</nonterminal>
    <xns1:expression>
      <optional>
	<xns1:expression>
	  <nonterminal>declaration-seq</nonterminal>
	</xns1:expression>
      </optional>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>namespace-alias</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>namespace-alias-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>namespace</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>qualified-namespace-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>qualified-namespace-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>using-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>using</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>typename</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unqualified-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>using</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>::</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unqualified-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>using-directive</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>using</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>namespace</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>namespace-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>asm-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>asm</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>string-literal</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>linkage-specification</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>extern</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>string-literal</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>declaration-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>extern</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>string-literal</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>init-declarator-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>init-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>init-declarator-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>init-declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>init-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>direct-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>ptr-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>direct-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declarator-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration-clause</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>cv-qualifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>exception-specification</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>ptr-operator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>cv-qualifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>cv-qualifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>cv-qualifier-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>cv-qualifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>cv-qualifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>cv-qualifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>const</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>volatile</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>declarator-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-specifier-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>type-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>abstract-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>ptr-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>direct-abstract-declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>direct-abstract-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>direct-abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration-clause</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>cv-qualifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>exception-specification</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>direct-abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>constant-expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>]</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>abstract-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-declaration-clause</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>parameter-declaration-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>...</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>...</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-declaration-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>parameter-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>parameter-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>decl-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>decl-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>decl-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>decl-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>abstract-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-definition</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>decl-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>ctor-initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-body</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>decl-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-try-block</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-body</nonterminal>
    <xns1:expression>
      <nonterminal>compound-statement</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>initializer</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>initializer-clause</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>expression-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>initializer-clause</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>initializer-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>,</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>initializer-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>initializer-clause</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>initializer-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>initializer-clause</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>class-name</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>class-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-head</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>{</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>member-specification</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>}</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>class-head</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>class-key</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>base-clause</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-key</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>base-clause</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-key</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>base-clause</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>class-key</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>class</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>struct</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>union</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>member-specification</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>member-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>member-specification</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>access-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>member-specification</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>member-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>decl-specifier-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>member-declarator-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-definition</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>;</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>nested-name-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>template</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>unqualified-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>using-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>member-declarator-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>member-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>member-declarator-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>member-declarator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>member-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>pure-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>constant-initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>pure-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>0</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>constant-initializer</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>constant-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>base-clause</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>base-specifier-list</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>base-specifier-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>base-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>base-specifier-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>base-specifier</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>base-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>virtual</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>access-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>access-specifier</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>virtual</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>access-specifier</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>private</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>protected</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>public</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>conversion-function-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>operator</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>conversion-type-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>conversion-type-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>conversion-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>conversion-declarator</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>ptr-operator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>conversion-declarator</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>ctor-initializer</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>:</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>mem-initializer-list</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>mem-initializer-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>mem-initializer</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>mem-initializer</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>mem-initializer-list</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>mem-initializer</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>mem-initializer-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>expression-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>mem-initializer-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>::</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>nested-name-specifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>class-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>identifier</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>operator-function-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>operator</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>operator</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>operator</nonterminal>
    <xns1:expression>
      <choice>
	<xns1:expression>
	  <terminal>new</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>delete</terminal>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>new</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <sequence>
	    <xns1:expression>
	      <terminal>delete</terminal>
	    </xns1:expression>
	    <xns1:expression>
	      <terminal>[]</terminal>
	    </xns1:expression>
	  </sequence>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>/</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>%</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>^</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>|</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>~</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>!</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>+=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>*=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>/=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>%=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>^=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>|=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;&gt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;&lt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>==</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>!=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&#38;&#38;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>||</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>++</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>--</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-&gt;*</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>-&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>()</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>[]</terminal>
	</xns1:expression>
      </choice>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <terminal>export</terminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-parameter-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-parameter-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>template-parameter</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-parameter-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-parameter</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-parameter</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-parameter</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>parameter-declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-parameter</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>class</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>class</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>typename</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-parameter-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>class</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-parameter-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>class</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>identifier</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>=</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-id</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>template-name</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>template-argument-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-name</nonterminal>
    <xns1:expression>
      <nonterminal>identifier</nonterminal>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-argument-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>template-argument</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-argument-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>template-argument</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>template-argument</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>assignment-expression</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>id-expression</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>explicit-instantiation</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>explicit-specialization</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>template</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&lt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>&gt;</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declaration</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>try-block</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>try</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound-statement</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>handler-seq</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>function-try-block</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>try</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>ctor-initializer</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>function-body</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>handler-seq</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>handler-seq</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>handler</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>handler-seq</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>handler</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>catch</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>exception-declaration</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>compound-statement</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exception-declaration</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>abstract-declarator</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-specifier-seq</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>...</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>throw-expression</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>throw</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>assignment-expression</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>exception-specification</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <terminal>throw</terminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>(</terminal>
	</xns1:expression>
	<xns1:expression>
	  <optional>
	    <xns1:expression>
	      <nonterminal>type-id-list</nonterminal>
	    </xns1:expression>
	  </optional>
	</xns1:expression>
	<xns1:expression>
	  <terminal>)</terminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
  <xns1:production>
    <nonterminal>type-id-list</nonterminal>
    <xns1:expression>
      <sequence>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id-list</nonterminal>
	</xns1:expression>
	<xns1:expression>
	  <terminal>,</terminal>
	</xns1:expression>
	<xns1:expression>
	  <nonterminal>type-id</nonterminal>
	</xns1:expression>
      </sequence>
    </xns1:expression>
  </xns1:production>
</xns1:grammar>