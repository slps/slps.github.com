program = trolley checkout done ;
trolley = TROLLEY CID CONTAINS declarations* ;
checkout = CHECKOUT statements ;
done = DONE SEMI ;
declarations = constant ;
declarations = variable ;
declarations = procedure ;
constant = CONSTANT CID COLON (INTEGER | DOUBLE) DEFINE expression SEMI ;
variable = VARIABLE (ID | CID) COLON (INTEGER | DOUBLE) SEMI ;
procedure = PROCEDURE (ID | CID) LEFTBRACKET parameters RIGHTBRACKET COLON numbervalues DEFINE statements ;
parameters = (parameter (COMMA parameter)*)? ;
parameter = (ID | CONSTANT) COLON numbervalues ;
statements = (statement | (CURLYLEFT statement statement* CURLYRIGHT)) SEMI ;
statement = (ifstatement | whilestatement | skip | assignment) SEMI ;
ifstatement = IF LEFTBRACKET expression RIGHTBRACKET THEN statements ELSE statements ;
whilestatement = WHILE expression DO statements ;
skip = SKIP ;
assignment = (ID | CID) DEFINE expression ;
atom = INT ;
atom = DOU ;
atom = ID ;
atom = CID ;
atom = LEFTBRACKET expression RIGHTBRACKET ;
expo = atom (EXPONENTIATION atom)? ;
negation = (ADDITION | SUBTRACTION)? expo ;
divide = negation (DIVISION negation)? ;
multiply = divide (MULTIPLICATION divide)* ;
addition = multiply (ADDITION multiply)* ;
subtraction = addition (SUBTRACTION addition)* ;
booleanop = subtraction (relationships subtraction)? ;
conjunction = booleanop (AND booleanop)* ;
disjunction = conjunction (OR conjunction)* ;
conditexpr = disjunction (QUESTION disjunction COLON disjunction)* ;
runproc = conditexpr ;
runproc = (ID | CID) LEFTBRACKET (expression (COMMA expression)*)? RIGHTBRACKET ;
expression = runproc ;
numbervalues = INTEGER ;
numbervalues = DOUBLE ;
INT = ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')+ ;
DOU = INT? '.' ('0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9')* EXPONENT? ;
EXPONENT = ('e' | 'E') ('+' | '-') INT ;
relationships = EQUALITY ;
relationships = NONEQUALITY ;
relationships = GREATERTHAN ;
relationships = LESSTHAN ;
relationships = GREATEROREQUAL ;
relationships = LESSOREQUAL ;
DONE = 'done' ;
SKIP = 'skip' ;
TROLLEY = 'trolley' ;
CHECKOUT = 'checkout' ;
CONTAINS = 'contains' ;
CONSTANT = 'const' ;
VARIABLE = 'var' ;
PROCEDURE = 'proc' ;
INTEGER = 'int' ;
DOUBLE = 'double' ;
LEFTBRACKET = '(' ;
RIGHTBRACKET = ')' ;
SEMI = ';' ;
CURLYLEFT = '{' ;
CURLYRIGHT = '}' ;
QUESTION = '?' ;
COLON = ':' ;
DEFINE = ':=' ;
COMMA = ',' ;
IF = 'if' ;
WHILE = 'while' ;
DO = 'do' ;
THEN = 'then' ;
ELSE = 'else' ;
ADDITION = '+' ;
SUBTRACTION = '-' ;
DIVISION = '\\' ;
MULTIPLICATION = '*' ;
EXPONENTIATION = '**' ;
OR = '\\/' ;
AND = '/\\' ;
EQUALITY = '==' ;
NONEQUALITY = '!=' ;
GREATERTHAN = '>' ;
LESSTHAN = '<' ;
GREATEROREQUAL = '>=' ;
LESSOREQUAL = '<=' ;
CID = ('A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '_') ('A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '_')* ;
ID = ('a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '_') ('a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '_')* ;
WS = (' ' | '\t' | '\r' | '\n')+ ;
COMMENT = '/*' ANY* '*/' ;
